{"ast":null,"code":"import _get from \"/Users/deepakrajmohanraj/Desktop/UB/portfolio-website/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/deepakrajmohanraj/Desktop/UB/portfolio-website/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _construct from \"/Users/deepakrajmohanraj/Desktop/UB/portfolio-website/node_modules/@babel/runtime/helpers/esm/construct.js\";\nimport _slicedToArray from \"/Users/deepakrajmohanraj/Desktop/UB/portfolio-website/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/deepakrajmohanraj/Desktop/UB/portfolio-website/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _wrapNativeSuper from \"/Users/deepakrajmohanraj/Desktop/UB/portfolio-website/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nimport _asyncToGenerator from \"/Users/deepakrajmohanraj/Desktop/UB/portfolio-website/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _inherits from \"/Users/deepakrajmohanraj/Desktop/UB/portfolio-website/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/deepakrajmohanraj/Desktop/UB/portfolio-website/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _toConsumableArray from \"/Users/deepakrajmohanraj/Desktop/UB/portfolio-website/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/deepakrajmohanraj/Desktop/UB/portfolio-website/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/deepakrajmohanraj/Desktop/UB/portfolio-website/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _regeneratorRuntime from \"/Users/deepakrajmohanraj/Desktop/UB/portfolio-website/node_modules/@babel/runtime/regenerator/index.js\";\nimport { _registerComponent, registerVersion, _getProvider, getApp, _removeServiceInstance, SDK_VERSION } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { FirebaseError, getDefaultEmulatorHostnameAndPort, createMockUserToken, getModularInstance, deepEqual } from '@firebase/util';\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\n\nvar d = /*#__PURE__*/function () {\n  function d(t) {\n    _classCallCheck(this, d);\n\n    this.uid = t;\n  }\n\n  _createClass(d, [{\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */\n\n  }, {\n    key: \"toKey\",\n    value: function toKey() {\n      return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t.uid === this.uid;\n    }\n  }]);\n\n  return d;\n}();\n/** A user with a null UID. */\n\n\nd.UNAUTHENTICATED = new d(null), // TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nd.GOOGLE_CREDENTIALS = new d(\"google-credentials-uid\"), d.FIRST_PARTY = new d(\"first-party-uid\"), d.MOCK_USER = new d(\"mock-user\");\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar w = \"9.23.0\";\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar m = new Logger(\"@firebase/firestore\");\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */\n\nfunction p(t) {\n  m.setLogLevel(t);\n}\n\nfunction y(t) {\n  if (m.logLevel <= LogLevel.DEBUG) {\n    for (var _len = arguments.length, e = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      e[_key - 1] = arguments[_key];\n    }\n\n    var n = e.map(v);\n    m.debug.apply(m, [\"Firestore (\".concat(w, \"): \").concat(t)].concat(_toConsumableArray(n)));\n  }\n}\n\nfunction g(t) {\n  if (m.logLevel <= LogLevel.ERROR) {\n    for (var _len2 = arguments.length, e = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      e[_key2 - 1] = arguments[_key2];\n    }\n\n    var n = e.map(v);\n    m.error.apply(m, [\"Firestore (\".concat(w, \"): \").concat(t)].concat(_toConsumableArray(n)));\n  }\n}\n/**\n * @internal\n */\n\n\nfunction _(t) {\n  if (m.logLevel <= LogLevel.WARN) {\n    for (var _len3 = arguments.length, e = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      e[_key3 - 1] = arguments[_key3];\n    }\n\n    var n = e.map(v);\n    m.warn.apply(m, [\"Firestore (\".concat(w, \"): \").concat(t)].concat(_toConsumableArray(n)));\n  }\n}\n/**\n * Converts an additional log parameter to a string representation.\n */\n\n\nfunction v(t) {\n  if (\"string\" == typeof t) return t;\n\n  try {\n    return e = t, JSON.stringify(e);\n  } catch (e) {\n    // Converting to JSON failed, just log the object directly\n    return t;\n  }\n  /**\n  * @license\n  * Copyright 2020 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  /** Formats an object as a JSON string, suitable for logging. */\n\n\n  var e;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */\n\n\nfunction b() {\n  var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Unexpected state\";\n  // Log the failure in addition to throw an exception, just in case the\n  // exception is swallowed.\n  var e = \"FIRESTORE (\".concat(w, \") INTERNAL ASSERTION FAILED: \") + t; // NOTE: We don't use FirestoreError here because these are internal failures\n  // that cannot be handled by the user. (Also it would create a circular\n  // dependency between the error and assert modules which doesn't work.)\n\n  throw g(e), new Error(e);\n}\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */\n\n\nfunction E(t, e) {\n  t || b();\n}\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */\n\n\nfunction I(t, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n  return t;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar T = \"ok\",\n    A = \"cancelled\",\n    _R = \"unknown\",\n    P = \"invalid-argument\",\n    V = \"deadline-exceeded\",\n    $ = \"not-found\",\n    N = \"already-exists\",\n    D = \"permission-denied\",\n    F = \"unauthenticated\",\n    x = \"resource-exhausted\",\n    S = \"failed-precondition\",\n    q = \"aborted\",\n    O = \"out-of-range\",\n    k = \"unimplemented\",\n    C = \"internal\",\n    M = \"unavailable\",\n    L = \"data-loss\";\n/** An error returned by a Firestore operation. */\n\nvar U = /*#__PURE__*/function (_FirebaseError) {\n  _inherits(U, _FirebaseError);\n\n  var _super = _createSuper(U);\n\n  /** @hideconstructor */\n  function U(\n  /**\n   * The backend error code associated with this error.\n   */\n  t,\n  /**\n   * A custom error description.\n   */\n  e) {\n    var _this;\n\n    _classCallCheck(this, U);\n\n    _this = _super.call(this, t, e), _this.code = t, _this.message = e, // HACK: We write a toString property directly because Error is not a real\n    // class and so inheritance does not work correctly. We could alternatively\n    // do the same \"back-door inheritance\" trick that FirebaseError does.\n    _this.toString = function () {\n      return \"\".concat(_this.name, \": [code=\").concat(_this.code, \"]: \").concat(_this.message);\n    };\n    return _this;\n  }\n\n  return _createClass(U);\n}(FirebaseError);\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar j = /*#__PURE__*/_createClass(function j() {\n  var _this2 = this;\n\n  _classCallCheck(this, j);\n\n  this.promise = new Promise(function (t, e) {\n    _this2.resolve = t, _this2.reject = e;\n  });\n});\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar B = /*#__PURE__*/_createClass(function B(t, e) {\n  _classCallCheck(this, B);\n\n  this.user = e, this.type = \"OAuth\", this.headers = new Map(), this.headers.set(\"Authorization\", \"Bearer \".concat(t));\n});\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */\n\n\nvar Q = /*#__PURE__*/function () {\n  function Q() {\n    _classCallCheck(this, Q);\n  }\n\n  _createClass(Q, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return Promise.resolve(null);\n    }\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }, {\n    key: \"start\",\n    value: function start(t, e) {\n      // Fire with initial user.\n      t.enqueueRetryable(function () {\n        return e(d.UNAUTHENTICATED);\n      });\n    }\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {}\n  }]);\n\n  return Q;\n}();\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */\n\n\nvar z = /*#__PURE__*/function () {\n  function z(t) {\n    _classCallCheck(this, z);\n\n    this.token = t,\n    /**\n     * Stores the listener registered with setChangeListener()\n     * This isn't actually necessary since the UID never changes, but we use this\n     * to verify the listen contract is adhered to in tests.\n     */\n    this.changeListener = null;\n  }\n\n  _createClass(z, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return Promise.resolve(this.token);\n    }\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }, {\n    key: \"start\",\n    value: function start(t, e) {\n      var _this3 = this;\n\n      this.changeListener = e, // Fire with initial user.\n      t.enqueueRetryable(function () {\n        return e(_this3.token.user);\n      });\n    }\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {\n      this.changeListener = null;\n    }\n  }]);\n\n  return z;\n}();\n/** Credential provider for the Lite SDK. */\n\n\nvar W = /*#__PURE__*/function () {\n  function W(t) {\n    var _this4 = this;\n\n    _classCallCheck(this, W);\n\n    this.auth = null, t.onInit(function (t) {\n      _this4.auth = t;\n    });\n  }\n\n  _createClass(W, [{\n    key: \"getToken\",\n    value: function getToken() {\n      var _this5 = this;\n\n      return this.auth ? this.auth.getToken().then(function (t) {\n        return t ? (E(\"string\" == typeof t.accessToken), new B(t.accessToken, new d(_this5.auth.getUid()))) : null;\n      }) : Promise.resolve(null);\n    }\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }, {\n    key: \"start\",\n    value: function start(t, e) {}\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {}\n  }]);\n\n  return W;\n}();\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */\n\n\nvar G = /*#__PURE__*/function () {\n  function G(t, e, n) {\n    _classCallCheck(this, G);\n\n    this.t = t, this.i = e, this.o = n, this.type = \"FirstParty\", this.user = d.FIRST_PARTY, this.u = new Map();\n  }\n  /**\n   * Gets an authorization token, using a provided factory function, or return\n   * null.\n   */\n\n\n  _createClass(G, [{\n    key: \"h\",\n    value: function h() {\n      return this.o ? this.o() : null;\n    }\n  }, {\n    key: \"headers\",\n    get: function get() {\n      this.u.set(\"X-Goog-AuthUser\", this.t); // Use array notation to prevent minification\n\n      var t = this.h();\n      return t && this.u.set(\"Authorization\", t), this.i && this.u.set(\"X-Goog-Iam-Authorization-Token\", this.i), this.u;\n    }\n  }]);\n\n  return G;\n}();\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */\n\n\nvar K = /*#__PURE__*/function () {\n  function K(t, e, n) {\n    _classCallCheck(this, K);\n\n    this.t = t, this.i = e, this.o = n;\n  }\n\n  _createClass(K, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return Promise.resolve(new G(this.t, this.i, this.o));\n    }\n  }, {\n    key: \"start\",\n    value: function start(t, e) {\n      // Fire with initial uid.\n      t.enqueueRetryable(function () {\n        return e(d.FIRST_PARTY);\n      });\n    }\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {}\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }]);\n\n  return K;\n}();\n\nvar Y = /*#__PURE__*/_createClass(function Y(t) {\n  _classCallCheck(this, Y);\n\n  this.value = t, this.type = \"AppCheck\", this.headers = new Map(), t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n});\n/** AppCheck token provider for the Lite SDK. */\n\n\nvar H = /*#__PURE__*/function () {\n  function H(t) {\n    var _this6 = this;\n\n    _classCallCheck(this, H);\n\n    this.l = t, this.appCheck = null, t.onInit(function (t) {\n      _this6.appCheck = t;\n    });\n  }\n\n  _createClass(H, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return this.appCheck ? this.appCheck.getToken().then(function (t) {\n        return t ? (E(\"string\" == typeof t.token), new Y(t.token)) : null;\n      }) : Promise.resolve(null);\n    }\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }, {\n    key: \"start\",\n    value: function start(t, e) {}\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {}\n  }]);\n\n  return H;\n}();\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar J = /*#__PURE__*/_createClass(\n/**\n * Constructs a DatabaseInfo using the provided host, databaseId and\n * persistenceKey.\n *\n * @param databaseId - The database to use.\n * @param appId - The Firebase App Id.\n * @param persistenceKey - A unique identifier for this Firestore's local\n * storage (used in conjunction with the databaseId).\n * @param host - The Firestore backend host to connect to.\n * @param ssl - Whether to use SSL when connecting.\n * @param forceLongPolling - Whether to use the forceLongPolling option\n * when using WebChannel as the network transport.\n * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n * option when using WebChannel as the network transport.\n * @param longPollingOptions Options that configure long-polling.\n * @param useFetchStreams Whether to use the Fetch API instead of\n * XMLHTTPRequest\n */\nfunction J(t, e, n, r, s, i, o, u, c) {\n  _classCallCheck(this, J);\n\n  this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, this.forceLongPolling = i, this.autoDetectLongPolling = o, this.longPollingOptions = u, this.useFetchStreams = c;\n});\n/** The default database name for a project. */\n\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\n\n\nvar X = /*#__PURE__*/function () {\n  function X(t, e) {\n    _classCallCheck(this, X);\n\n    this.projectId = t, this.database = e || \"(default)\";\n  }\n\n  _createClass(X, [{\n    key: \"isDefaultDatabase\",\n    get: function get() {\n      return \"(default)\" === this.database;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t instanceof X && t.projectId === this.projectId && t.database === this.database;\n    }\n  }], [{\n    key: \"empty\",\n    value: function empty() {\n      return new X(\"\", \"\");\n    }\n  }]);\n\n  return X;\n}();\n/**\n * Path represents an ordered sequence of string segments.\n */\n\n\nvar Z = /*#__PURE__*/function () {\n  function Z(t, e, n) {\n    _classCallCheck(this, Z);\n\n    void 0 === e ? e = 0 : e > t.length && b(), void 0 === n ? n = t.length - e : n > t.length - e && b(), this.segments = t, this.offset = e, this.len = n;\n  }\n\n  _createClass(Z, [{\n    key: \"length\",\n    get: function get() {\n      return this.len;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return 0 === Z.comparator(this, t);\n    }\n  }, {\n    key: \"child\",\n    value: function child(t) {\n      var e = this.segments.slice(this.offset, this.limit());\n      return t instanceof Z ? t.forEach(function (t) {\n        e.push(t);\n      }) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */\n\n  }, {\n    key: \"limit\",\n    value: function limit() {\n      return this.offset + this.length;\n    }\n  }, {\n    key: \"popFirst\",\n    value: function popFirst(t) {\n      return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n  }, {\n    key: \"popLast\",\n    value: function popLast() {\n      return this.construct(this.segments, this.offset, this.length - 1);\n    }\n  }, {\n    key: \"firstSegment\",\n    value: function firstSegment() {\n      return this.segments[this.offset];\n    }\n  }, {\n    key: \"lastSegment\",\n    value: function lastSegment() {\n      return this.get(this.length - 1);\n    }\n  }, {\n    key: \"get\",\n    value: function get(t) {\n      return this.segments[this.offset + t];\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return 0 === this.length;\n    }\n  }, {\n    key: \"isPrefixOf\",\n    value: function isPrefixOf(t) {\n      if (t.length < this.length) return !1;\n\n      for (var e = 0; e < this.length; e++) {\n        if (this.get(e) !== t.get(e)) return !1;\n      }\n\n      return !0;\n    }\n  }, {\n    key: \"isImmediateParentOf\",\n    value: function isImmediateParentOf(t) {\n      if (this.length + 1 !== t.length) return !1;\n\n      for (var e = 0; e < this.length; e++) {\n        if (this.get(e) !== t.get(e)) return !1;\n      }\n\n      return !0;\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(t) {\n      for (var e = this.offset, n = this.limit(); e < n; e++) {\n        t(this.segments[e]);\n      }\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      return this.segments.slice(this.offset, this.limit());\n    }\n  }], [{\n    key: \"comparator\",\n    value: function comparator(t, e) {\n      var n = Math.min(t.length, e.length);\n\n      for (var r = 0; r < n; r++) {\n        var _n2 = t.get(r),\n            s = e.get(r);\n\n        if (_n2 < s) return -1;\n        if (_n2 > s) return 1;\n      }\n\n      return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n  }]);\n\n  return Z;\n}();\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */\n\n\nvar tt = /*#__PURE__*/function (_Z) {\n  _inherits(tt, _Z);\n\n  var _super2 = _createSuper(tt);\n\n  function tt() {\n    _classCallCheck(this, tt);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(tt, [{\n    key: \"construct\",\n    value: function construct(t, e, n) {\n      return new tt(t, e, n);\n    }\n  }, {\n    key: \"canonicalString\",\n    value: function canonicalString() {\n      // NOTE: The client is ignorant of any path segments containing escape\n      // sequences (e.g. __id123__) and just passes them through raw (they exist\n      // for legacy reasons and should not be used frequently).\n      return this.toArray().join(\"/\");\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */\n\n  }], [{\n    key: \"fromString\",\n    value: function fromString() {\n      // NOTE: The client is ignorant of any path segments containing escape\n      // sequences (e.g. __id123__) and just passes them through raw (they exist\n      // for legacy reasons and should not be used frequently).\n      var e = [];\n\n      for (var _len4 = arguments.length, t = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        t[_key4] = arguments[_key4];\n      }\n\n      for (var _i = 0, _t2 = t; _i < _t2.length; _i++) {\n        var n = _t2[_i];\n        if (n.indexOf(\"//\") >= 0) throw new U(P, \"Invalid segment (\".concat(n, \"). Paths must not contain // in them.\")); // Strip leading and traling slashed.\n\n        e.push.apply(e, _toConsumableArray(n.split(\"/\").filter(function (t) {\n          return t.length > 0;\n        })));\n      }\n\n      return new tt(e);\n    }\n  }, {\n    key: \"emptyPath\",\n    value: function emptyPath() {\n      return new tt([]);\n    }\n  }]);\n\n  return tt;\n}(Z);\n\nvar et = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */\n\nvar nt = /*#__PURE__*/function (_Z2) {\n  _inherits(nt, _Z2);\n\n  var _super3 = _createSuper(nt);\n\n  function nt() {\n    _classCallCheck(this, nt);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(nt, [{\n    key: \"construct\",\n    value: function construct(t, e, n) {\n      return new nt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */\n\n  }, {\n    key: \"canonicalString\",\n    value: function canonicalString() {\n      return this.toArray().map(function (t) {\n        return t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), nt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t;\n      }).join(\".\");\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */\n\n  }, {\n    key: \"isKeyField\",\n    value: function isKeyField() {\n      return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */\n\n  }], [{\n    key: \"isValidIdentifier\",\n    value: function isValidIdentifier(t) {\n      return et.test(t);\n    }\n  }, {\n    key: \"keyField\",\n    value: function keyField() {\n      return new nt([\"__name__\"]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */\n\n  }, {\n    key: \"fromServerFormat\",\n    value: function fromServerFormat(t) {\n      var e = [];\n      var n = \"\",\n          r = 0;\n\n      var s = function s() {\n        if (0 === n.length) throw new U(P, \"Invalid field path (\".concat(t, \"). Paths must not be empty, begin with '.', end with '.', or contain '..'\"));\n        e.push(n), n = \"\";\n      };\n\n      var i = !1;\n\n      for (; r < t.length;) {\n        var _e2 = t[r];\n\n        if (\"\\\\\" === _e2) {\n          if (r + 1 === t.length) throw new U(P, \"Path has trailing escape character: \" + t);\n          var _e3 = t[r + 1];\n          if (\"\\\\\" !== _e3 && \".\" !== _e3 && \"`\" !== _e3) throw new U(P, \"Path has invalid escape sequence: \" + t);\n          n += _e3, r += 2;\n        } else \"`\" === _e2 ? (i = !i, r++) : \".\" !== _e2 || i ? (n += _e2, r++) : (s(), r++);\n      }\n\n      if (s(), i) throw new U(P, \"Unterminated ` in path: \" + t);\n      return new nt(e);\n    }\n  }, {\n    key: \"emptyPath\",\n    value: function emptyPath() {\n      return new nt([]);\n    }\n  }]);\n\n  return nt;\n}(Z);\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @internal\n */\n\n\nvar rt = /*#__PURE__*/function () {\n  function rt(t) {\n    _classCallCheck(this, rt);\n\n    this.path = t;\n  }\n\n  _createClass(rt, [{\n    key: \"collectionGroup\",\n    get: function get() {\n      return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */\n\n  }, {\n    key: \"hasCollectionId\",\n    value: function hasCollectionId(t) {\n      return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */\n\n  }, {\n    key: \"getCollectionGroup\",\n    value: function getCollectionGroup() {\n      return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */\n\n  }, {\n    key: \"getCollectionPath\",\n    value: function getCollectionPath() {\n      return this.path.popLast();\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return null !== t && 0 === tt.comparator(this.path, t.path);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.path.toString();\n    }\n  }], [{\n    key: \"fromPath\",\n    value: function fromPath(t) {\n      return new rt(tt.fromString(t));\n    }\n  }, {\n    key: \"fromName\",\n    value: function fromName(t) {\n      return new rt(tt.fromString(t).popFirst(5));\n    }\n  }, {\n    key: \"empty\",\n    value: function empty() {\n      return new rt(tt.emptyPath());\n    }\n  }, {\n    key: \"comparator\",\n    value: function comparator(t, e) {\n      return tt.comparator(t.path, e.path);\n    }\n  }, {\n    key: \"isDocumentKey\",\n    value: function isDocumentKey(t) {\n      return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */\n\n  }, {\n    key: \"fromSegments\",\n    value: function fromSegments(t) {\n      return new rt(new tt(t.slice()));\n    }\n  }]);\n\n  return rt;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction st(t, e, n) {\n  if (!n) throw new U(P, \"Function \".concat(t, \"() cannot be called with an empty \").concat(e, \".\"));\n}\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\n\n\nfunction it(t) {\n  if (!rt.isDocumentKey(t)) throw new U(P, \"Invalid document reference. Document references must have an even number of segments, but \".concat(t, \" has \").concat(t.length, \".\"));\n}\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */\n\n\nfunction ot(t) {\n  if (rt.isDocumentKey(t)) throw new U(P, \"Invalid collection reference. Collection references must have an odd number of segments, but \".concat(t, \" has \").concat(t.length, \".\"));\n}\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n\n/** Returns a string describing the type / value of the provided input. */\n\n\nfunction ut(t) {\n  if (void 0 === t) return \"undefined\";\n  if (null === t) return \"null\";\n  if (\"string\" == typeof t) return t.length > 20 && (t = \"\".concat(t.substring(0, 20), \"...\")), JSON.stringify(t);\n  if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n\n  if (\"object\" == typeof t) {\n    if (t instanceof Array) return \"an array\";\n    {\n      var e =\n      /** try to get the constructor name for an object. */\n      function (t) {\n        if (t.constructor) return t.constructor.name;\n        return null;\n      }\n      /**\n      * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n      * underlying instance. Throws if  `obj` is not an instance of `T`.\n      *\n      * This cast is used in the Lite and Full SDK to verify instance types for\n      * arguments passed to the public API.\n      * @internal\n      */\n      (t);\n\n      return e ? \"a custom \".concat(e, \" object\") : \"an object\";\n    }\n  }\n\n  return \"function\" == typeof t ? \"a function\" : b();\n}\n\nfunction ct(t, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n  if (\"_delegate\" in t && ( // Unwrap Compat types\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  t = t._delegate), !(t instanceof e)) {\n    if (e.name === t.constructor.name) throw new U(P, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n    {\n      var n = ut(t);\n      throw new U(P, \"Expected type '\".concat(e.name, \"', but it was: \").concat(n));\n    }\n  }\n\n  return t;\n}\n\nfunction at(t, e) {\n  if (e <= 0) throw new U(P, \"Function \".concat(t, \"() requires a positive number, but it was: \").concat(e, \".\"));\n}\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Compares two `ExperimentalLongPollingOptions` objects for equality.\n */\n\n/**\n * Creates and returns a new `ExperimentalLongPollingOptions` with the same\n * option values as the given instance.\n */\n\n\nfunction ht(t) {\n  var e = {};\n  return void 0 !== t.timeoutSeconds && (e.timeoutSeconds = t.timeoutSeconds), e;\n}\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The value returned from the most recent invocation of\n * `generateUniqueDebugId()`, or null if it has never been invoked.\n */\n\n\nvar lt = null;\n/**\n * Generates and returns an initial value for `lastUniqueDebugId`.\n *\n * The returned value is randomly selected from a range of integers that are\n * represented as 8 hexadecimal digits. This means that (within reason) any\n * numbers generated by incrementing the returned number by 1 will also be\n * represented by 8 hexadecimal digits. This leads to all \"IDs\" having the same\n * length when converted to a hexadecimal string, making reading logs containing\n * these IDs easier to follow. And since the return value is randomly selected\n * it will help to differentiate between logs from different executions.\n */\n\n/**\n * Generates and returns a unique ID as a hexadecimal string.\n *\n * The returned ID is intended to be used in debug logging messages to help\n * correlate log messages that may be spatially separated in the logs, but\n * logically related. For example, a network connection could include the same\n * \"debug ID\" string in all of its log messages to help trace a specific\n * connection over time.\n *\n * @return the 10-character generated ID (e.g. \"0xa1b2c3d4\").\n */\n\nfunction ft() {\n  return null === lt ? lt = 268435456 + Math.round(2147483648 * Math.random()) : lt++, \"0x\" + lt.toString(16);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns whether a variable is either undefined or null.\n */\n\n\nfunction dt(t) {\n  return null == t;\n}\n/** Returns whether the value represents -0. */\n\n\nfunction wt(t) {\n  // Detect if the value is -0.0. Based on polyfill from\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n  return 0 === t && 1 / t == -1 / 0;\n}\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar mt = {\n  BatchGetDocuments: \"batchGet\",\n  Commit: \"commit\",\n  RunQuery: \"runQuery\",\n  RunAggregationQuery: \"runAggregationQuery\"\n};\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\n\nvar pt, yt;\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\n\nfunction gt(t) {\n  if (void 0 === t) return g(\"RPC_ERROR\", \"HTTP error has no status\"), _R; // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n  // status codes but the mapping is not bijective. In each case of ambiguity\n  // this function chooses a primary error.\n  // [1]\n  // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n\n  switch (t) {\n    case 200:\n      // OK\n      return T;\n\n    case 400:\n      // Bad Request\n      return S;\n    // Other possibilities based on the forward mapping\n    // return Code.INVALID_ARGUMENT;\n    // return Code.OUT_OF_RANGE;\n\n    case 401:\n      // Unauthorized\n      return F;\n\n    case 403:\n      // Forbidden\n      return D;\n\n    case 404:\n      // Not Found\n      return $;\n\n    case 409:\n      // Conflict\n      return q;\n    // Other possibilities:\n    // return Code.ALREADY_EXISTS;\n\n    case 416:\n      // Range Not Satisfiable\n      return O;\n\n    case 429:\n      // Too Many Requests\n      return x;\n\n    case 499:\n      // Client Closed Request\n      return A;\n\n    case 500:\n      // Internal Server Error\n      return _R;\n    // Other possibilities:\n    // return Code.INTERNAL;\n    // return Code.DATA_LOSS;\n\n    case 501:\n      // Unimplemented\n      return k;\n\n    case 503:\n      // Service Unavailable\n      return M;\n\n    case 504:\n      // Gateway Timeout\n      return V;\n\n    default:\n      return t >= 200 && t < 300 ? T : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? C : _R;\n  }\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */\n\n\n(yt = pt || (pt = {}))[yt.OK = 0] = \"OK\", yt[yt.CANCELLED = 1] = \"CANCELLED\", yt[yt.UNKNOWN = 2] = \"UNKNOWN\", yt[yt.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", yt[yt.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", yt[yt.NOT_FOUND = 5] = \"NOT_FOUND\", yt[yt.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", yt[yt.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", yt[yt.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", yt[yt.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", yt[yt.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", yt[yt.ABORTED = 10] = \"ABORTED\", yt[yt.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", yt[yt.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", yt[yt.INTERNAL = 13] = \"INTERNAL\", yt[yt.UNAVAILABLE = 14] = \"UNAVAILABLE\", yt[yt.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nvar _t = /*#__PURE__*/function (_ref) {\n  _inherits(_t, _ref);\n\n  var _super4 = _createSuper(_t);\n\n  /**\n   * @param databaseInfo - The connection info.\n   * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n   */\n  function _t(t, e) {\n    var _this7;\n\n    _classCallCheck(this, _t);\n\n    _this7 = _super4.call(this, t), _this7.P = e;\n    return _this7;\n  }\n\n  _createClass(_t, [{\n    key: \"V\",\n    value: function V(t, e) {\n      throw new Error(\"Not supported by FetchConnection\");\n    }\n  }, {\n    key: \"A\",\n    value: function () {\n      var _A = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(t, e, n, r) {\n        var s, i, o, _e4, _t3, _e5;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                i = JSON.stringify(r);\n                _context.prev = 1;\n                _context.next = 4;\n                return this.P(e, {\n                  method: \"POST\",\n                  headers: n,\n                  body: i\n                });\n\n              case 4:\n                o = _context.sent;\n                _context.next = 11;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                _e4 = _context.t0;\n                throw new U(gt(_e4.status), \"Request failed with error: \" + _e4.statusText);\n\n              case 11:\n                if (o.ok) {\n                  _context.next = 18;\n                  break;\n                }\n\n                _context.next = 14;\n                return o.json();\n\n              case 14:\n                _t3 = _context.sent;\n                Array.isArray(_t3) && (_t3 = _t3[0]);\n                _e5 = null === (s = null == _t3 ? void 0 : _t3.error) || void 0 === s ? void 0 : s.message;\n                throw new U(gt(o.status), \"Request failed with error: \".concat(null != _e5 ? _e5 : o.statusText));\n\n              case 18:\n                return _context.abrupt(\"return\", o.json());\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 7]]);\n      }));\n\n      function A(_x, _x2, _x3, _x4) {\n        return _A.apply(this, arguments);\n      }\n\n      return A;\n    }()\n  }]);\n\n  return _t;\n}(\n/*#__PURE__*/\n\n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nfunction () {\n  function _class(t) {\n    _classCallCheck(this, _class);\n\n    this.databaseInfo = t, this.databaseId = t.databaseId;\n    var e = t.ssl ? \"https\" : \"http\";\n    this.m = e + \"://\" + t.host, this.p = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n  }\n\n  _createClass(_class, [{\n    key: \"g\",\n    get: function get() {\n      // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n      // where to run the query, and expect the `request` to NOT specify the \"path\".\n      return !1;\n    }\n  }, {\n    key: \"v\",\n    value: function v(t, e, n, r, s) {\n      var i = ft(),\n          o = this.I(t, e);\n      y(\"RestConnection\", \"Sending RPC '\".concat(t, \"' \").concat(i, \":\"), o, n);\n      var u = {};\n      return this.T(u, r, s), this.A(t, o, u, n).then(function (e) {\n        return y(\"RestConnection\", \"Received RPC '\".concat(t, \"' \").concat(i, \": \"), e), e;\n      }, function (e) {\n        throw _(\"RestConnection\", \"RPC '\".concat(t, \"' \").concat(i, \" failed with error: \"), e, \"url: \", o, \"request:\", n), e;\n      });\n    }\n  }, {\n    key: \"R\",\n    value: function R(t, e, n, r, s, i) {\n      // The REST API automatically aggregates all of the streamed results, so we\n      // can just use the normal invoke() method.\n      return this.v(t, e, n, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */\n\n  }, {\n    key: \"T\",\n    value:\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */\n    function T(t, e, n) {\n      t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + w, // Content-Type: text/plain will avoid preflight requests which might\n      // mess with CORS and redirects by proxies. If we add custom headers\n      // we will need to change this code to potentially use the $httpOverwrite\n      // parameter supported by ESF to avoid triggering preflight requests.\n      t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), e && e.headers.forEach(function (e, n) {\n        return t[n] = e;\n      }), n && n.headers.forEach(function (e, n) {\n        return t[n] = e;\n      });\n    }\n  }, {\n    key: \"I\",\n    value: function I(t, e) {\n      var n = mt[t];\n      return \"\".concat(this.m, \"/v1/\").concat(e, \":\").concat(n);\n    }\n  }]);\n\n  return _class;\n}());\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Initializes the HTTP connection for the REST API. */\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Concrete implementation of the Aggregate type.\n */\n\n\nvar vt = /*#__PURE__*/_createClass(function vt(t, e, n) {\n  _classCallCheck(this, vt);\n\n  this.alias = t, this.$ = e, this.fieldPath = n;\n});\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\n\n\nfunction bt(t) {\n  // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n  var e = // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  \"undefined\" != typeof self && (self.crypto || self.msCrypto),\n      n = new Uint8Array(t);\n  if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n);else // Falls back to Math.random\n    for (var _e6 = 0; _e6 < t; _e6++) {\n      n[_e6] = Math.floor(256 * Math.random());\n    }\n  return n;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar Et = /*#__PURE__*/function () {\n  function Et() {\n    _classCallCheck(this, Et);\n  }\n\n  _createClass(Et, null, [{\n    key: \"N\",\n    value: function N() {\n      // Alphanumeric characters\n      var t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\",\n          e = Math.floor(256 / t.length) * t.length; // The largest byte value that is a multiple of `char.length`.\n\n      var n = \"\";\n\n      for (; n.length < 20;) {\n        var r = bt(40);\n\n        for (var s = 0; s < r.length; ++s) {\n          // Only accept values that are [0, maxMultiple), this ensures they can\n          // be evenly mapped to indices of `chars` via a modulo operation.\n          n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n      }\n\n      return n;\n    }\n  }]);\n\n  return Et;\n}();\n\nfunction It(t, e) {\n  return t < e ? -1 : t > e ? 1 : 0;\n}\n/** Helper to compare arrays using isEqual(). */\n\n\nfunction Tt(t, e, n) {\n  return t.length === e.length && t.every(function (t, r) {\n    return n(t, e[r]);\n  });\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction At(t) {\n  var e = 0;\n\n  for (var n in t) {\n    Object.prototype.hasOwnProperty.call(t, n) && e++;\n  }\n\n  return e;\n}\n\nfunction Rt(t, e) {\n  for (var n in t) {\n    Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n  }\n}\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An error encountered while decoding base64 string.\n */\n\n\nvar Pt = /*#__PURE__*/function (_Error) {\n  _inherits(Pt, _Error);\n\n  var _super5 = _createSuper(Pt);\n\n  function Pt() {\n    var _this8;\n\n    _classCallCheck(this, Pt);\n\n    _this8 = _super5.apply(this, arguments), _this8.name = \"Base64DecodeError\";\n    return _this8;\n  }\n\n  return _createClass(Pt);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Converts a Base64 encoded string to a binary string. */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\n\n\nvar Vt = /*#__PURE__*/function (_Symbol$iterator) {\n  function Vt(t) {\n    _classCallCheck(this, Vt);\n\n    this.binaryString = t;\n  }\n\n  _createClass(Vt, [{\n    key: _Symbol$iterator,\n    value: function value() {\n      var _this9 = this;\n\n      var t = 0;\n      return {\n        next: function next() {\n          return t < _this9.binaryString.length ? {\n            value: _this9.binaryString.charCodeAt(t++),\n            done: !1\n          } : {\n            value: void 0,\n            done: !0\n          };\n        }\n      };\n    }\n  }, {\n    key: \"toBase64\",\n    value: function toBase64() {\n      return t = this.binaryString, btoa(t);\n      var t;\n    }\n  }, {\n    key: \"toUint8Array\",\n    value: function toUint8Array() {\n      return function (t) {\n        var e = new Uint8Array(t.length);\n\n        for (var n = 0; n < t.length; n++) {\n          e[n] = t.charCodeAt(n);\n        }\n\n        return e;\n      }\n      /**\n      * @license\n      * Copyright 2020 Google LLC\n      *\n      * Licensed under the Apache License, Version 2.0 (the \"License\");\n      * you may not use this file except in compliance with the License.\n      * You may obtain a copy of the License at\n      *\n      *   http://www.apache.org/licenses/LICENSE-2.0\n      *\n      * Unless required by applicable law or agreed to in writing, software\n      * distributed under the License is distributed on an \"AS IS\" BASIS,\n      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n      * See the License for the specific language governing permissions and\n      * limitations under the License.\n      */\n      // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n      (this.binaryString);\n    }\n  }, {\n    key: \"approximateByteSize\",\n    value: function approximateByteSize() {\n      return 2 * this.binaryString.length;\n    }\n  }, {\n    key: \"compareTo\",\n    value: function compareTo(t) {\n      return It(this.binaryString, t.binaryString);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.binaryString === t.binaryString;\n    }\n  }], [{\n    key: \"fromBase64String\",\n    value: function fromBase64String(t) {\n      var e = function (t) {\n        try {\n          return atob(t);\n        } catch (t) {\n          // Check that `DOMException` is defined before using it to avoid\n          // \"ReferenceError: Property 'DOMException' doesn't exist\" in react-native.\n          // (https://github.com/firebase/firebase-js-sdk/issues/7115)\n          throw \"undefined\" != typeof DOMException && t instanceof DOMException ? new Pt(\"Invalid base64 string: \" + t) : t;\n        }\n      }\n      /** Converts a binary string to a Base64 encoded string. */\n      (t);\n\n      return new Vt(e);\n    }\n  }, {\n    key: \"fromUint8Array\",\n    value: function fromUint8Array(t) {\n      // TODO(indexing); Remove the copy of the byte string here as this method\n      // is frequently called during indexing.\n      var e =\n      /**\n      * Helper function to convert an Uint8array to a binary string.\n      */\n      function (t) {\n        var e = \"\";\n\n        for (var n = 0; n < t.length; ++n) {\n          e += String.fromCharCode(t[n]);\n        }\n\n        return e;\n      }\n      /**\n      * Helper function to convert a binary string to an Uint8Array.\n      */\n      (t);\n\n      return new Vt(e);\n    }\n  }]);\n\n  return Vt;\n}(Symbol.iterator);\n\nVt.EMPTY_BYTE_STRING = new Vt(\"\");\nvar $t = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */\n\nfunction Nt(t) {\n  // The json interface (for the browser) will return an iso timestamp string,\n  // while the proto js library (for node) will return a\n  // google.protobuf.Timestamp instance.\n  if (E(!!t), \"string\" == typeof t) {\n    // The date string can have higher precision (nanos) than the Date class\n    // (millis), so we do some custom parsing here.\n    // Parse the nanos right out of the string.\n    var e = 0;\n    var n = $t.exec(t);\n\n    if (E(!!n), n[1]) {\n      // Pad the fraction out to 9 digits (nanos).\n      var _t4 = n[1];\n      _t4 = (_t4 + \"000000000\").substr(0, 9), e = Number(_t4);\n    } // Parse the date to get the seconds.\n\n\n    var r = new Date(t);\n    return {\n      seconds: Math.floor(r.getTime() / 1e3),\n      nanos: e\n    };\n  }\n\n  return {\n    seconds: Dt(t.seconds),\n    nanos: Dt(t.nanos)\n  };\n}\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */\n\n\nfunction Dt(t) {\n  // TODO(bjornick): Handle int64 greater than 53 bits.\n  return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n/** Converts the possible Proto types for Blobs into a ByteString. */\n\n\nfunction Ft(t) {\n  return \"string\" == typeof t ? Vt.fromBase64String(t) : Vt.fromUint8Array(t);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\n\n\nvar xt = /*#__PURE__*/function () {\n  /**\n   * Creates a new timestamp.\n   *\n   * @param seconds - The number of seconds of UTC time since Unix epoch\n   *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n   *     9999-12-31T23:59:59Z inclusive.\n   * @param nanoseconds - The non-negative fractions of a second at nanosecond\n   *     resolution. Negative second values with fractions must still have\n   *     non-negative nanoseconds values that count forward in time. Must be\n   *     from 0 to 999,999,999 inclusive.\n   */\n  function xt(\n  /**\n   * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n   */\n  t,\n  /**\n   * The fractions of a second at nanosecond resolution.*\n   */\n  e) {\n    _classCallCheck(this, xt);\n\n    if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n    if (e >= 1e9) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n    if (t < -62135596800) throw new U(P, \"Timestamp seconds out of range: \" + t); // This will break in the year 10,000.\n\n    if (t >= 253402300800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n  }\n  /**\n   * Creates a new timestamp with the current date, with millisecond precision.\n   *\n   * @returns a new timestamp representing the current date.\n   */\n\n\n  _createClass(xt, [{\n    key: \"toDate\",\n    value:\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */\n    function toDate() {\n      return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */\n\n  }, {\n    key: \"toMillis\",\n    value: function toMillis() {\n      return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n  }, {\n    key: \"_compareTo\",\n    value: function _compareTo(t) {\n      return this.seconds === t.seconds ? It(this.nanoseconds, t.nanoseconds) : It(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        seconds: this.seconds,\n        nanoseconds: this.nanoseconds\n      };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */\n\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      // This method returns a string of the form <seconds>.<nanoseconds> where\n      // <seconds> is translated to have a non-negative value and both <seconds>\n      // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n      // Strings with this format then have a lexiographical ordering that matches\n      // the expected ordering. The <seconds> translation is done to avoid having\n      // a leading negative sign (i.e. a leading '-' character) in its string\n      // representation, which would affect its lexiographical ordering.\n      var t = this.seconds - -62135596800; // Note: Up to 12 decimal digits are required to represent all valid\n      // 'seconds' values.\n\n      return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n  }], [{\n    key: \"now\",\n    value: function now() {\n      return xt.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */\n\n  }, {\n    key: \"fromDate\",\n    value: function fromDate(t) {\n      return xt.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */\n\n  }, {\n    key: \"fromMillis\",\n    value: function fromMillis(t) {\n      var e = Math.floor(t / 1e3),\n          n = Math.floor(1e6 * (t - 1e3 * e));\n      return new xt(e, n);\n    }\n  }]);\n\n  return xt;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */\n\n\nfunction St(t) {\n  var e, n;\n  return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */\n\n\nfunction qt(t) {\n  var e = t.mapValue.fields.__previous_value__;\n  return St(e) ? qt(e) : e;\n}\n/**\n * Returns the local time at which this timestamp was first set.\n */\n\n\nfunction Ot(t) {\n  var e = Nt(t.mapValue.fields.__local_write_time__.timestampValue);\n  return new xt(e.seconds, e.nanos);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar kt = {\n  fields: {\n    __type__: {\n      stringValue: \"__max__\"\n    }\n  }\n};\n/** Extracts the backend's type order for the provided value. */\n\nfunction Ct(t) {\n  return \"nullValue\" in t ? 0\n  /* TypeOrder.NullValue */\n  : \"booleanValue\" in t ? 1\n  /* TypeOrder.BooleanValue */\n  : \"integerValue\" in t || \"doubleValue\" in t ? 2\n  /* TypeOrder.NumberValue */\n  : \"timestampValue\" in t ? 3\n  /* TypeOrder.TimestampValue */\n  : \"stringValue\" in t ? 5\n  /* TypeOrder.StringValue */\n  : \"bytesValue\" in t ? 6\n  /* TypeOrder.BlobValue */\n  : \"referenceValue\" in t ? 7\n  /* TypeOrder.RefValue */\n  : \"geoPointValue\" in t ? 8\n  /* TypeOrder.GeoPointValue */\n  : \"arrayValue\" in t ? 9\n  /* TypeOrder.ArrayValue */\n  : \"mapValue\" in t ? St(t) ? 4\n  /* TypeOrder.ServerTimestampValue */\n  :\n  /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n  function (t) {\n    return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n  }\n  /**\n  * @license\n  * Copyright 2022 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  /**\n  * Represents a bound of a query.\n  *\n  * The bound is specified with the given components representing a position and\n  * whether it's just before or just after the position (relative to whatever the\n  * query order is).\n  *\n  * The position represents a logical index position for a query. It's a prefix\n  * of values for the (potentially implicit) order by clauses of a query.\n  *\n  * Bound provides a function to determine whether a document comes before or\n  * after a bound. This is influenced by whether the position is just before or\n  * just after the provided values.\n  */\n  (t) ? 9007199254740991\n  /* TypeOrder.MaxValue */\n  : 10\n  /* TypeOrder.ObjectValue */\n  : b();\n}\n/** Tests `left` and `right` for equality based on the backend semantics. */\n\n\nfunction Mt(t, e) {\n  if (t === e) return !0;\n  var n = Ct(t);\n  if (n !== Ct(e)) return !1;\n\n  switch (n) {\n    case 0\n    /* TypeOrder.NullValue */\n    :\n    case 9007199254740991\n    /* TypeOrder.MaxValue */\n    :\n      return !0;\n\n    case 1\n    /* TypeOrder.BooleanValue */\n    :\n      return t.booleanValue === e.booleanValue;\n\n    case 4\n    /* TypeOrder.ServerTimestampValue */\n    :\n      return Ot(t).isEqual(Ot(e));\n\n    case 3\n    /* TypeOrder.TimestampValue */\n    :\n      return function (t, e) {\n        if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) // Use string equality for ISO 8601 timestamps\n          return t.timestampValue === e.timestampValue;\n        var n = Nt(t.timestampValue),\n            r = Nt(e.timestampValue);\n        return n.seconds === r.seconds && n.nanos === r.nanos;\n      }(t, e);\n\n    case 5\n    /* TypeOrder.StringValue */\n    :\n      return t.stringValue === e.stringValue;\n\n    case 6\n    /* TypeOrder.BlobValue */\n    :\n      return function (t, e) {\n        return Ft(t.bytesValue).isEqual(Ft(e.bytesValue));\n      }(t, e);\n\n    case 7\n    /* TypeOrder.RefValue */\n    :\n      return t.referenceValue === e.referenceValue;\n\n    case 8\n    /* TypeOrder.GeoPointValue */\n    :\n      return function (t, e) {\n        return Dt(t.geoPointValue.latitude) === Dt(e.geoPointValue.latitude) && Dt(t.geoPointValue.longitude) === Dt(e.geoPointValue.longitude);\n      }(t, e);\n\n    case 2\n    /* TypeOrder.NumberValue */\n    :\n      return function (t, e) {\n        if (\"integerValue\" in t && \"integerValue\" in e) return Dt(t.integerValue) === Dt(e.integerValue);\n\n        if (\"doubleValue\" in t && \"doubleValue\" in e) {\n          var _n3 = Dt(t.doubleValue),\n              r = Dt(e.doubleValue);\n\n          return _n3 === r ? wt(_n3) === wt(r) : isNaN(_n3) && isNaN(r);\n        }\n\n        return !1;\n      }(t, e);\n\n    case 9\n    /* TypeOrder.ArrayValue */\n    :\n      return Tt(t.arrayValue.values || [], e.arrayValue.values || [], Mt);\n\n    case 10\n    /* TypeOrder.ObjectValue */\n    :\n      return function (t, e) {\n        var n = t.mapValue.fields || {},\n            r = e.mapValue.fields || {};\n        if (At(n) !== At(r)) return !1;\n\n        for (var _t5 in n) {\n          if (n.hasOwnProperty(_t5) && (void 0 === r[_t5] || !Mt(n[_t5], r[_t5]))) return !1;\n        }\n\n        return !0;\n      }\n      /** Returns true if the ArrayValue contains the specified element. */\n      (t, e);\n\n    default:\n      return b();\n  }\n}\n\nfunction Lt(t, e) {\n  return void 0 !== (t.values || []).find(function (t) {\n    return Mt(t, e);\n  });\n}\n\nfunction Ut(t, e) {\n  if (t === e) return 0;\n  var n = Ct(t),\n      r = Ct(e);\n  if (n !== r) return It(n, r);\n\n  switch (n) {\n    case 0\n    /* TypeOrder.NullValue */\n    :\n    case 9007199254740991\n    /* TypeOrder.MaxValue */\n    :\n      return 0;\n\n    case 1\n    /* TypeOrder.BooleanValue */\n    :\n      return It(t.booleanValue, e.booleanValue);\n\n    case 2\n    /* TypeOrder.NumberValue */\n    :\n      return function (t, e) {\n        var n = Dt(t.integerValue || t.doubleValue),\n            r = Dt(e.integerValue || e.doubleValue);\n        return n < r ? -1 : n > r ? 1 : n === r ? 0 : // one or both are NaN.\n        isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n      }(t, e);\n\n    case 3\n    /* TypeOrder.TimestampValue */\n    :\n      return jt(t.timestampValue, e.timestampValue);\n\n    case 4\n    /* TypeOrder.ServerTimestampValue */\n    :\n      return jt(Ot(t), Ot(e));\n\n    case 5\n    /* TypeOrder.StringValue */\n    :\n      return It(t.stringValue, e.stringValue);\n\n    case 6\n    /* TypeOrder.BlobValue */\n    :\n      return function (t, e) {\n        var n = Ft(t),\n            r = Ft(e);\n        return n.compareTo(r);\n      }(t.bytesValue, e.bytesValue);\n\n    case 7\n    /* TypeOrder.RefValue */\n    :\n      return function (t, e) {\n        var n = t.split(\"/\"),\n            r = e.split(\"/\");\n\n        for (var _t6 = 0; _t6 < n.length && _t6 < r.length; _t6++) {\n          var _e7 = It(n[_t6], r[_t6]);\n\n          if (0 !== _e7) return _e7;\n        }\n\n        return It(n.length, r.length);\n      }(t.referenceValue, e.referenceValue);\n\n    case 8\n    /* TypeOrder.GeoPointValue */\n    :\n      return function (t, e) {\n        var n = It(Dt(t.latitude), Dt(e.latitude));\n        if (0 !== n) return n;\n        return It(Dt(t.longitude), Dt(e.longitude));\n      }(t.geoPointValue, e.geoPointValue);\n\n    case 9\n    /* TypeOrder.ArrayValue */\n    :\n      return function (t, e) {\n        var n = t.values || [],\n            r = e.values || [];\n\n        for (var _t7 = 0; _t7 < n.length && _t7 < r.length; ++_t7) {\n          var _e8 = Ut(n[_t7], r[_t7]);\n\n          if (_e8) return _e8;\n        }\n\n        return It(n.length, r.length);\n      }(t.arrayValue, e.arrayValue);\n\n    case 10\n    /* TypeOrder.ObjectValue */\n    :\n      return function (t, e) {\n        if (t === kt && e === kt) return 0;\n        if (t === kt) return 1;\n        if (e === kt) return -1;\n        var n = t.fields || {},\n            r = Object.keys(n),\n            s = e.fields || {},\n            i = Object.keys(s); // Even though MapValues are likely sorted correctly based on their insertion\n        // order (e.g. when received from the backend), local modifications can bring\n        // elements out of order. We need to re-sort the elements to ensure that\n        // canonical IDs are independent of insertion order.\n\n        r.sort(), i.sort();\n\n        for (var _t8 = 0; _t8 < r.length && _t8 < i.length; ++_t8) {\n          var _e9 = It(r[_t8], i[_t8]);\n\n          if (0 !== _e9) return _e9;\n          var o = Ut(n[r[_t8]], s[i[_t8]]);\n          if (0 !== o) return o;\n        }\n\n        return It(r.length, i.length);\n      }\n      /** Returns a reference value for the provided database and key. */\n      (t.mapValue, e.mapValue);\n\n    default:\n      throw b();\n  }\n}\n\nfunction jt(t, e) {\n  if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return It(t, e);\n  var n = Nt(t),\n      r = Nt(e),\n      s = It(n.seconds, r.seconds);\n  return 0 !== s ? s : It(n.nanos, r.nanos);\n}\n\nfunction Bt(t, e) {\n  return {\n    referenceValue: \"projects/\".concat(t.projectId, \"/databases/\").concat(t.database, \"/documents/\").concat(e.path.canonicalString())\n  };\n}\n/** Returns true if `value` is an ArrayValue. */\n\n\nfunction Qt(t) {\n  return !!t && \"arrayValue\" in t;\n}\n/** Returns true if `value` is a NullValue. */\n\n\nfunction zt(t) {\n  return !!t && \"nullValue\" in t;\n}\n/** Returns true if `value` is NaN. */\n\n\nfunction Wt(t) {\n  return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n/** Returns true if `value` is a MapValue. */\n\n\nfunction Gt(t) {\n  return !!t && \"mapValue\" in t;\n}\n/** Creates a deep copy of `source`. */\n\n\nfunction Kt(t) {\n  if (t.geoPointValue) return {\n    geoPointValue: Object.assign({}, t.geoPointValue)\n  };\n  if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n    timestampValue: Object.assign({}, t.timestampValue)\n  };\n\n  if (t.mapValue) {\n    var e = {\n      mapValue: {\n        fields: {}\n      }\n    };\n    return Rt(t.mapValue.fields, function (t, n) {\n      return e.mapValue.fields[t] = Kt(n);\n    }), e;\n  }\n\n  if (t.arrayValue) {\n    var _e10 = {\n      arrayValue: {\n        values: []\n      }\n    };\n\n    for (var n = 0; n < (t.arrayValue.values || []).length; ++n) {\n      _e10.arrayValue.values[n] = Kt(t.arrayValue.values[n]);\n    }\n\n    return _e10;\n  }\n\n  return Object.assign({}, t);\n}\n\nvar Yt = /*#__PURE__*/_createClass(function Yt(t, e) {\n  _classCallCheck(this, Yt);\n\n  this.position = t, this.inclusive = e;\n});\n\nfunction Ht(t, e) {\n  if (null === t) return null === e;\n  if (null === e) return !1;\n  if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n\n  for (var n = 0; n < t.position.length; n++) {\n    if (!Mt(t.position[n], e.position[n])) return !1;\n  }\n\n  return !0;\n}\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar Jt = /*#__PURE__*/_createClass(function Jt() {\n  _classCallCheck(this, Jt);\n});\n\nvar Xt = /*#__PURE__*/function (_Jt) {\n  _inherits(Xt, _Jt);\n\n  var _super6 = _createSuper(Xt);\n\n  function Xt(t, e, n) {\n    var _this10;\n\n    _classCallCheck(this, Xt);\n\n    _this10 = _super6.call(this), _this10.field = t, _this10.op = e, _this10.value = n;\n    return _this10;\n  }\n  /**\n   * Creates a filter based on the provided arguments.\n   */\n\n\n  _createClass(Xt, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var e = t.data.field(this.field); // Types do not have to match in NOT_EQUAL filters.\n\n      return \"!=\"\n      /* Operator.NOT_EQUAL */\n      === this.op ? null !== e && this.matchesComparison(Ut(e, this.value)) : null !== e && Ct(this.value) === Ct(e) && this.matchesComparison(Ut(e, this.value)); // Only compare types with matching backend order (such as double and int).\n    }\n  }, {\n    key: \"matchesComparison\",\n    value: function matchesComparison(t) {\n      switch (this.op) {\n        case \"<\"\n        /* Operator.LESS_THAN */\n        :\n          return t < 0;\n\n        case \"<=\"\n        /* Operator.LESS_THAN_OR_EQUAL */\n        :\n          return t <= 0;\n\n        case \"==\"\n        /* Operator.EQUAL */\n        :\n          return 0 === t;\n\n        case \"!=\"\n        /* Operator.NOT_EQUAL */\n        :\n          return 0 !== t;\n\n        case \">\"\n        /* Operator.GREATER_THAN */\n        :\n          return t > 0;\n\n        case \">=\"\n        /* Operator.GREATER_THAN_OR_EQUAL */\n        :\n          return t >= 0;\n\n        default:\n          return b();\n      }\n    }\n  }, {\n    key: \"isInequality\",\n    value: function isInequality() {\n      return [\"<\"\n      /* Operator.LESS_THAN */\n      , \"<=\"\n      /* Operator.LESS_THAN_OR_EQUAL */\n      , \">\"\n      /* Operator.GREATER_THAN */\n      , \">=\"\n      /* Operator.GREATER_THAN_OR_EQUAL */\n      , \"!=\"\n      /* Operator.NOT_EQUAL */\n      , \"not-in\"\n      /* Operator.NOT_IN */\n      ].indexOf(this.op) >= 0;\n    }\n  }, {\n    key: \"getFlattenedFilters\",\n    value: function getFlattenedFilters() {\n      return [this];\n    }\n  }, {\n    key: \"getFilters\",\n    value: function getFilters() {\n      return [this];\n    }\n  }, {\n    key: \"getFirstInequalityField\",\n    value: function getFirstInequalityField() {\n      return this.isInequality() ? this.field : null;\n    }\n  }], [{\n    key: \"create\",\n    value: function create(t, e, n) {\n      return t.isKeyField() ? \"in\"\n      /* Operator.IN */\n      === e || \"not-in\"\n      /* Operator.NOT_IN */\n      === e ? this.createKeyFieldInFilter(t, e, n) : new ee(t, e, n) : \"array-contains\"\n      /* Operator.ARRAY_CONTAINS */\n      === e ? new ie(t, n) : \"in\"\n      /* Operator.IN */\n      === e ? new oe(t, n) : \"not-in\"\n      /* Operator.NOT_IN */\n      === e ? new ue(t, n) : \"array-contains-any\"\n      /* Operator.ARRAY_CONTAINS_ANY */\n      === e ? new ce(t, n) : new Xt(t, e, n);\n    }\n  }, {\n    key: \"createKeyFieldInFilter\",\n    value: function createKeyFieldInFilter(t, e, n) {\n      return \"in\"\n      /* Operator.IN */\n      === e ? new ne(t, n) : new re(t, n);\n    }\n  }]);\n\n  return Xt;\n}(Jt);\n\nvar Zt = /*#__PURE__*/function (_Jt2) {\n  _inherits(Zt, _Jt2);\n\n  var _super7 = _createSuper(Zt);\n\n  function Zt(t, e) {\n    var _this11;\n\n    _classCallCheck(this, Zt);\n\n    _this11 = _super7.call(this), _this11.filters = t, _this11.op = e, _this11.D = null;\n    return _this11;\n  }\n  /**\n   * Creates a filter based on the provided arguments.\n   */\n\n\n  _createClass(Zt, [{\n    key: \"matches\",\n    value: function matches(t) {\n      return \"and\"\n      /* CompositeOperator.AND */\n      === this.op ? void 0 === this.filters.find(function (e) {\n        return !e.matches(t);\n      }) : void 0 !== this.filters.find(function (e) {\n        return e.matches(t);\n      });\n    }\n  }, {\n    key: \"getFlattenedFilters\",\n    value: function getFlattenedFilters() {\n      return null !== this.D || (this.D = this.filters.reduce(function (t, e) {\n        return t.concat(e.getFlattenedFilters());\n      }, [])), this.D;\n    } // Returns a mutable copy of `this.filters`\n\n  }, {\n    key: \"getFilters\",\n    value: function getFilters() {\n      return Object.assign([], this.filters);\n    }\n  }, {\n    key: \"getFirstInequalityField\",\n    value: function getFirstInequalityField() {\n      var t = this.F(function (t) {\n        return t.isInequality();\n      });\n      return null !== t ? t.field : null;\n    } // Performs a depth-first search to find and return the first FieldFilter in the composite filter\n    // that satisfies the predicate. Returns `null` if none of the FieldFilters satisfy the\n    // predicate.\n\n  }, {\n    key: \"F\",\n    value: function F(t) {\n      var _iterator = _createForOfIteratorHelper(this.getFlattenedFilters()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var e = _step.value;\n          if (t(e)) return e;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return null;\n    }\n  }], [{\n    key: \"create\",\n    value: function create(t, e) {\n      return new Zt(t, e);\n    }\n  }]);\n\n  return Zt;\n}(Jt);\n\nfunction te(t, e) {\n  return t instanceof Xt ? function (t, e) {\n    return e instanceof Xt && t.op === e.op && t.field.isEqual(e.field) && Mt(t.value, e.value);\n  }(t, e) : t instanceof Zt ? function (t, e) {\n    if (e instanceof Zt && t.op === e.op && t.filters.length === e.filters.length) {\n      return t.filters.reduce(function (t, n, r) {\n        return t && te(n, e.filters[r]);\n      }, !0);\n    }\n\n    return !1;\n  }\n  /** Filter that matches on key fields (i.e. '__name__'). */\n  (t, e) : void b();\n}\n\nvar ee = /*#__PURE__*/function (_Xt) {\n  _inherits(ee, _Xt);\n\n  var _super8 = _createSuper(ee);\n\n  function ee(t, e, n) {\n    var _this12;\n\n    _classCallCheck(this, ee);\n\n    _this12 = _super8.call(this, t, e, n), _this12.key = rt.fromName(n.referenceValue);\n    return _this12;\n  }\n\n  _createClass(ee, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var e = rt.comparator(t.key, this.key);\n      return this.matchesComparison(e);\n    }\n  }]);\n\n  return ee;\n}(Xt);\n/** Filter that matches on key fields within an array. */\n\n\nvar ne = /*#__PURE__*/function (_Xt2) {\n  _inherits(ne, _Xt2);\n\n  var _super9 = _createSuper(ne);\n\n  function ne(t, e) {\n    var _this13;\n\n    _classCallCheck(this, ne);\n\n    _this13 = _super9.call(this, t, \"in\"\n    /* Operator.IN */\n    , e), _this13.keys = se(\"in\"\n    /* Operator.IN */\n    , e);\n    return _this13;\n  }\n\n  _createClass(ne, [{\n    key: \"matches\",\n    value: function matches(t) {\n      return this.keys.some(function (e) {\n        return e.isEqual(t.key);\n      });\n    }\n  }]);\n\n  return ne;\n}(Xt);\n/** Filter that matches on key fields not present within an array. */\n\n\nvar re = /*#__PURE__*/function (_Xt3) {\n  _inherits(re, _Xt3);\n\n  var _super10 = _createSuper(re);\n\n  function re(t, e) {\n    var _this14;\n\n    _classCallCheck(this, re);\n\n    _this14 = _super10.call(this, t, \"not-in\"\n    /* Operator.NOT_IN */\n    , e), _this14.keys = se(\"not-in\"\n    /* Operator.NOT_IN */\n    , e);\n    return _this14;\n  }\n\n  _createClass(re, [{\n    key: \"matches\",\n    value: function matches(t) {\n      return !this.keys.some(function (e) {\n        return e.isEqual(t.key);\n      });\n    }\n  }]);\n\n  return re;\n}(Xt);\n\nfunction se(t, e) {\n  var n;\n  return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map(function (t) {\n    return rt.fromName(t.referenceValue);\n  });\n}\n/** A Filter that implements the array-contains operator. */\n\n\nvar ie = /*#__PURE__*/function (_Xt4) {\n  _inherits(ie, _Xt4);\n\n  var _super11 = _createSuper(ie);\n\n  function ie(t, e) {\n    _classCallCheck(this, ie);\n\n    return _super11.call(this, t, \"array-contains\"\n    /* Operator.ARRAY_CONTAINS */\n    , e);\n  }\n\n  _createClass(ie, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var e = t.data.field(this.field);\n      return Qt(e) && Lt(e.arrayValue, this.value);\n    }\n  }]);\n\n  return ie;\n}(Xt);\n/** A Filter that implements the IN operator. */\n\n\nvar oe = /*#__PURE__*/function (_Xt5) {\n  _inherits(oe, _Xt5);\n\n  var _super12 = _createSuper(oe);\n\n  function oe(t, e) {\n    _classCallCheck(this, oe);\n\n    return _super12.call(this, t, \"in\"\n    /* Operator.IN */\n    , e);\n  }\n\n  _createClass(oe, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var e = t.data.field(this.field);\n      return null !== e && Lt(this.value.arrayValue, e);\n    }\n  }]);\n\n  return oe;\n}(Xt);\n/** A Filter that implements the not-in operator. */\n\n\nvar ue = /*#__PURE__*/function (_Xt6) {\n  _inherits(ue, _Xt6);\n\n  var _super13 = _createSuper(ue);\n\n  function ue(t, e) {\n    _classCallCheck(this, ue);\n\n    return _super13.call(this, t, \"not-in\"\n    /* Operator.NOT_IN */\n    , e);\n  }\n\n  _createClass(ue, [{\n    key: \"matches\",\n    value: function matches(t) {\n      if (Lt(this.value.arrayValue, {\n        nullValue: \"NULL_VALUE\"\n      })) return !1;\n      var e = t.data.field(this.field);\n      return null !== e && !Lt(this.value.arrayValue, e);\n    }\n  }]);\n\n  return ue;\n}(Xt);\n/** A Filter that implements the array-contains-any operator. */\n\n\nvar ce = /*#__PURE__*/function (_Xt7) {\n  _inherits(ce, _Xt7);\n\n  var _super14 = _createSuper(ce);\n\n  function ce(t, e) {\n    _classCallCheck(this, ce);\n\n    return _super14.call(this, t, \"array-contains-any\"\n    /* Operator.ARRAY_CONTAINS_ANY */\n    , e);\n  }\n\n  _createClass(ce, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var _this15 = this;\n\n      var e = t.data.field(this.field);\n      return !(!Qt(e) || !e.arrayValue.values) && e.arrayValue.values.some(function (t) {\n        return Lt(_this15.value.arrayValue, t);\n      });\n    }\n  }]);\n\n  return ce;\n}(Xt);\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */\n\n\nvar ae = /*#__PURE__*/_createClass(function ae(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"asc\";\n\n  _classCallCheck(this, ae);\n\n  this.field = t, this.dir = e;\n});\n\nfunction he(t, e) {\n  return t.dir === e.dir && t.field.isEqual(e.field);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */\n\n\nvar le = /*#__PURE__*/function () {\n  function le(t) {\n    _classCallCheck(this, le);\n\n    this.timestamp = t;\n  }\n\n  _createClass(le, [{\n    key: \"compareTo\",\n    value: function compareTo(t) {\n      return this.timestamp._compareTo(t.timestamp);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */\n\n  }, {\n    key: \"toMicroseconds\",\n    value: function toMicroseconds() {\n      // Convert to microseconds.\n      return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n  }, {\n    key: \"toTimestamp\",\n    value: function toTimestamp() {\n      return this.timestamp;\n    }\n  }], [{\n    key: \"fromTimestamp\",\n    value: function fromTimestamp(t) {\n      return new le(t);\n    }\n  }, {\n    key: \"min\",\n    value: function min() {\n      return new le(new xt(0, 0));\n    }\n  }, {\n    key: \"max\",\n    value: function max() {\n      return new le(new xt(253402300799, 999999999));\n    }\n  }]);\n\n  return le;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\n\n\nvar fe = /*#__PURE__*/function () {\n  function fe(t, e) {\n    _classCallCheck(this, fe);\n\n    this.comparator = t, this.root = e || we.EMPTY;\n  } // Returns a copy of the map, with the specified key/value added or replaced.\n\n\n  _createClass(fe, [{\n    key: \"insert\",\n    value: function insert(t, e) {\n      return new fe(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, we.BLACK, null, null));\n    } // Returns a copy of the map, with the specified key removed.\n\n  }, {\n    key: \"remove\",\n    value: function remove(t) {\n      return new fe(this.comparator, this.root.remove(t, this.comparator).copy(null, null, we.BLACK, null, null));\n    } // Returns the value of the node with the given key, or null.\n\n  }, {\n    key: \"get\",\n    value: function get(t) {\n      var e = this.root;\n\n      for (; !e.isEmpty();) {\n        var n = this.comparator(t, e.key);\n        if (0 === n) return e.value;\n        n < 0 ? e = e.left : n > 0 && (e = e.right);\n      }\n\n      return null;\n    } // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n\n  }, {\n    key: \"indexOf\",\n    value: function indexOf(t) {\n      // Number of nodes that were pruned when descending right\n      var e = 0,\n          n = this.root;\n\n      for (; !n.isEmpty();) {\n        var r = this.comparator(t, n.key);\n        if (0 === r) return e + n.left.size;\n        r < 0 ? n = n.left : ( // Count all nodes left of the node plus the node itself\n        e += n.left.size + 1, n = n.right);\n      } // Node not found\n\n\n      return -1;\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.root.isEmpty();\n    } // Returns the total number of nodes in the map.\n\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.root.size;\n    } // Returns the minimum key in the map.\n\n  }, {\n    key: \"minKey\",\n    value: function minKey() {\n      return this.root.minKey();\n    } // Returns the maximum key in the map.\n\n  }, {\n    key: \"maxKey\",\n    value: function maxKey() {\n      return this.root.maxKey();\n    } // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n\n  }, {\n    key: \"inorderTraversal\",\n    value: function inorderTraversal(t) {\n      return this.root.inorderTraversal(t);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(t) {\n      this.inorderTraversal(function (e, n) {\n        return t(e, n), !1;\n      });\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var t = [];\n      return this.inorderTraversal(function (e, n) {\n        return t.push(\"\".concat(e, \":\").concat(n)), !1;\n      }), \"{\".concat(t.join(\", \"), \"}\");\n    } // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n\n  }, {\n    key: \"reverseTraversal\",\n    value: function reverseTraversal(t) {\n      return this.root.reverseTraversal(t);\n    } // Returns an iterator over the SortedMap.\n\n  }, {\n    key: \"getIterator\",\n    value: function getIterator() {\n      return new de(this.root, null, this.comparator, !1);\n    }\n  }, {\n    key: \"getIteratorFrom\",\n    value: function getIteratorFrom(t) {\n      return new de(this.root, t, this.comparator, !1);\n    }\n  }, {\n    key: \"getReverseIterator\",\n    value: function getReverseIterator() {\n      return new de(this.root, null, this.comparator, !0);\n    }\n  }, {\n    key: \"getReverseIteratorFrom\",\n    value: function getReverseIteratorFrom(t) {\n      return new de(this.root, t, this.comparator, !0);\n    }\n  }]);\n\n  return fe;\n}(); // end SortedMap\n// An iterator over an LLRBNode.\n\n\nvar de = /*#__PURE__*/function () {\n  function de(t, e, n, r) {\n    _classCallCheck(this, de);\n\n    this.isReverse = r, this.nodeStack = [];\n    var s = 1;\n\n    for (; !t.isEmpty();) {\n      if (s = e ? n(t.key, e) : 1, // flip the comparison if we're going in reverse\n      e && r && (s *= -1), s < 0) // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right;else {\n        if (0 === s) {\n          // This node is exactly equal to our start key. Push it on the stack,\n          // but stop iterating;\n          this.nodeStack.push(t);\n          break;\n        } // This node is greater than our start key, add it to the stack and move\n        // to the next one\n\n\n        this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n      }\n    }\n  }\n\n  _createClass(de, [{\n    key: \"getNext\",\n    value: function getNext() {\n      var t = this.nodeStack.pop();\n      var e = {\n        key: t.key,\n        value: t.value\n      };\n      if (this.isReverse) for (t = t.left; !t.isEmpty();) {\n        this.nodeStack.push(t), t = t.right;\n      } else for (t = t.right; !t.isEmpty();) {\n        this.nodeStack.push(t), t = t.left;\n      }\n      return e;\n    }\n  }, {\n    key: \"hasNext\",\n    value: function hasNext() {\n      return this.nodeStack.length > 0;\n    }\n  }, {\n    key: \"peek\",\n    value: function peek() {\n      if (0 === this.nodeStack.length) return null;\n      var t = this.nodeStack[this.nodeStack.length - 1];\n      return {\n        key: t.key,\n        value: t.value\n      };\n    }\n  }]);\n\n  return de;\n}(); // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\n\n\nvar we = /*#__PURE__*/function () {\n  function we(t, e, n, r, s) {\n    _classCallCheck(this, we);\n\n    this.key = t, this.value = e, this.color = null != n ? n : we.RED, this.left = null != r ? r : we.EMPTY, this.right = null != s ? s : we.EMPTY, this.size = this.left.size + 1 + this.right.size;\n  } // Returns a copy of the current node, optionally replacing pieces of it.\n\n\n  _createClass(we, [{\n    key: \"copy\",\n    value: function copy(t, e, n, r, s) {\n      return new we(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return !1;\n    } // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n\n  }, {\n    key: \"inorderTraversal\",\n    value: function inorderTraversal(t) {\n      return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    } // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n\n  }, {\n    key: \"reverseTraversal\",\n    value: function reverseTraversal(t) {\n      return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    } // Returns the minimum node in the tree.\n\n  }, {\n    key: \"min\",\n    value: function min() {\n      return this.left.isEmpty() ? this : this.left.min();\n    } // Returns the maximum key in the tree.\n\n  }, {\n    key: \"minKey\",\n    value: function minKey() {\n      return this.min().key;\n    } // Returns the maximum key in the tree.\n\n  }, {\n    key: \"maxKey\",\n    value: function maxKey() {\n      return this.right.isEmpty() ? this.key : this.right.maxKey();\n    } // Returns new tree, with the key/value added.\n\n  }, {\n    key: \"insert\",\n    value: function insert(t, e, n) {\n      var r = this;\n      var s = n(t, r.key);\n      return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), r.fixUp();\n    }\n  }, {\n    key: \"removeMin\",\n    value: function removeMin() {\n      if (this.left.isEmpty()) return we.EMPTY;\n      var t = this;\n      return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), t.fixUp();\n    } // Returns new tree, with the specified item removed.\n\n  }, {\n    key: \"remove\",\n    value: function remove(t, e) {\n      var n,\n          r = this;\n      if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), r = r.copy(null, null, null, r.left.remove(t, e), null);else {\n        if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), 0 === e(t, r.key)) {\n          if (r.right.isEmpty()) return we.EMPTY;\n          n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n        }\n\n        r = r.copy(null, null, null, null, r.right.remove(t, e));\n      }\n      return r.fixUp();\n    }\n  }, {\n    key: \"isRed\",\n    value: function isRed() {\n      return this.color;\n    } // Returns new tree after performing any needed rotations.\n\n  }, {\n    key: \"fixUp\",\n    value: function fixUp() {\n      var t = this;\n      return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n  }, {\n    key: \"moveRedLeft\",\n    value: function moveRedLeft() {\n      var t = this.colorFlip();\n      return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n  }, {\n    key: \"moveRedRight\",\n    value: function moveRedRight() {\n      var t = this.colorFlip();\n      return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n  }, {\n    key: \"rotateLeft\",\n    value: function rotateLeft() {\n      var t = this.copy(null, null, we.RED, null, this.right.left);\n      return this.right.copy(null, null, this.color, t, null);\n    }\n  }, {\n    key: \"rotateRight\",\n    value: function rotateRight() {\n      var t = this.copy(null, null, we.RED, this.left.right, null);\n      return this.left.copy(null, null, this.color, null, t);\n    }\n  }, {\n    key: \"colorFlip\",\n    value: function colorFlip() {\n      var t = this.left.copy(null, null, !this.left.color, null, null),\n          e = this.right.copy(null, null, !this.right.color, null, null);\n      return this.copy(null, null, !this.color, t, e);\n    } // For testing.\n\n  }, {\n    key: \"checkMaxDepth\",\n    value: function checkMaxDepth() {\n      var t = this.check();\n      return Math.pow(2, t) <= this.size + 1;\n    } // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n\n  }, {\n    key: \"check\",\n    value: function check() {\n      if (this.isRed() && this.left.isRed()) throw b();\n      if (this.right.isRed()) throw b();\n      var t = this.left.check();\n      if (t !== this.right.check()) throw b();\n      return t + (this.isRed() ? 0 : 1);\n    }\n  }]);\n\n  return we;\n}(); // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nwe.EMPTY = null, we.RED = !0, we.BLACK = !1; // end LLRBEmptyNode\n\nwe.EMPTY = new (\n/*#__PURE__*/\n// Represents an empty node (a leaf node in the Red-Black Tree).\nfunction () {\n  function _class2() {\n    _classCallCheck(this, _class2);\n\n    this.size = 0;\n  }\n\n  _createClass(_class2, [{\n    key: \"key\",\n    get: function get() {\n      throw b();\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      throw b();\n    }\n  }, {\n    key: \"color\",\n    get: function get() {\n      throw b();\n    }\n  }, {\n    key: \"left\",\n    get: function get() {\n      throw b();\n    }\n  }, {\n    key: \"right\",\n    get: function get() {\n      throw b();\n    } // Returns a copy of the current node.\n\n  }, {\n    key: \"copy\",\n    value: function copy(t, e, n, r, s) {\n      return this;\n    } // Returns a copy of the tree, with the specified key/value added.\n\n  }, {\n    key: \"insert\",\n    value: function insert(t, e, n) {\n      return new we(t, e);\n    } // Returns a copy of the tree, with the specified key removed.\n\n  }, {\n    key: \"remove\",\n    value: function remove(t, e) {\n      return this;\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return !0;\n    }\n  }, {\n    key: \"inorderTraversal\",\n    value: function inorderTraversal(t) {\n      return !1;\n    }\n  }, {\n    key: \"reverseTraversal\",\n    value: function reverseTraversal(t) {\n      return !1;\n    }\n  }, {\n    key: \"minKey\",\n    value: function minKey() {\n      return null;\n    }\n  }, {\n    key: \"maxKey\",\n    value: function maxKey() {\n      return null;\n    }\n  }, {\n    key: \"isRed\",\n    value: function isRed() {\n      return !1;\n    } // For testing.\n\n  }, {\n    key: \"checkMaxDepth\",\n    value: function checkMaxDepth() {\n      return !0;\n    }\n  }, {\n    key: \"check\",\n    value: function check() {\n      return 0;\n    }\n  }]);\n\n  return _class2;\n}())();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\n\nvar me = /*#__PURE__*/function () {\n  function me(t) {\n    _classCallCheck(this, me);\n\n    this.comparator = t, this.data = new fe(this.comparator);\n  }\n\n  _createClass(me, [{\n    key: \"has\",\n    value: function has(t) {\n      return null !== this.data.get(t);\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.data.minKey();\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      return this.data.maxKey();\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.data.size;\n    }\n  }, {\n    key: \"indexOf\",\n    value: function indexOf(t) {\n      return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */\n\n  }, {\n    key: \"forEach\",\n    value: function forEach(t) {\n      this.data.inorderTraversal(function (e, n) {\n        return t(e), !1;\n      });\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */\n\n  }, {\n    key: \"forEachInRange\",\n    value: function forEachInRange(t, e) {\n      var n = this.data.getIteratorFrom(t[0]);\n\n      for (; n.hasNext();) {\n        var r = n.getNext();\n        if (this.comparator(r.key, t[1]) >= 0) return;\n        e(r.key);\n      }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */\n\n  }, {\n    key: \"forEachWhile\",\n    value: function forEachWhile(t, e) {\n      var n;\n\n      for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext();) {\n        if (!t(n.getNext().key)) return;\n      }\n    }\n    /** Finds the least element greater than or equal to `elem`. */\n\n  }, {\n    key: \"firstAfterOrEqual\",\n    value: function firstAfterOrEqual(t) {\n      var e = this.data.getIteratorFrom(t);\n      return e.hasNext() ? e.getNext().key : null;\n    }\n  }, {\n    key: \"getIterator\",\n    value: function getIterator() {\n      return new pe(this.data.getIterator());\n    }\n  }, {\n    key: \"getIteratorFrom\",\n    value: function getIteratorFrom(t) {\n      return new pe(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */\n\n  }, {\n    key: \"add\",\n    value: function add(t) {\n      return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.data.isEmpty();\n    }\n  }, {\n    key: \"unionWith\",\n    value: function unionWith(t) {\n      var e = this; // Make sure `result` always refers to the larger one of the two sets.\n\n      return e.size < t.size && (e = t, t = this), t.forEach(function (t) {\n        e = e.add(t);\n      }), e;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      if (!(t instanceof me)) return !1;\n      if (this.size !== t.size) return !1;\n      var e = this.data.getIterator(),\n          n = t.data.getIterator();\n\n      for (; e.hasNext();) {\n        var _t9 = e.getNext().key,\n            r = n.getNext().key;\n        if (0 !== this.comparator(_t9, r)) return !1;\n      }\n\n      return !0;\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      var t = [];\n      return this.forEach(function (e) {\n        t.push(e);\n      }), t;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var t = [];\n      return this.forEach(function (e) {\n        return t.push(e);\n      }), \"SortedSet(\" + t.toString() + \")\";\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(t) {\n      var e = new me(this.comparator);\n      return e.data = t, e;\n    }\n  }]);\n\n  return me;\n}();\n\nvar pe = /*#__PURE__*/function () {\n  function pe(t) {\n    _classCallCheck(this, pe);\n\n    this.iter = t;\n  }\n\n  _createClass(pe, [{\n    key: \"getNext\",\n    value: function getNext() {\n      return this.iter.getNext().key;\n    }\n  }, {\n    key: \"hasNext\",\n    value: function hasNext() {\n      return this.iter.hasNext();\n    }\n  }]);\n\n  return pe;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */\n\n\nvar ye = /*#__PURE__*/function () {\n  function ye(t) {\n    _classCallCheck(this, ye);\n\n    this.fields = t, // TODO(dimond): validation of FieldMask\n    // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n    t.sort(nt.comparator);\n  }\n\n  _createClass(ye, [{\n    key: \"unionWith\",\n    value:\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */\n    function unionWith(t) {\n      var e = new me(nt.comparator);\n\n      var _iterator2 = _createForOfIteratorHelper(this.fields),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _t10 = _step2.value;\n          e = e.add(_t10);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      var _iterator3 = _createForOfIteratorHelper(t),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var n = _step3.value;\n          e = e.add(n);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return new ye(e.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */\n\n  }, {\n    key: \"covers\",\n    value: function covers(t) {\n      var _iterator4 = _createForOfIteratorHelper(this.fields),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var e = _step4.value;\n          if (e.isPrefixOf(t)) return !0;\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      return !1;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return Tt(this.fields, t.fields, function (t, e) {\n        return t.isEqual(e);\n      });\n    }\n  }], [{\n    key: \"empty\",\n    value: function empty() {\n      return new ye([]);\n    }\n  }]);\n\n  return ye;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */\n\n\nvar ge = /*#__PURE__*/function () {\n  function ge(t) {\n    _classCallCheck(this, ge);\n\n    this.value = t;\n  }\n\n  _createClass(ge, [{\n    key: \"field\",\n    value:\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */\n    function field(t) {\n      if (t.isEmpty()) return this.value;\n      {\n        var e = this.value;\n\n        for (var n = 0; n < t.length - 1; ++n) {\n          if (e = (e.mapValue.fields || {})[t.get(n)], !Gt(e)) return null;\n        }\n\n        return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n      }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(t, e) {\n      this.getFieldsMap(t.popLast())[t.lastSegment()] = Kt(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */\n\n  }, {\n    key: \"setAll\",\n    value: function setAll(t) {\n      var _this16 = this;\n\n      var e = nt.emptyPath(),\n          n = {},\n          r = [];\n      t.forEach(function (t, s) {\n        if (!e.isImmediateParentOf(s)) {\n          // Insert the accumulated changes at this parent location\n          var _t11 = _this16.getFieldsMap(e);\n\n          _this16.applyChanges(_t11, n, r), n = {}, r = [], e = s.popLast();\n        }\n\n        t ? n[s.lastSegment()] = Kt(t) : r.push(s.lastSegment());\n      });\n      var s = this.getFieldsMap(e);\n      this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      var e = this.field(t.popLast());\n      Gt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return Mt(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */\n\n  }, {\n    key: \"getFieldsMap\",\n    value: function getFieldsMap(t) {\n      var e = this.value;\n      e.mapValue.fields || (e.mapValue = {\n        fields: {}\n      });\n\n      for (var n = 0; n < t.length; ++n) {\n        var r = e.mapValue.fields[t.get(n)];\n        Gt(r) && r.mapValue.fields || (r = {\n          mapValue: {\n            fields: {}\n          }\n        }, e.mapValue.fields[t.get(n)] = r), e = r;\n      }\n\n      return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */\n\n  }, {\n    key: \"applyChanges\",\n    value: function applyChanges(t, e, n) {\n      Rt(e, function (e, n) {\n        return t[e] = n;\n      });\n\n      var _iterator5 = _createForOfIteratorHelper(n),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _e11 = _step5.value;\n          delete t[_e11];\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new ge(Kt(this.value));\n    }\n  }], [{\n    key: \"empty\",\n    value: function empty() {\n      return new ge({\n        mapValue: {}\n      });\n    }\n  }]);\n\n  return ge;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */\n\n\nvar _e = /*#__PURE__*/function () {\n  function _e(t, e, n, r, s, i, o) {\n    _classCallCheck(this, _e);\n\n    this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.createTime = s, this.data = i, this.documentState = o;\n  }\n  /**\n   * Creates a document with no known version or data, but which can serve as\n   * base document for mutations.\n   */\n\n\n  _createClass(_e, [{\n    key: \"convertToFoundDocument\",\n    value:\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */\n    function convertToFoundDocument(t, e) {\n      // If a document is switching state from being an invalid or deleted\n      // document to a valid (FOUND_DOCUMENT) document, either due to receiving an\n      // update from Watch or due to applying a local set mutation on top\n      // of a deleted document, our best guess about its createTime would be the\n      // version at which the document transitioned to a FOUND_DOCUMENT.\n      return !this.createTime.isEqual(le.min()) || 2\n      /* DocumentType.NO_DOCUMENT */\n      !== this.documentType && 0\n      /* DocumentType.INVALID */\n      !== this.documentType || (this.createTime = t), this.version = t, this.documentType = 1\n      /* DocumentType.FOUND_DOCUMENT */\n      , this.data = e, this.documentState = 0\n      /* DocumentState.SYNCED */\n      , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */\n\n  }, {\n    key: \"convertToNoDocument\",\n    value: function convertToNoDocument(t) {\n      return this.version = t, this.documentType = 2\n      /* DocumentType.NO_DOCUMENT */\n      , this.data = ge.empty(), this.documentState = 0\n      /* DocumentState.SYNCED */\n      , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */\n\n  }, {\n    key: \"convertToUnknownDocument\",\n    value: function convertToUnknownDocument(t) {\n      return this.version = t, this.documentType = 3\n      /* DocumentType.UNKNOWN_DOCUMENT */\n      , this.data = ge.empty(), this.documentState = 2\n      /* DocumentState.HAS_COMMITTED_MUTATIONS */\n      , this;\n    }\n  }, {\n    key: \"setHasCommittedMutations\",\n    value: function setHasCommittedMutations() {\n      return this.documentState = 2\n      /* DocumentState.HAS_COMMITTED_MUTATIONS */\n      , this;\n    }\n  }, {\n    key: \"setHasLocalMutations\",\n    value: function setHasLocalMutations() {\n      return this.documentState = 1\n      /* DocumentState.HAS_LOCAL_MUTATIONS */\n      , this.version = le.min(), this;\n    }\n  }, {\n    key: \"setReadTime\",\n    value: function setReadTime(t) {\n      return this.readTime = t, this;\n    }\n  }, {\n    key: \"hasLocalMutations\",\n    get: function get() {\n      return 1\n      /* DocumentState.HAS_LOCAL_MUTATIONS */\n      === this.documentState;\n    }\n  }, {\n    key: \"hasCommittedMutations\",\n    get: function get() {\n      return 2\n      /* DocumentState.HAS_COMMITTED_MUTATIONS */\n      === this.documentState;\n    }\n  }, {\n    key: \"hasPendingWrites\",\n    get: function get() {\n      return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n  }, {\n    key: \"isValidDocument\",\n    value: function isValidDocument() {\n      return 0\n      /* DocumentType.INVALID */\n      !== this.documentType;\n    }\n  }, {\n    key: \"isFoundDocument\",\n    value: function isFoundDocument() {\n      return 1\n      /* DocumentType.FOUND_DOCUMENT */\n      === this.documentType;\n    }\n  }, {\n    key: \"isNoDocument\",\n    value: function isNoDocument() {\n      return 2\n      /* DocumentType.NO_DOCUMENT */\n      === this.documentType;\n    }\n  }, {\n    key: \"isUnknownDocument\",\n    value: function isUnknownDocument() {\n      return 3\n      /* DocumentType.UNKNOWN_DOCUMENT */\n      === this.documentType;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t instanceof _e && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n  }, {\n    key: \"mutableCopy\",\n    value: function mutableCopy() {\n      return new _e(this.key, this.documentType, this.version, this.readTime, this.createTime, this.data.clone(), this.documentState);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Document(\".concat(this.key, \", \").concat(this.version, \", \").concat(JSON.stringify(this.data.value), \", {createTime: \").concat(this.createTime, \"}), {documentType: \").concat(this.documentType, \"}), {documentState: \").concat(this.documentState, \"})\");\n    }\n  }], [{\n    key: \"newInvalidDocument\",\n    value: function newInvalidDocument(t) {\n      return new _e(t, 0\n      /* DocumentType.INVALID */\n      ,\n      /* version */\n      le.min(),\n      /* readTime */\n      le.min(),\n      /* createTime */\n      le.min(), ge.empty(), 0\n      /* DocumentState.SYNCED */\n      );\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */\n\n  }, {\n    key: \"newFoundDocument\",\n    value: function newFoundDocument(t, e, n, r) {\n      return new _e(t, 1\n      /* DocumentType.FOUND_DOCUMENT */\n      ,\n      /* version */\n      e,\n      /* readTime */\n      le.min(),\n      /* createTime */\n      n, r, 0\n      /* DocumentState.SYNCED */\n      );\n    }\n    /** Creates a new document that is known to not exist at the given version. */\n\n  }, {\n    key: \"newNoDocument\",\n    value: function newNoDocument(t, e) {\n      return new _e(t, 2\n      /* DocumentType.NO_DOCUMENT */\n      ,\n      /* version */\n      e,\n      /* readTime */\n      le.min(),\n      /* createTime */\n      le.min(), ge.empty(), 0\n      /* DocumentState.SYNCED */\n      );\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */\n\n  }, {\n    key: \"newUnknownDocument\",\n    value: function newUnknownDocument(t, e) {\n      return new _e(t, 3\n      /* DocumentType.UNKNOWN_DOCUMENT */\n      ,\n      /* version */\n      e,\n      /* readTime */\n      le.min(),\n      /* createTime */\n      le.min(), ge.empty(), 2\n      /* DocumentState.HAS_COMMITTED_MUTATIONS */\n      );\n    }\n  }]);\n\n  return _e;\n}();\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\n\n\nvar ve = /*#__PURE__*/_createClass(function ve(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  var i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n  var o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n\n  _classCallCheck(this, ve);\n\n  this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, this.startAt = i, this.endAt = o, this.S = null;\n});\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */\n\n\nfunction be(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  var i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n  var o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n  return new ve(t, e, n, r, s, i, o);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\n\n\nvar Ee = /*#__PURE__*/_createClass(\n/**\n * Initializes a Query with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n */\nfunction Ee(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  var i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : \"F\";\n  var o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n  var u = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n\n  _classCallCheck(this, Ee);\n\n  this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.q = null, // The corresponding `Target` of this `Query` instance.\n  this.O = null, this.startAt, this.endAt;\n});\n/** Creates a new Query for a query that matches all documents at `path` */\n\n\nfunction Ie(t) {\n  return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction Te(t) {\n  var _iterator6 = _createForOfIteratorHelper(t.filters),\n      _step6;\n\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var e = _step6.value;\n\n      var _t12 = e.getFirstInequalityField();\n\n      if (null !== _t12) return _t12;\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n\n  return null;\n}\n/**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\n\n\nfunction Ae(t) {\n  return null !== t.collectionGroup;\n}\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */\n\n\nfunction Re(t) {\n  var e = I(t);\n\n  if (null === e.q) {\n    e.q = [];\n\n    var _t13 = Te(e),\n        n = Ie(e);\n\n    if (null !== _t13 && null === n) // In order to implicitly add key ordering, we must also add the\n      // inequality filter field for it to be a valid query.\n      // Note that the default inequality field and key ordering is ascending.\n      _t13.isKeyField() || e.q.push(new ae(_t13)), e.q.push(new ae(nt.keyField(), \"asc\"\n      /* Direction.ASCENDING */\n      ));else {\n      var _t14 = !1;\n\n      var _iterator7 = _createForOfIteratorHelper(e.explicitOrderBy),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var _n4 = _step7.value;\n          e.q.push(_n4), _n4.field.isKeyField() && (_t14 = !0);\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      if (!_t14) {\n        // The order of the implicit key ordering always matches the last\n        // explicit order by\n        var _t15 = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\"\n        /* Direction.ASCENDING */\n        ;\n\n        e.q.push(new ae(nt.keyField(), _t15));\n      }\n    }\n  }\n\n  return e.q;\n}\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */\n\n\nfunction Pe(t) {\n  var e = I(t);\n  if (!e.O) if (\"F\"\n  /* LimitType.First */\n  === e.limitType) e.O = be(e.path, e.collectionGroup, Re(e), e.filters, e.limit, e.startAt, e.endAt);else {\n    // Flip the orderBy directions since we want the last results\n    var _t16 = [];\n\n    var _iterator8 = _createForOfIteratorHelper(Re(e)),\n        _step8;\n\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var _n5 = _step8.value;\n\n        var _e12 = \"desc\"\n        /* Direction.DESCENDING */\n        === _n5.dir ? \"asc\"\n        /* Direction.ASCENDING */\n        : \"desc\"\n        /* Direction.DESCENDING */\n        ;\n\n        _t16.push(new ae(_n5.field, _e12));\n      } // We need to swap the cursors to match the now-flipped query ordering.\n\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n\n    var n = e.endAt ? new Yt(e.endAt.position, e.endAt.inclusive) : null,\n        r = e.startAt ? new Yt(e.startAt.position, e.startAt.inclusive) : null; // Now return as a LimitType.First query.\n\n    e.O = be(e.path, e.collectionGroup, _t16, e.filters, e.limit, n, r);\n  }\n  return e.O;\n}\n\nfunction Ve(t, e) {\n  e.getFirstInequalityField(), Te(t);\n  var n = t.filters.concat([e]);\n  return new Ee(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n}\n\nfunction $e(t, e) {\n  return function (t, e) {\n    if (t.limit !== e.limit) return !1;\n    if (t.orderBy.length !== e.orderBy.length) return !1;\n\n    for (var n = 0; n < t.orderBy.length; n++) {\n      if (!he(t.orderBy[n], e.orderBy[n])) return !1;\n    }\n\n    if (t.filters.length !== e.filters.length) return !1;\n\n    for (var _n6 = 0; _n6 < t.filters.length; _n6++) {\n      if (!te(t.filters[_n6], e.filters[_n6])) return !1;\n    }\n\n    return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!Ht(t.startAt, e.startAt) && Ht(t.endAt, e.endAt);\n  }(Pe(t), Pe(e)) && t.limitType === e.limitType;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\n\n\nfunction Ne(t, e) {\n  return function (t) {\n    return \"number\" == typeof t && Number.isInteger(t) && !wt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n  }(e) ?\n  /**\n  * Returns an IntegerValue for `value`.\n  */\n  function (t) {\n    return {\n      integerValue: \"\" + t\n    };\n  }(e) : function (t, e) {\n    if (t.useProto3Json) {\n      if (isNaN(e)) return {\n        doubleValue: \"NaN\"\n      };\n      if (e === 1 / 0) return {\n        doubleValue: \"Infinity\"\n      };\n      if (e === -1 / 0) return {\n        doubleValue: \"-Infinity\"\n      };\n    }\n\n    return {\n      doubleValue: wt(e) ? \"-0\" : e\n    };\n  }(t, e);\n}\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Used to represent a field transform on a mutation. */\n\n\nvar De = /*#__PURE__*/_createClass(function De() {\n  _classCallCheck(this, De);\n\n  // Make sure that the structural type of `TransformOperation` is unique.\n  // See https://github.com/microsoft/TypeScript/issues/5451\n  this._ = void 0;\n});\n/** Transforms a value into a server-generated timestamp. */\n\n\nvar Fe = /*#__PURE__*/function (_De) {\n  _inherits(Fe, _De);\n\n  var _super15 = _createSuper(Fe);\n\n  function Fe() {\n    _classCallCheck(this, Fe);\n\n    return _super15.apply(this, arguments);\n  }\n\n  return _createClass(Fe);\n}(De);\n/** Transforms an array value via a union operation. */\n\n\nvar xe = /*#__PURE__*/function (_De2) {\n  _inherits(xe, _De2);\n\n  var _super16 = _createSuper(xe);\n\n  function xe(t) {\n    var _this17;\n\n    _classCallCheck(this, xe);\n\n    _this17 = _super16.call(this), _this17.elements = t;\n    return _this17;\n  }\n\n  return _createClass(xe);\n}(De);\n/** Transforms an array value via a remove operation. */\n\n\nvar Se = /*#__PURE__*/function (_De3) {\n  _inherits(Se, _De3);\n\n  var _super17 = _createSuper(Se);\n\n  function Se(t) {\n    var _this18;\n\n    _classCallCheck(this, Se);\n\n    _this18 = _super17.call(this), _this18.elements = t;\n    return _this18;\n  }\n\n  return _createClass(Se);\n}(De);\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */\n\n\nvar qe = /*#__PURE__*/function (_De4) {\n  _inherits(qe, _De4);\n\n  var _super18 = _createSuper(qe);\n\n  function qe(t, e) {\n    var _this19;\n\n    _classCallCheck(this, qe);\n\n    _this19 = _super18.call(this), _this19.serializer = t, _this19.k = e;\n    return _this19;\n  }\n\n  return _createClass(qe);\n}(De);\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** A field path and the TransformOperation to perform upon it. */\n\n\nvar Oe = /*#__PURE__*/_createClass(function Oe(t, e) {\n  _classCallCheck(this, Oe);\n\n  this.field = t, this.transform = e;\n});\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */\n\n\nvar ke = /*#__PURE__*/function () {\n  function ke(t, e) {\n    _classCallCheck(this, ke);\n\n    this.updateTime = t, this.exists = e;\n  }\n  /** Creates a new empty Precondition. */\n\n\n  _createClass(ke, [{\n    key: \"isNone\",\n    get:\n    /** Returns whether this Precondition is empty. */\n    function get() {\n      return void 0 === this.updateTime && void 0 === this.exists;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n  }], [{\n    key: \"none\",\n    value: function none() {\n      return new ke();\n    }\n    /** Creates a new Precondition with an exists flag. */\n\n  }, {\n    key: \"exists\",\n    value: function exists(t) {\n      return new ke(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */\n\n  }, {\n    key: \"updateTime\",\n    value: function updateTime(t) {\n      return new ke(t);\n    }\n  }]);\n\n  return ke;\n}();\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */\n\n\nvar Ce = /*#__PURE__*/_createClass(function Ce() {\n  _classCallCheck(this, Ce);\n});\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */\n\n\nvar Me = /*#__PURE__*/function (_Ce) {\n  _inherits(Me, _Ce);\n\n  var _super19 = _createSuper(Me);\n\n  function Me(t, e, n) {\n    var _this20;\n\n    var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n\n    _classCallCheck(this, Me);\n\n    _this20 = _super19.call(this), _this20.key = t, _this20.value = e, _this20.precondition = n, _this20.fieldTransforms = r, _this20.type = 0\n    /* MutationType.Set */\n    ;\n    return _this20;\n  }\n\n  _createClass(Me, [{\n    key: \"getFieldMask\",\n    value: function getFieldMask() {\n      return null;\n    }\n  }]);\n\n  return Me;\n}(Ce);\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */\n\n\nvar Le = /*#__PURE__*/function (_Ce2) {\n  _inherits(Le, _Ce2);\n\n  var _super20 = _createSuper(Le);\n\n  function Le(t, e, n, r) {\n    var _this21;\n\n    var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n\n    _classCallCheck(this, Le);\n\n    _this21 = _super20.call(this), _this21.key = t, _this21.data = e, _this21.fieldMask = n, _this21.precondition = r, _this21.fieldTransforms = s, _this21.type = 1\n    /* MutationType.Patch */\n    ;\n    return _this21;\n  }\n\n  _createClass(Le, [{\n    key: \"getFieldMask\",\n    value: function getFieldMask() {\n      return this.fieldMask;\n    }\n  }]);\n\n  return Le;\n}(Ce);\n/** A mutation that deletes the document at the given key. */\n\n\nvar Ue = /*#__PURE__*/function (_Ce3) {\n  _inherits(Ue, _Ce3);\n\n  var _super21 = _createSuper(Ue);\n\n  function Ue(t, e) {\n    var _this22;\n\n    _classCallCheck(this, Ue);\n\n    _this22 = _super21.call(this), _this22.key = t, _this22.precondition = e, _this22.type = 2\n    /* MutationType.Delete */\n    , _this22.fieldTransforms = [];\n    return _this22;\n  }\n\n  _createClass(Ue, [{\n    key: \"getFieldMask\",\n    value: function getFieldMask() {\n      return null;\n    }\n  }]);\n\n  return Ue;\n}(Ce);\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */\n\n\nvar je = /*#__PURE__*/function (_Ce4) {\n  _inherits(je, _Ce4);\n\n  var _super22 = _createSuper(je);\n\n  function je(t, e) {\n    var _this23;\n\n    _classCallCheck(this, je);\n\n    _this23 = _super22.call(this), _this23.key = t, _this23.precondition = e, _this23.type = 3\n    /* MutationType.Verify */\n    , _this23.fieldTransforms = [];\n    return _this23;\n  }\n\n  _createClass(je, [{\n    key: \"getFieldMask\",\n    value: function getFieldMask() {\n      return null;\n    }\n  }]);\n\n  return je;\n}(Ce);\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar Be = function () {\n  var t = {\n    asc: \"ASCENDING\",\n    desc: \"DESCENDING\"\n  };\n  return t;\n}(),\n    Qe = function () {\n  var t = {\n    \"<\": \"LESS_THAN\",\n    \"<=\": \"LESS_THAN_OR_EQUAL\",\n    \">\": \"GREATER_THAN\",\n    \">=\": \"GREATER_THAN_OR_EQUAL\",\n    \"==\": \"EQUAL\",\n    \"!=\": \"NOT_EQUAL\",\n    \"array-contains\": \"ARRAY_CONTAINS\",\n    in: \"IN\",\n    \"not-in\": \"NOT_IN\",\n    \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n  };\n  return t;\n}(),\n    ze = function () {\n  var t = {\n    and: \"AND\",\n    or: \"OR\"\n  };\n  return t;\n}();\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\n\n\nvar We = /*#__PURE__*/_createClass(function We(t, e) {\n  _classCallCheck(this, We);\n\n  this.databaseId = t, this.useProto3Json = e;\n});\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\n\n\nfunction Ge(t, e) {\n  if (t.useProto3Json) {\n    return \"\".concat(new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\"), \".\").concat((\"000000000\" + e.nanoseconds).slice(-9), \"Z\");\n  }\n\n  return {\n    seconds: \"\" + e.seconds,\n    nanos: e.nanoseconds\n  };\n}\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\n\n\nfunction Ke(t, e) {\n  return t.useProto3Json ? e.toBase64() : e.toUint8Array();\n}\n\nfunction Ye(t, e) {\n  return Ge(t, e.toTimestamp());\n}\n\nfunction He(t) {\n  return E(!!t), le.fromTimestamp(function (t) {\n    var e = Nt(t);\n    return new xt(e.seconds, e.nanos);\n  }(t));\n}\n\nfunction Je(t, e) {\n  return function (t) {\n    return new tt([\"projects\", t.projectId, \"databases\", t.database]);\n  }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Xe(t, e) {\n  return Je(t.databaseId, e.path);\n}\n\nfunction Ze(t, e) {\n  var n = function (t) {\n    var e = tt.fromString(t);\n    return E(dn(e)), e;\n  }(e);\n\n  if (n.get(1) !== t.databaseId.projectId) throw new U(P, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n  if (n.get(3) !== t.databaseId.database) throw new U(P, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n  return new rt((E((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n  var r;\n  /** Creates a Document proto from key and fields (but no create/update time) */\n}\n\nfunction tn(t, e) {\n  return Je(t.databaseId, e);\n}\n\nfunction en(t) {\n  return new tt([\"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database]).canonicalString();\n}\n\nfunction nn(t, e, n) {\n  return {\n    name: Xe(t, e),\n    fields: n.value.mapValue.fields\n  };\n}\n\nfunction rn(t, e) {\n  return \"found\" in e ? function (t, e) {\n    E(!!e.found), e.found.name, e.found.updateTime;\n    var n = Ze(t, e.found.name),\n        r = He(e.found.updateTime),\n        s = e.found.createTime ? He(e.found.createTime) : le.min(),\n        i = new ge({\n      mapValue: {\n        fields: e.found.fields\n      }\n    });\n    return _e.newFoundDocument(n, r, s, i);\n  }(t, e) : \"missing\" in e ? function (t, e) {\n    E(!!e.missing), E(!!e.readTime);\n    var n = Ze(t, e.missing),\n        r = He(e.readTime);\n    return _e.newNoDocument(n, r);\n  }(t, e) : b();\n}\n\nfunction sn(t, e) {\n  var n;\n  if (e instanceof Me) n = {\n    update: nn(t, e.key, e.value)\n  };else if (e instanceof Ue) n = {\n    delete: Xe(t, e.key)\n  };else if (e instanceof Le) n = {\n    update: nn(t, e.key, e.data),\n    updateMask: fn(e.fieldMask)\n  };else {\n    if (!(e instanceof je)) return b();\n    n = {\n      verify: Xe(t, e.key)\n    };\n  }\n  return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map(function (t) {\n    return function (t, e) {\n      var n = e.transform;\n      if (n instanceof Fe) return {\n        fieldPath: e.field.canonicalString(),\n        setToServerValue: \"REQUEST_TIME\"\n      };\n      if (n instanceof xe) return {\n        fieldPath: e.field.canonicalString(),\n        appendMissingElements: {\n          values: n.elements\n        }\n      };\n      if (n instanceof Se) return {\n        fieldPath: e.field.canonicalString(),\n        removeAllFromArray: {\n          values: n.elements\n        }\n      };\n      if (n instanceof qe) return {\n        fieldPath: e.field.canonicalString(),\n        increment: n.k\n      };\n      throw b();\n    }(0, t);\n  })), e.precondition.isNone || (n.currentDocument = function (t, e) {\n    return void 0 !== e.updateTime ? {\n      updateTime: Ye(t, e.updateTime)\n    } : void 0 !== e.exists ? {\n      exists: e.exists\n    } : b();\n  }(t, e.precondition)), n;\n}\n\nfunction on(t, e) {\n  // Dissect the path into parent, collectionId, and optional key filter.\n  var n = {\n    structuredQuery: {}\n  },\n      r = e.path;\n  null !== e.collectionGroup ? (n.parent = tn(t, r), n.structuredQuery.from = [{\n    collectionId: e.collectionGroup,\n    allDescendants: !0\n  }]) : (n.parent = tn(t, r.popLast()), n.structuredQuery.from = [{\n    collectionId: r.lastSegment()\n  }]);\n\n  var s = function (t) {\n    if (0 === t.length) return;\n    return ln(Zt.create(t, \"and\"\n    /* CompositeOperator.AND */\n    ));\n  }(e.filters);\n\n  s && (n.structuredQuery.where = s);\n\n  var i = function (t) {\n    if (0 === t.length) return;\n    return t.map(function (t) {\n      return (// visible for testing\n        function (t) {\n          return {\n            field: hn(t.field),\n            direction: un(t.dir)\n          };\n        } // visible for testing\n        (t)\n      );\n    });\n  }(e.orderBy);\n\n  i && (n.structuredQuery.orderBy = i);\n\n  var o = function (t, e) {\n    return t.useProto3Json || dt(e) ? e : {\n      value: e\n    };\n  }(t, e.limit);\n\n  var u;\n  return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n    before: (u = e.startAt).inclusive,\n    values: u.position\n  }), e.endAt && (n.structuredQuery.endAt = function (t) {\n    return {\n      before: !t.inclusive,\n      values: t.position\n    };\n  } // visible for testing\n  (e.endAt)), n;\n}\n\nfunction un(t) {\n  return Be[t];\n} // visible for testing\n\n\nfunction cn(t) {\n  return Qe[t];\n}\n\nfunction an(t) {\n  return ze[t];\n}\n\nfunction hn(t) {\n  return {\n    fieldPath: t.canonicalString()\n  };\n}\n\nfunction ln(t) {\n  return t instanceof Xt ? function (t) {\n    if (\"==\"\n    /* Operator.EQUAL */\n    === t.op) {\n      if (Wt(t.value)) return {\n        unaryFilter: {\n          field: hn(t.field),\n          op: \"IS_NAN\"\n        }\n      };\n      if (zt(t.value)) return {\n        unaryFilter: {\n          field: hn(t.field),\n          op: \"IS_NULL\"\n        }\n      };\n    } else if (\"!=\"\n    /* Operator.NOT_EQUAL */\n    === t.op) {\n      if (Wt(t.value)) return {\n        unaryFilter: {\n          field: hn(t.field),\n          op: \"IS_NOT_NAN\"\n        }\n      };\n      if (zt(t.value)) return {\n        unaryFilter: {\n          field: hn(t.field),\n          op: \"IS_NOT_NULL\"\n        }\n      };\n    }\n\n    return {\n      fieldFilter: {\n        field: hn(t.field),\n        op: cn(t.op),\n        value: t.value\n      }\n    };\n  }(t) : t instanceof Zt ? function (t) {\n    var e = t.getFilters().map(function (t) {\n      return ln(t);\n    });\n    if (1 === e.length) return e[0];\n    return {\n      compositeFilter: {\n        op: an(t.op),\n        filters: e\n      }\n    };\n  }(t) : b();\n}\n\nfunction fn(t) {\n  var e = [];\n  return t.fields.forEach(function (t) {\n    return e.push(t.canonicalString());\n  }), {\n    fieldPaths: e\n  };\n}\n\nfunction dn(t) {\n  // Resource names have at least 4 components (project ID, database ID)\n  return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction wn(t) {\n  return new We(t,\n  /* useProto3Json= */\n  !0);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\n\n\nvar mn = /*#__PURE__*/function () {\n  function mn(\n  /**\n   * The AsyncQueue to run backoff operations on.\n   */\n  t,\n  /**\n   * The ID to use when scheduling backoff operations on the AsyncQueue.\n   */\n  e) {\n    var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1e3;\n    var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1.5;\n    var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 6e4;\n\n    _classCallCheck(this, mn);\n\n    this.C = t, this.timerId = e, this.M = n, this.L = r, this.U = s, this.j = 0, this.B = null,\n    /** The last backoff attempt, as epoch milliseconds. */\n    this.W = Date.now(), this.reset();\n  }\n  /**\n   * Resets the backoff delay.\n   *\n   * The very next backoffAndWait() will have no delay. If it is called again\n   * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n   * subsequent ones will increase according to the backoffFactor.\n   */\n\n\n  _createClass(mn, [{\n    key: \"reset\",\n    value: function reset() {\n      this.j = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */\n\n  }, {\n    key: \"G\",\n    value: function G() {\n      this.j = this.U;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */\n\n  }, {\n    key: \"K\",\n    value: function K(t) {\n      var _this24 = this;\n\n      // Cancel any pending backoff operation.\n      this.cancel(); // First schedule using the current base (which may be 0 and should be\n      // honored as such).\n\n      var e = Math.floor(this.j + this.Y()),\n          n = Math.max(0, Date.now() - this.W),\n          r = Math.max(0, e - n); // Guard against lastAttemptTime being in the future due to a clock change.\n\n      r > 0 && y(\"ExponentialBackoff\", \"Backing off for \".concat(r, \" ms (base delay: \").concat(this.j, \" ms, delay with jitter: \").concat(e, \" ms, last attempt: \").concat(n, \" ms ago)\")), this.B = this.C.enqueueAfterDelay(this.timerId, r, function () {\n        return _this24.W = Date.now(), t();\n      }), // Apply backoff factor to determine next delay and ensure it is within\n      // bounds.\n      this.j *= this.L, this.j < this.M && (this.j = this.M), this.j > this.U && (this.j = this.U);\n    }\n  }, {\n    key: \"H\",\n    value: function H() {\n      null !== this.B && (this.B.skipDelay(), this.B = null);\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      null !== this.B && (this.B.cancel(), this.B = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */\n\n  }, {\n    key: \"Y\",\n    value: function Y() {\n      return (Math.random() - .5) * this.j;\n    }\n  }]);\n\n  return mn;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\n\n\nvar pn = /*#__PURE__*/function (_ref2) {\n  _inherits(pn, _ref2);\n\n  var _super23 = _createSuper(pn);\n\n  function pn(t, e, n, r) {\n    var _this25;\n\n    _classCallCheck(this, pn);\n\n    _this25 = _super23.call(this), _this25.authCredentials = t, _this25.appCheckCredentials = e, _this25.connection = n, _this25.serializer = r, _this25.J = !1;\n    return _this25;\n  }\n\n  _createClass(pn, [{\n    key: \"X\",\n    value: function X() {\n      if (this.J) throw new U(S, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */\n\n  }, {\n    key: \"v\",\n    value: function v(t, e, n) {\n      var _this26 = this;\n\n      return this.X(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            r = _ref4[0],\n            s = _ref4[1];\n\n        return _this26.connection.v(t, e, n, r, s);\n      }).catch(function (t) {\n        throw \"FirebaseError\" === t.name ? (t.code === F && (_this26.authCredentials.invalidateToken(), _this26.appCheckCredentials.invalidateToken()), t) : new U(_R, t.toString());\n      });\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */\n\n  }, {\n    key: \"R\",\n    value: function R(t, e, n, r) {\n      var _this27 = this;\n\n      return this.X(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            s = _ref6[0],\n            i = _ref6[1];\n\n        return _this27.connection.R(t, e, n, s, i, r);\n      }).catch(function (t) {\n        throw \"FirebaseError\" === t.name ? (t.code === F && (_this27.authCredentials.invalidateToken(), _this27.appCheckCredentials.invalidateToken()), t) : new U(_R, t.toString());\n      });\n    }\n  }, {\n    key: \"terminate\",\n    value: function terminate() {\n      this.J = !0;\n    }\n  }]);\n\n  return pn;\n}( /*#__PURE__*/function () {\n  function _class3() {\n    _classCallCheck(this, _class3);\n  }\n\n  return _createClass(_class3);\n}()); // TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\n\n\nfunction yn(_x5, _x6) {\n  return _yn.apply(this, arguments);\n}\n\nfunction _yn() {\n  _yn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(t, e) {\n    var n, r, s;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            n = I(t), r = en(n.serializer) + \"/documents\", s = {\n              writes: e.map(function (t) {\n                return sn(n.serializer, t);\n              })\n            };\n            _context7.next = 3;\n            return n.v(\"Commit\", r, s);\n\n          case 3:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _yn.apply(this, arguments);\n}\n\nfunction gn(_x7, _x8) {\n  return _gn.apply(this, arguments);\n}\n\nfunction _gn() {\n  _gn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(t, e) {\n    var n, r, s, i, o, u;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            n = I(t);\n            r = en(n.serializer) + \"/documents\";\n            s = {\n              documents: e.map(function (t) {\n                return Xe(n.serializer, t);\n              })\n            };\n            _context8.next = 5;\n            return n.R(\"BatchGetDocuments\", r, s, e.length);\n\n          case 5:\n            i = _context8.sent;\n            o = new Map();\n            i.forEach(function (t) {\n              var e = rn(n.serializer, t);\n              o.set(e.key.toString(), e);\n            });\n            u = [];\n            return _context8.abrupt(\"return\", (e.forEach(function (t) {\n              var e = o.get(t.toString());\n              E(!!e), u.push(e);\n            }), u));\n\n          case 10:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _gn.apply(this, arguments);\n}\n\nfunction _n(_x9, _x10) {\n  return _n7.apply(this, arguments);\n}\n\nfunction _n7() {\n  _n7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(t, e) {\n    var n, r;\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            n = I(t), r = on(n.serializer, Pe(e));\n            _context9.next = 3;\n            return n.R(\"RunQuery\", r.parent, {\n              structuredQuery: r.structuredQuery\n            });\n\n          case 3:\n            return _context9.abrupt(\"return\", _context9.sent.filter(function (t) {\n              return !!t.document;\n            }).map(function (t) {\n              return function (t, e, n) {\n                var r = Ze(t, e.name),\n                    s = He(e.updateTime),\n                    i = e.createTime ? He(e.createTime) : le.min(),\n                    o = new ge({\n                  mapValue: {\n                    fields: e.fields\n                  }\n                }),\n                    u = _e.newFoundDocument(r, s, i, o);\n\n                return n && u.setHasCommittedMutations(), n ? u.setHasCommittedMutations() : u;\n              }(n.serializer, t.document, void 0);\n            }));\n\n          case 4:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _n7.apply(this, arguments);\n}\n\nfunction vn(_x11, _x12, _x13) {\n  return _vn.apply(this, arguments);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction _vn() {\n  _vn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(t, e, n) {\n    var r, s, _ref10, i, o, u, c, a;\n\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            s = I(t), _ref10 = function (t, e, n) {\n              var r = on(t, e),\n                  s = {},\n                  i = [];\n              var o = 0;\n              return n.forEach(function (t) {\n                // Map all client-side aliases to a unique short-form\n                // alias. This avoids issues with client-side aliases that\n                // exceed the 1500-byte string size limit.\n                var e = \"aggregate_\" + o++;\n                s[e] = t.alias, \"count\" === t.$ ? i.push({\n                  alias: e,\n                  count: {}\n                }) : \"avg\" === t.$ ? i.push({\n                  alias: e,\n                  avg: {\n                    field: hn(t.fieldPath)\n                  }\n                }) : \"sum\" === t.$ && i.push({\n                  alias: e,\n                  sum: {\n                    field: hn(t.fieldPath)\n                  }\n                });\n              }), {\n                request: {\n                  structuredAggregationQuery: {\n                    aggregations: i,\n                    structuredQuery: r.structuredQuery\n                  },\n                  parent: r.parent\n                },\n                Z: s\n              };\n            }(s.serializer, Pe(e), n), i = _ref10.request, o = _ref10.Z, u = i.parent;\n            s.connection.g || delete i.parent;\n            _context10.next = 4;\n            return s.R(\"RunAggregationQuery\", u, i,\n            /*expectedResponseCount=*/\n            1);\n\n          case 4:\n            c = _context10.sent.filter(function (t) {\n              return !!t.result;\n            });\n            // Omit RunAggregationQueryResponse that only contain readTimes.\n            E(1 === c.length); // Remap the short-form aliases that were sent to the server\n            // to the client-side aliases. Users will access the results\n            // using the client-side alias.\n\n            a = null === (r = c[0].result) || void 0 === r ? void 0 : r.aggregateFields;\n            return _context10.abrupt(\"return\", Object.keys(a).reduce(function (t, e) {\n              return t[o[e]] = a[e], t;\n            }, {}));\n\n          case 8:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _vn.apply(this, arguments);\n}\n\nvar bn = new Map();\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\n\nfunction En(t) {\n  if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n\n  if (!bn.has(t)) {\n    y(\"ComponentProvider\", \"Initializing Datastore\");\n\n    var i = function (t) {\n      return new _t(t, fetch.bind(null));\n    }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), new J(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, ht(s.experimentalLongPollingOptions), s.useFetchStreams))),\n        o = wn(t._databaseId),\n        u = function (t, e, n, r) {\n      return new pn(t, e, n, r);\n    }(t._authCredentials, t._appCheckCredentials, i, o);\n\n    bn.set(t, u);\n  }\n\n  var e, n, r, s;\n  /**\n  * @license\n  * Copyright 2018 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  return bn.get(t);\n}\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\n\n\nvar In = /*#__PURE__*/function () {\n  function In(t) {\n    _classCallCheck(this, In);\n\n    var e, n;\n\n    if (void 0 === t.host) {\n      if (void 0 !== t.ssl) throw new U(P, \"Can't provide ssl option if host option is not set\");\n      this.host = \"firestore.googleapis.com\", this.ssl = true;\n    } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n\n    if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, this.cache = t.localCache, void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040;else {\n      if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(P, \"cacheSizeBytes must be at least 1048576\");\n      this.cacheSizeBytes = t.cacheSizeBytes;\n    }\n    !function (t, e, n, r) {\n      if (!0 === e && !0 === r) throw new U(P, \"\".concat(t, \" and \").concat(n, \" cannot be used together.\"));\n    }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling), this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalForceLongPolling ? this.experimentalAutoDetectLongPolling = !1 : void 0 === t.experimentalAutoDetectLongPolling ? this.experimentalAutoDetectLongPolling = true : // For backwards compatibility, coerce the value to boolean even though\n    // the TypeScript compiler has narrowed the type to boolean already.\n    // noinspection PointlessBooleanExpressionJS\n    this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, this.experimentalLongPollingOptions = ht(null !== (n = t.experimentalLongPollingOptions) && void 0 !== n ? n : {}), function (t) {\n      if (void 0 !== t.timeoutSeconds) {\n        if (isNaN(t.timeoutSeconds)) throw new U(P, \"invalid long polling timeout: \".concat(t.timeoutSeconds, \" (must not be NaN)\"));\n        if (t.timeoutSeconds < 5) throw new U(P, \"invalid long polling timeout: \".concat(t.timeoutSeconds, \" (minimum allowed value is 5)\"));\n        if (t.timeoutSeconds > 30) throw new U(P, \"invalid long polling timeout: \".concat(t.timeoutSeconds, \" (maximum allowed value is 30)\"));\n      }\n    }\n    /**\n    * @license\n    * Copyright 2020 Google LLC\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *   http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n\n    /**\n    * The Cloud Firestore service interface.\n    *\n    * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n    */\n    (this.experimentalLongPollingOptions), this.useFetchStreams = !!t.useFetchStreams;\n  }\n\n  _createClass(In, [{\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && (e = this.experimentalLongPollingOptions, n = t.experimentalLongPollingOptions, e.timeoutSeconds === n.timeoutSeconds) && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n      var e, n;\n    }\n  }]);\n\n  return In;\n}();\n\nvar Tn = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function Tn(t, e, n, r) {\n    _classCallCheck(this, Tn);\n\n    this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, this._app = r,\n    /**\n     * Whether it's a Firestore or Firestore Lite instance.\n     */\n    this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new In({}), this._settingsFrozen = !1;\n  }\n  /**\n   * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n   * instance.\n   */\n\n\n  _createClass(Tn, [{\n    key: \"app\",\n    get: function get() {\n      if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n      return this._app;\n    }\n  }, {\n    key: \"_initialized\",\n    get: function get() {\n      return this._settingsFrozen;\n    }\n  }, {\n    key: \"_terminated\",\n    get: function get() {\n      return void 0 !== this._terminateTask;\n    }\n  }, {\n    key: \"_setSettings\",\n    value: function _setSettings(t) {\n      if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n      this._settings = new In(t), void 0 !== t.credentials && (this._authCredentials = function (t) {\n        if (!t) return new Q();\n\n        switch (t.type) {\n          case \"firstParty\":\n            return new K(t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n\n          case \"provider\":\n            return t.client;\n\n          default:\n            throw new U(P, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n        }\n      }(t.credentials));\n    }\n  }, {\n    key: \"_getSettings\",\n    value: function _getSettings() {\n      return this._settings;\n    }\n  }, {\n    key: \"_freezeSettings\",\n    value: function _freezeSettings() {\n      return this._settingsFrozen = !0, this._settings;\n    }\n  }, {\n    key: \"_delete\",\n    value: function _delete() {\n      return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        app: this._app,\n        databaseId: this._databaseId,\n        settings: this._settings\n      };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */\n\n  }, {\n    key: \"_terminate\",\n    value: function _terminate() {\n      return function (t) {\n        var e = bn.get(t);\n        e && (y(\"ComponentProvider\", \"Removing Datastore\"), bn.delete(t), e.terminate());\n      }(this), Promise.resolve();\n    }\n  }]);\n\n  return Tn;\n}();\n\nfunction An(t, e, n) {\n  n || (n = \"(default)\");\n\n  var r = _getProvider(t, \"firestore/lite\");\n\n  if (r.isInitialized(n)) throw new U(S, \"Firestore can only be initialized once per app.\");\n  return r.initialize({\n    options: e,\n    instanceIdentifier: n\n  });\n}\n\nfunction Rn(e, n) {\n  var r = \"object\" == typeof e ? e : getApp(),\n      s = \"string\" == typeof e ? e : n || \"(default)\",\n      i = _getProvider(r, \"firestore/lite\").getImmediate({\n    identifier: s\n  });\n\n  if (!i._initialized) {\n    var t = getDefaultEmulatorHostnameAndPort(\"firestore\");\n    t && Pn.apply(void 0, [i].concat(_toConsumableArray(t)));\n  }\n\n  return i;\n}\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */\n\n\nfunction Pn(t, e, n) {\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var s;\n\n  var i = (t = ct(t, Tn))._getSettings(),\n      o = \"\".concat(e, \":\").concat(n);\n\n  if (\"firestore.googleapis.com\" !== i.host && i.host !== o && _(\"Host has been set in both settings() and connectFirestoreEmulator(), emulator host will be used.\"), t._setSettings(Object.assign(Object.assign({}, i), {\n    host: o,\n    ssl: !1\n  })), r.mockUserToken) {\n    var _e13, _n8;\n\n    if (\"string\" == typeof r.mockUserToken) _e13 = r.mockUserToken, _n8 = d.MOCK_USER;else {\n      // Let createMockUserToken validate first (catches common mistakes like\n      // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n      _e13 = createMockUserToken(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n\n      var _i2 = r.mockUserToken.sub || r.mockUserToken.user_id;\n\n      if (!_i2) throw new U(P, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n      _n8 = new d(_i2);\n    }\n    t._authCredentials = new z(new B(_e13, _n8));\n  }\n}\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */\n\n\nfunction Vn(t) {\n  return t = ct(t, Tn), _removeServiceInstance(t.app, \"firestore/lite\"), t._delete();\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents an aggregation that can be performed by Firestore.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\nvar $n = /*#__PURE__*/_createClass(\n/**\n * Create a new AggregateField<T>\n * @param _aggregateType Specifies the type of aggregation operation to perform.\n * @param _internalFieldPath Optionally specifies the field that is aggregated.\n * @internal\n */\nfunction $n() {\n  var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"count\";\n  var e = arguments.length > 1 ? arguments[1] : undefined;\n\n  _classCallCheck(this, $n);\n\n  this._aggregateType = t, this._internalFieldPath = e,\n  /** A type string to uniquely identify instances of this class. */\n  this.type = \"AggregateField\";\n});\n/**\n * The results of executing an aggregation query.\n */\n\n\nvar Nn = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function Nn(t, e, n) {\n    _classCallCheck(this, Nn);\n\n    this._userDataWriter = e, this._data = n,\n    /** A type string to uniquely identify instances of this class. */\n    this.type = \"AggregateQuerySnapshot\", this.query = t;\n  }\n  /**\n   * Returns the results of the aggregations performed over the underlying\n   * query.\n   *\n   * The keys of the returned object will be the same as those of the\n   * `AggregateSpec` object specified to the aggregation method, and the values\n   * will be the corresponding aggregation result.\n   *\n   * @returns The results of the aggregations performed over the underlying\n   * query.\n   */\n\n\n  _createClass(Nn, [{\n    key: \"data\",\n    value: function data() {\n      return this._userDataWriter.convertObjectMap(this._data);\n    }\n  }]);\n\n  return Nn;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */\n\n\nvar Dn = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function Dn(t,\n  /**\n   * If provided, the `FirestoreDataConverter` associated with this instance.\n   */\n  e, n) {\n    _classCallCheck(this, Dn);\n\n    this.converter = e, this._key = n,\n    /** The type of this Firestore reference. */\n    this.type = \"document\", this.firestore = t;\n  }\n\n  _createClass(Dn, [{\n    key: \"_path\",\n    get: function get() {\n      return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */\n\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */\n\n  }, {\n    key: \"path\",\n    get: function get() {\n      return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      return new xn(this.firestore, this.converter, this._key.path.popLast());\n    }\n  }, {\n    key: \"withConverter\",\n    value: function withConverter(t) {\n      return new Dn(this.firestore, t, this._key);\n    }\n  }]);\n\n  return Dn;\n}();\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */\n\n\nvar Fn = /*#__PURE__*/function () {\n  // This is the lite version of the Query class in the main SDK.\n\n  /** @hideconstructor protected */\n  function Fn(t,\n  /**\n   * If provided, the `FirestoreDataConverter` associated with this instance.\n   */\n  e, n) {\n    _classCallCheck(this, Fn);\n\n    this.converter = e, this._query = n,\n    /** The type of this Firestore reference. */\n    this.type = \"query\", this.firestore = t;\n  }\n\n  _createClass(Fn, [{\n    key: \"withConverter\",\n    value: function withConverter(t) {\n      return new Fn(this.firestore, t, this._query);\n    }\n  }]);\n\n  return Fn;\n}();\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link (query:1)}).\n */\n\n\nvar xn = /*#__PURE__*/function (_Fn) {\n  _inherits(xn, _Fn);\n\n  var _super24 = _createSuper(xn);\n\n  /** @hideconstructor */\n  function xn(t, e, n) {\n    var _this28;\n\n    _classCallCheck(this, xn);\n\n    _this28 = _super24.call(this, t, e, new Ee(n)), _this28._path = n,\n    /** The type of this Firestore reference. */\n    _this28.type = \"collection\";\n    return _this28;\n  }\n  /** The collection's identifier. */\n\n\n  _createClass(xn, [{\n    key: \"id\",\n    get: function get() {\n      return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */\n\n  }, {\n    key: \"path\",\n    get: function get() {\n      return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      var t = this._path.popLast();\n\n      return t.isEmpty() ? null : new Dn(this.firestore,\n      /* converter= */\n      null, new rt(t));\n    }\n  }, {\n    key: \"withConverter\",\n    value: function withConverter(t) {\n      return new xn(this.firestore, t, this._path);\n    }\n  }]);\n\n  return xn;\n}(Fn);\n\nfunction Sn(t, e) {\n  for (var _len5 = arguments.length, n = new Array(_len5 > 2 ? _len5 - 2 : 0), _key5 = 2; _key5 < _len5; _key5++) {\n    n[_key5 - 2] = arguments[_key5];\n  }\n\n  if (t = getModularInstance(t), st(\"collection\", \"path\", e), t instanceof Tn) {\n    var r = tt.fromString.apply(tt, [e].concat(n));\n    return ot(r), new xn(t,\n    /* converter= */\n    null, r);\n  }\n\n  {\n    if (!(t instanceof Dn || t instanceof xn)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n\n    var _r2 = t._path.child(tt.fromString.apply(tt, [e].concat(n)));\n\n    return ot(_r2), new xn(t.firestore,\n    /* converter= */\n    null, _r2);\n  }\n} // TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */\n\n\nfunction qn(t, e) {\n  if (t = ct(t, Tn), st(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(P, \"Invalid collection ID '\".concat(e, \"' passed to function collectionGroup(). Collection IDs must not contain '/'.\"));\n  return new Fn(t,\n  /* converter= */\n  null, function (t) {\n    return new Ee(tt.emptyPath(), t);\n  }(e));\n}\n\nfunction On(t, e) {\n  for (var _len6 = arguments.length, n = new Array(_len6 > 2 ? _len6 - 2 : 0), _key6 = 2; _key6 < _len6; _key6++) {\n    n[_key6 - 2] = arguments[_key6];\n  }\n\n  if (t = getModularInstance(t), // We allow omission of 'pathString' but explicitly prohibit passing in both\n  // 'undefined' and 'null'.\n  1 === arguments.length && (e = Et.N()), st(\"doc\", \"path\", e), t instanceof Tn) {\n    var r = tt.fromString.apply(tt, [e].concat(n));\n    return it(r), new Dn(t,\n    /* converter= */\n    null, new rt(r));\n  }\n\n  {\n    if (!(t instanceof Dn || t instanceof xn)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n\n    var _r3 = t._path.child(tt.fromString.apply(tt, [e].concat(n)));\n\n    return it(_r3), new Dn(t.firestore, t instanceof xn ? t.converter : null, new rt(_r3));\n  }\n}\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\n\n\nfunction kn(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), (t instanceof Dn || t instanceof xn) && (e instanceof Dn || e instanceof xn) && t.firestore === e.firestore && t.path === e.path && t.converter === e.converter;\n}\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\n\n\nfunction Cn(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), t instanceof Fn && e instanceof Fn && t.firestore === e.firestore && $e(t._query, e._query) && t.converter === e.converter;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An immutable object representing an array of bytes.\n */\n\n\nvar Mn = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function Mn(t) {\n    _classCallCheck(this, Mn);\n\n    this._byteString = t;\n  }\n  /**\n   * Creates a new `Bytes` object from the given Base64 string, converting it to\n   * bytes.\n   *\n   * @param base64 - The Base64 string used to create the `Bytes` object.\n   */\n\n\n  _createClass(Mn, [{\n    key: \"toBase64\",\n    value:\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */\n    function toBase64() {\n      return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */\n\n  }, {\n    key: \"toUint8Array\",\n    value: function toUint8Array() {\n      return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this._byteString.isEqual(t._byteString);\n    }\n  }], [{\n    key: \"fromBase64String\",\n    value: function fromBase64String(t) {\n      try {\n        return new Mn(Vt.fromBase64String(t));\n      } catch (t) {\n        throw new U(P, \"Failed to construct data from Base64 string: \" + t);\n      }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */\n\n  }, {\n    key: \"fromUint8Array\",\n    value: function fromUint8Array(t) {\n      return new Mn(Vt.fromUint8Array(t));\n    }\n  }]);\n\n  return Mn;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */\n\n\nvar Ln = /*#__PURE__*/function () {\n  /**\n   * Creates a `FieldPath` from the provided field names. If more than one field\n   * name is provided, the path will point to a nested field in a document.\n   *\n   * @param fieldNames - A list of field names.\n   */\n  function Ln() {\n    _classCallCheck(this, Ln);\n\n    for (var _len7 = arguments.length, t = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      t[_key7] = arguments[_key7];\n    }\n\n    for (var e = 0; e < t.length; ++e) {\n      if (0 === t[e].length) throw new U(P, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n    }\n\n    this._internalPath = new nt(t);\n  }\n  /**\n   * Returns true if this `FieldPath` is equal to the provided one.\n   *\n   * @param other - The `FieldPath` to compare against.\n   * @returns true if this `FieldPath` is equal to the provided one.\n   */\n\n\n  _createClass(Ln, [{\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this._internalPath.isEqual(t._internalPath);\n    }\n  }]);\n\n  return Ln;\n}();\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */\n\n\nfunction Un() {\n  return new Ln(\"__name__\");\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */\n\n\nvar jn = /*#__PURE__*/_createClass(\n/**\n * @param _methodName - The public API endpoint that returns this class.\n * @hideconstructor\n */\nfunction jn(t) {\n  _classCallCheck(this, jn);\n\n  this._methodName = t;\n});\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */\n\n\nvar Bn = /*#__PURE__*/function () {\n  /**\n   * Creates a new immutable `GeoPoint` object with the provided latitude and\n   * longitude values.\n   * @param latitude - The latitude as number between -90 and 90.\n   * @param longitude - The longitude as number between -180 and 180.\n   */\n  function Bn(t, e) {\n    _classCallCheck(this, Bn);\n\n    if (!isFinite(t) || t < -90 || t > 90) throw new U(P, \"Latitude must be a number between -90 and 90, but was: \" + t);\n    if (!isFinite(e) || e < -180 || e > 180) throw new U(P, \"Longitude must be a number between -180 and 180, but was: \" + e);\n    this._lat = t, this._long = e;\n  }\n  /**\n   * The latitude of this `GeoPoint` instance.\n   */\n\n\n  _createClass(Bn, [{\n    key: \"latitude\",\n    get: function get() {\n      return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */\n\n  }, {\n    key: \"longitude\",\n    get: function get() {\n      return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        latitude: this._lat,\n        longitude: this._long\n      };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */\n\n  }, {\n    key: \"_compareTo\",\n    value: function _compareTo(t) {\n      return It(this._lat, t._lat) || It(this._long, t._long);\n    }\n  }]);\n\n  return Bn;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar Qn = /^__.*__$/;\n/** The result of parsing document data (e.g. for a setData call). */\n\nvar zn = /*#__PURE__*/function () {\n  function zn(t, e, n) {\n    _classCallCheck(this, zn);\n\n    this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n  }\n\n  _createClass(zn, [{\n    key: \"toMutation\",\n    value: function toMutation(t, e) {\n      return null !== this.fieldMask ? new Le(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Me(t, this.data, e, this.fieldTransforms);\n    }\n  }]);\n\n  return zn;\n}();\n/** The result of parsing \"update\" data (i.e. for an updateData call). */\n\n\nvar Wn = /*#__PURE__*/function () {\n  function Wn(t, // The fieldMask does not include document transforms.\n  e, n) {\n    _classCallCheck(this, Wn);\n\n    this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n  }\n\n  _createClass(Wn, [{\n    key: \"toMutation\",\n    value: function toMutation(t, e) {\n      return new Le(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n  }]);\n\n  return Wn;\n}();\n\nfunction Gn(t) {\n  switch (t) {\n    case 0\n    /* UserDataSource.Set */\n    : // fall through\n\n    case 2\n    /* UserDataSource.MergeSet */\n    : // fall through\n\n    case 1\n    /* UserDataSource.Update */\n    :\n      return !0;\n\n    case 3\n    /* UserDataSource.Argument */\n    :\n    case 4\n    /* UserDataSource.ArrayArgument */\n    :\n      return !1;\n\n    default:\n      throw b();\n  }\n}\n/** A \"context\" object passed around while parsing user data. */\n\n\nvar Kn = /*#__PURE__*/function () {\n  /**\n   * Initializes a ParseContext with the given source and path.\n   *\n   * @param settings - The settings for the parser.\n   * @param databaseId - The database ID of the Firestore instance.\n   * @param serializer - The serializer to use to generate the Value proto.\n   * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n   * rather than throw.\n   * @param fieldTransforms - A mutable list of field transforms encountered\n   * while parsing the data.\n   * @param fieldMask - A mutable list of field paths encountered while parsing\n   * the data.\n   *\n   * TODO(b/34871131): We don't support array paths right now, so path can be\n   * null to indicate the context represents any location within an array (in\n   * which case certain features will not work and errors will be somewhat\n   * compromised).\n   */\n  function Kn(t, e, n, r, s, i) {\n    _classCallCheck(this, Kn);\n\n    this.settings = t, this.databaseId = e, this.serializer = n, this.ignoreUndefinedProperties = r, // Minor hack: If fieldTransforms is undefined, we assume this is an\n    // external call and we need to validate the entire path.\n    void 0 === s && this.tt(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n  }\n\n  _createClass(Kn, [{\n    key: \"path\",\n    get: function get() {\n      return this.settings.path;\n    }\n  }, {\n    key: \"et\",\n    get: function get() {\n      return this.settings.et;\n    }\n    /** Returns a new context with the specified settings overwritten. */\n\n  }, {\n    key: \"nt\",\n    value: function nt(t) {\n      return new Kn(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.serializer, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n  }, {\n    key: \"rt\",\n    value: function rt(t) {\n      var e;\n      var n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),\n          r = this.nt({\n        path: n,\n        st: !1\n      });\n      return r.it(t), r;\n    }\n  }, {\n    key: \"ot\",\n    value: function ot(t) {\n      var e;\n      var n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),\n          r = this.nt({\n        path: n,\n        st: !1\n      });\n      return r.tt(), r;\n    }\n  }, {\n    key: \"ut\",\n    value: function ut(t) {\n      // TODO(b/34871131): We don't support array paths right now; so make path\n      // undefined.\n      return this.nt({\n        path: void 0,\n        st: !0\n      });\n    }\n  }, {\n    key: \"ct\",\n    value: function ct(t) {\n      return wr(t, this.settings.methodName, this.settings.ht || !1, this.path, this.settings.lt);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */\n\n  }, {\n    key: \"contains\",\n    value: function contains(t) {\n      return void 0 !== this.fieldMask.find(function (e) {\n        return t.isPrefixOf(e);\n      }) || void 0 !== this.fieldTransforms.find(function (e) {\n        return t.isPrefixOf(e.field);\n      });\n    }\n  }, {\n    key: \"tt\",\n    value: function tt() {\n      // TODO(b/34871131): Remove null check once we have proper paths for fields\n      // within arrays.\n      if (this.path) for (var t = 0; t < this.path.length; t++) {\n        this.it(this.path.get(t));\n      }\n    }\n  }, {\n    key: \"it\",\n    value: function it(t) {\n      if (0 === t.length) throw this.ct(\"Document fields must not be empty\");\n      if (Gn(this.et) && Qn.test(t)) throw this.ct('Document fields cannot begin and end with \"__\"');\n    }\n  }]);\n\n  return Kn;\n}();\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */\n\n\nvar Yn = /*#__PURE__*/function () {\n  function Yn(t, e, n) {\n    _classCallCheck(this, Yn);\n\n    this.databaseId = t, this.ignoreUndefinedProperties = e, this.serializer = n || wn(t);\n  }\n  /** Creates a new top-level parse context. */\n\n\n  _createClass(Yn, [{\n    key: \"ft\",\n    value: function ft(t, e, n) {\n      var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n      return new Kn({\n        et: t,\n        methodName: e,\n        lt: n,\n        path: nt.emptyPath(),\n        st: !1,\n        ht: r\n      }, this.databaseId, this.serializer, this.ignoreUndefinedProperties);\n    }\n  }]);\n\n  return Yn;\n}();\n\nfunction Hn(t) {\n  var e = t._freezeSettings(),\n      n = wn(t._databaseId);\n\n  return new Yn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n/** Parse document data from a set() call. */\n\n\nfunction Jn(t, e, n, r, s) {\n  var i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  var o = t.ft(i.merge || i.mergeFields ? 2\n  /* UserDataSource.MergeSet */\n  : 0\n  /* UserDataSource.Set */\n  , e, n, s);\n  hr(\"Data must be an object, but it was:\", o, r);\n  var u = cr(r, o);\n  var c, a;\n  if (i.merge) c = new ye(o.fieldMask), a = o.fieldTransforms;else if (i.mergeFields) {\n    var _t17 = [];\n\n    var _iterator9 = _createForOfIteratorHelper(i.mergeFields),\n        _step9;\n\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var _r4 = _step9.value;\n\n        var _s2 = lr(e, _r4, n);\n\n        if (!o.contains(_s2)) throw new U(P, \"Field '\".concat(_s2, \"' is specified in your field mask but missing from your input data.\"));\n        mr(_t17, _s2) || _t17.push(_s2);\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n\n    c = new ye(_t17), a = o.fieldTransforms.filter(function (t) {\n      return c.covers(t.field);\n    });\n  } else c = null, a = o.fieldTransforms;\n  return new zn(new ge(u), c, a);\n}\n\nvar Xn = /*#__PURE__*/function (_jn) {\n  _inherits(Xn, _jn);\n\n  var _super25 = _createSuper(Xn);\n\n  function Xn() {\n    _classCallCheck(this, Xn);\n\n    return _super25.apply(this, arguments);\n  }\n\n  _createClass(Xn, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      if (2\n      /* UserDataSource.MergeSet */\n      !== t.et) throw 1\n      /* UserDataSource.Update */\n      === t.et ? t.ct(\"\".concat(this._methodName, \"() can only appear at the top level of your update data\")) : t.ct(\"\".concat(this._methodName, \"() cannot be used with set() unless you pass {merge:true}\")); // No transform to add for a delete, but we need to add it to our\n      // fieldMask so it gets deleted.\n\n      return t.fieldMask.push(t.path), null;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t instanceof Xn;\n    }\n  }]);\n\n  return Xn;\n}(jn);\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */\n\n\nfunction Zn(t, e, n) {\n  return new Kn({\n    et: 3\n    /* UserDataSource.Argument */\n    ,\n    lt: e.settings.lt,\n    methodName: t._methodName,\n    st: n\n  }, e.databaseId, e.serializer, e.ignoreUndefinedProperties);\n}\n\nvar tr = /*#__PURE__*/function (_jn2) {\n  _inherits(tr, _jn2);\n\n  var _super26 = _createSuper(tr);\n\n  function tr() {\n    _classCallCheck(this, tr);\n\n    return _super26.apply(this, arguments);\n  }\n\n  _createClass(tr, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      return new Oe(t.path, new Fe());\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t instanceof tr;\n    }\n  }]);\n\n  return tr;\n}(jn);\n\nvar er = /*#__PURE__*/function (_jn3) {\n  _inherits(er, _jn3);\n\n  var _super27 = _createSuper(er);\n\n  function er(t, e) {\n    var _this29;\n\n    _classCallCheck(this, er);\n\n    _this29 = _super27.call(this, t), _this29.dt = e;\n    return _this29;\n  }\n\n  _createClass(er, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      var e = Zn(this, t,\n      /*array=*/\n      !0),\n          n = this.dt.map(function (t) {\n        return ur(t, e);\n      }),\n          r = new xe(n);\n      return new Oe(t.path, r);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      // TODO(mrschmidt): Implement isEquals\n      return this === t;\n    }\n  }]);\n\n  return er;\n}(jn);\n\nvar nr = /*#__PURE__*/function (_jn4) {\n  _inherits(nr, _jn4);\n\n  var _super28 = _createSuper(nr);\n\n  function nr(t, e) {\n    var _this30;\n\n    _classCallCheck(this, nr);\n\n    _this30 = _super28.call(this, t), _this30.dt = e;\n    return _this30;\n  }\n\n  _createClass(nr, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      var e = Zn(this, t,\n      /*array=*/\n      !0),\n          n = this.dt.map(function (t) {\n        return ur(t, e);\n      }),\n          r = new Se(n);\n      return new Oe(t.path, r);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      // TODO(mrschmidt): Implement isEquals\n      return this === t;\n    }\n  }]);\n\n  return nr;\n}(jn);\n\nvar rr = /*#__PURE__*/function (_jn5) {\n  _inherits(rr, _jn5);\n\n  var _super29 = _createSuper(rr);\n\n  function rr(t, e) {\n    var _this31;\n\n    _classCallCheck(this, rr);\n\n    _this31 = _super29.call(this, t), _this31.wt = e;\n    return _this31;\n  }\n\n  _createClass(rr, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      var e = new qe(t.serializer, Ne(t.serializer, this.wt));\n      return new Oe(t.path, e);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      // TODO(mrschmidt): Implement isEquals\n      return this === t;\n    }\n  }]);\n\n  return rr;\n}(jn);\n/** Parse update data from an update() call. */\n\n\nfunction sr(t, e, n, r) {\n  var s = t.ft(1\n  /* UserDataSource.Update */\n  , e, n);\n  hr(\"Data must be an object, but it was:\", s, r);\n  var i = [],\n      o = ge.empty();\n  Rt(r, function (t, r) {\n    var u = dr(e, t, n); // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n\n    r = getModularInstance(r);\n    var c = s.ot(u);\n    if (r instanceof Xn) // Add it to the field mask, but don't add anything to updateData.\n      i.push(u);else {\n      var _t18 = ur(r, c);\n\n      null != _t18 && (i.push(u), o.set(u, _t18));\n    }\n  });\n  var u = new ye(i);\n  return new Wn(o, u, s.fieldTransforms);\n}\n/** Parse update data from a list of field/value arguments. */\n\n\nfunction ir(t, e, n, r, s, i) {\n  var o = t.ft(1\n  /* UserDataSource.Update */\n  , e, n),\n      u = [lr(e, r, n)],\n      c = [s];\n  if (i.length % 2 != 0) throw new U(P, \"Function \".concat(e, \"() needs to be called with an even number of arguments that alternate between field names and values.\"));\n\n  for (var _t19 = 0; _t19 < i.length; _t19 += 2) {\n    u.push(lr(e, i[_t19])), c.push(i[_t19 + 1]);\n  }\n\n  var a = [],\n      h = ge.empty(); // We iterate in reverse order to pick the last value for a field if the\n  // user specified the field multiple times.\n\n  for (var _t20 = u.length - 1; _t20 >= 0; --_t20) {\n    if (!mr(a, u[_t20])) {\n      var _e14 = u[_t20];\n      var _n9 = c[_t20]; // For Compat types, we have to \"extract\" the underlying types before\n      // performing validation.\n\n      _n9 = getModularInstance(_n9);\n\n      var _r5 = o.ot(_e14);\n\n      if (_n9 instanceof Xn) // Add it to the field mask, but don't add anything to updateData.\n        a.push(_e14);else {\n        var _t21 = ur(_n9, _r5);\n\n        null != _t21 && (a.push(_e14), h.set(_e14, _t21));\n      }\n    }\n  }\n\n  var f = new ye(a);\n  return new Wn(h, f, o.fieldTransforms);\n}\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */\n\n\nfunction or(t, e, n) {\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n  return ur(n, t.ft(r ? 4\n  /* UserDataSource.ArrayArgument */\n  : 3\n  /* UserDataSource.Argument */\n  , e));\n}\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */\n\n\nfunction ur(t, e) {\n  if (ar( // Unwrap the API type from the Compat SDK. This will return the API type\n  // from firestore-exp.\n  t = getModularInstance(t))) return hr(\"Unsupported field value:\", e, t), cr(t, e);\n  if (t instanceof jn) // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n\n    /**\n    * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n    * context.fieldTransforms.\n    */\n    return function (t, e) {\n      // Sentinels are only supported with writes, and not within arrays.\n      if (!Gn(e.et)) throw e.ct(\"\".concat(t._methodName, \"() can only be used with update() and set()\"));\n      if (!e.path) throw e.ct(\"\".concat(t._methodName, \"() is not currently supported inside arrays\"));\n\n      var n = t._toFieldTransform(e);\n\n      n && e.fieldTransforms.push(n);\n    }\n    /**\n    * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n    *\n    * @returns The parsed value\n    */\n    (t, e), null;\n  if (void 0 === t && e.ignoreUndefinedProperties) // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n\n  if ( // If context.path is null we are inside an array and we don't support\n  // field mask paths more granular than the top-level array.\n  e.path && e.fieldMask.push(e.path), t instanceof Array) {\n    // TODO(b/34871131): Include the path containing the array in the error\n    // message.\n    // In the case of IN queries, the parsed data is an array (representing\n    // the set of values to be included for the IN query) that may directly\n    // contain additional arrays (each representing an individual field\n    // value), so we disable this validation.\n    if (e.settings.st && 4\n    /* UserDataSource.ArrayArgument */\n    !== e.et) throw e.ct(\"Nested arrays are not supported\");\n    return function (t, e) {\n      var n = [];\n      var r = 0;\n\n      var _iterator10 = _createForOfIteratorHelper(t),\n          _step10;\n\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var s = _step10.value;\n\n          var _t22 = ur(s, e.ut(r));\n\n          null == _t22 && ( // Just include nulls in the array for fields being replaced with a\n          // sentinel.\n          _t22 = {\n            nullValue: \"NULL_VALUE\"\n          }), n.push(_t22), r++;\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n\n      return {\n        arrayValue: {\n          values: n\n        }\n      };\n    }(t, e);\n  }\n\n  return function (t, e) {\n    if (null === (t = getModularInstance(t))) return {\n      nullValue: \"NULL_VALUE\"\n    };\n    if (\"number\" == typeof t) return Ne(e.serializer, t);\n    if (\"boolean\" == typeof t) return {\n      booleanValue: t\n    };\n    if (\"string\" == typeof t) return {\n      stringValue: t\n    };\n\n    if (t instanceof Date) {\n      var n = xt.fromDate(t);\n      return {\n        timestampValue: Ge(e.serializer, n)\n      };\n    }\n\n    if (t instanceof xt) {\n      // Firestore backend truncates precision down to microseconds. To ensure\n      // offline mode works the same with regards to truncation, perform the\n      // truncation immediately without waiting for the backend to do that.\n      var _n10 = new xt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n\n      return {\n        timestampValue: Ge(e.serializer, _n10)\n      };\n    }\n\n    if (t instanceof Bn) return {\n      geoPointValue: {\n        latitude: t.latitude,\n        longitude: t.longitude\n      }\n    };\n    if (t instanceof Mn) return {\n      bytesValue: Ke(e.serializer, t._byteString)\n    };\n\n    if (t instanceof Dn) {\n      var _n11 = e.databaseId,\n          r = t.firestore._databaseId;\n      if (!r.isEqual(_n11)) throw e.ct(\"Document reference is for database \".concat(r.projectId, \"/\").concat(r.database, \" but should be for database \").concat(_n11.projectId, \"/\").concat(_n11.database));\n      return {\n        referenceValue: Je(t.firestore._databaseId || e.databaseId, t._key.path)\n      };\n    }\n\n    throw e.ct(\"Unsupported field value: \".concat(ut(t)));\n  }\n  /**\n  * Checks whether an object looks like a JSON object that should be converted\n  * into a struct. Normal class/prototype instances are considered to look like\n  * JSON objects since they should be converted to a struct value. Arrays, Dates,\n  * GeoPoints, etc. are not considered to look like JSON objects since they map\n  * to specific FieldValue types other than ObjectValue.\n  */\n  (t, e);\n}\n\nfunction cr(t, e) {\n  var n = {};\n  return !function (t) {\n    for (var _e15 in t) {\n      if (Object.prototype.hasOwnProperty.call(t, _e15)) return !1;\n    }\n\n    return !0;\n  }(t) ? Rt(t, function (t, r) {\n    var s = ur(r, e.rt(t));\n    null != s && (n[t] = s);\n  }) : // If we encounter an empty object, we explicitly add it to the update\n  // mask to ensure that the server creates a map entry.\n  e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n    mapValue: {\n      fields: n\n    }\n  };\n}\n\nfunction ar(t) {\n  return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof xt || t instanceof Bn || t instanceof Mn || t instanceof Dn || t instanceof jn);\n}\n\nfunction hr(t, e, n) {\n  if (!ar(n) || !function (t) {\n    return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n  }(n)) {\n    var r = ut(n);\n    throw \"an object\" === r ? e.ct(t + \" a custom object\") : e.ct(t + \" \" + r);\n  }\n}\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */\n\n\nfunction lr(t, e, n) {\n  if (( // If required, replace the FieldPath Compat class with with the firestore-exp\n  // FieldPath.\n  e = getModularInstance(e)) instanceof Ln) return e._internalPath;\n  if (\"string\" == typeof e) return dr(t, e);\n  throw wr(\"Field path arguments must be of type string or \", t,\n  /* hasConverter= */\n  !1,\n  /* path= */\n  void 0, n);\n}\n/**\n * Matches any characters in a field path string that are reserved.\n */\n\n\nvar fr = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */\n\nfunction dr(t, e, n) {\n  if (e.search(fr) >= 0) throw wr(\"Invalid field path (\".concat(e, \"). Paths must not contain '~', '*', '/', '[', or ']'\"), t,\n  /* hasConverter= */\n  !1,\n  /* path= */\n  void 0, n);\n\n  try {\n    return _construct(Ln, _toConsumableArray(e.split(\".\")))._internalPath;\n  } catch (r) {\n    throw wr(\"Invalid field path (\".concat(e, \"). Paths must not be empty, begin with '.', end with '.', or contain '..'\"), t,\n    /* hasConverter= */\n    !1,\n    /* path= */\n    void 0, n);\n  }\n}\n\nfunction wr(t, e, n, r, s) {\n  var i = r && !r.isEmpty(),\n      o = void 0 !== s;\n  var u = \"Function \".concat(e, \"() called with invalid data\");\n  n && (u += \" (via `toFirestore()`)\"), u += \". \";\n  var c = \"\";\n  return (i || o) && (c += \" (found\", i && (c += \" in field \".concat(r)), o && (c += \" in document \".concat(s)), c += \")\"), new U(P, u + t + c);\n}\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */\n\n\nfunction mr(t, e) {\n  return t.some(function (t) {\n    return t.isEqual(e);\n  });\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */\n\n\nvar pr = /*#__PURE__*/function () {\n  // Note: This class is stripped down version of the DocumentSnapshot in\n  // the legacy SDK. The changes are:\n  // - No support for SnapshotMetadata.\n  // - No support for SnapshotOptions.\n\n  /** @hideconstructor protected */\n  function pr(t, e, n, r, s) {\n    _classCallCheck(this, pr);\n\n    this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, this._converter = s;\n  }\n  /** Property of the `DocumentSnapshot` that provides the document's ID. */\n\n\n  _createClass(pr, [{\n    key: \"id\",\n    get: function get() {\n      return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */\n\n  }, {\n    key: \"ref\",\n    get: function get() {\n      return new Dn(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */\n\n  }, {\n    key: \"exists\",\n    value: function exists() {\n      return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */\n\n  }, {\n    key: \"data\",\n    value: function data() {\n      if (this._document) {\n        if (this._converter) {\n          // We only want to use the converter and create a new DocumentSnapshot\n          // if a converter has been provided.\n          var t = new yr(this._firestore, this._userDataWriter, this._key, this._document,\n          /* converter= */\n          null);\n          return this._converter.fromFirestore(t);\n        }\n\n        return this._userDataWriter.convertValue(this._document.data.value);\n      }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"get\",\n    value: function get(t) {\n      if (this._document) {\n        var e = this._document.data.field(vr(\"DocumentSnapshot.get\", t));\n\n        if (null !== e) return this._userDataWriter.convertValue(e);\n      }\n    }\n  }]);\n\n  return pr;\n}();\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */\n\n\nvar yr = /*#__PURE__*/function (_pr) {\n  _inherits(yr, _pr);\n\n  var _super30 = _createSuper(yr);\n\n  function yr() {\n    _classCallCheck(this, yr);\n\n    return _super30.apply(this, arguments);\n  }\n\n  _createClass(yr, [{\n    key: \"data\",\n    value:\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    function data() {\n      return _get(_getPrototypeOf(yr.prototype), \"data\", this).call(this);\n    }\n  }]);\n\n  return yr;\n}(pr);\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */\n\n\nvar gr = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function gr(t, e) {\n    _classCallCheck(this, gr);\n\n    this._docs = e, this.query = t;\n  }\n  /** An array of all the documents in the `QuerySnapshot`. */\n\n\n  _createClass(gr, [{\n    key: \"docs\",\n    get: function get() {\n      return _toConsumableArray(this._docs);\n    }\n    /** The number of documents in the `QuerySnapshot`. */\n\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */\n\n  }, {\n    key: \"empty\",\n    get: function get() {\n      return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */\n\n  }, {\n    key: \"forEach\",\n    value: function forEach(t, e) {\n      this._docs.forEach(t, e);\n    }\n  }]);\n\n  return gr;\n}();\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */\n\n\nfunction _r(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), t instanceof pr && e instanceof pr ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof gr && e instanceof gr && Cn(t.query, e.query) && Tt(t.docs, e.docs, _r);\n}\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */\n\n\nfunction vr(t, e) {\n  return \"string\" == typeof e ? dr(t, e) : e instanceof Ln ? e._internalPath : e._delegate._internalPath;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An `AppliableConstraint` is an abstraction of a constraint that can be applied\n * to a Firestore query.\n */\n\n\nvar br = /*#__PURE__*/_createClass(function br() {\n  _classCallCheck(this, br);\n});\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * (endBefore:1)}, {@link (endAt:1)}, {@link limit}, {@link limitToLast} and\n * can then be passed to {@link (query:1)} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\n\n\nvar Er = /*#__PURE__*/function (_br) {\n  _inherits(Er, _br);\n\n  var _super31 = _createSuper(Er);\n\n  function Er() {\n    _classCallCheck(this, Er);\n\n    return _super31.apply(this, arguments);\n  }\n\n  return _createClass(Er);\n}(br);\n\nfunction Ir(t, e) {\n  var r = [];\n\n  for (var _len8 = arguments.length, n = new Array(_len8 > 2 ? _len8 - 2 : 0), _key8 = 2; _key8 < _len8; _key8++) {\n    n[_key8 - 2] = arguments[_key8];\n  }\n\n  e instanceof br && r.push(e), r = r.concat(n), function (t) {\n    var e = t.filter(function (t) {\n      return t instanceof Rr;\n    }).length,\n        n = t.filter(function (t) {\n      return t instanceof Tr;\n    }).length;\n    if (e > 1 || e > 0 && n > 0) throw new U(P, \"InvalidQuery. When using composite filters, you cannot use more than one filter at the top level. Consider nesting the multiple filters within an `and(...)` statement. For example: change `query(query, where(...), or(...))` to `query(query, and(where(...), or(...)))`.\");\n  }\n  /**\n  * @license\n  * Copyright 2020 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  /**\n  * Converts Firestore's internal types to the JavaScript types that we expose\n  * to the user.\n  *\n  * @internal\n  */\n  (r);\n\n  var _iterator11 = _createForOfIteratorHelper(r),\n      _step11;\n\n  try {\n    for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n      var _e16 = _step11.value;\n      t = _e16._apply(t);\n    }\n  } catch (err) {\n    _iterator11.e(err);\n  } finally {\n    _iterator11.f();\n  }\n\n  return t;\n}\n/**\n * A `QueryFieldFilterConstraint` is used to narrow the set of documents returned by\n * a Firestore query by filtering on one or more document fields.\n * `QueryFieldFilterConstraint`s are created by invoking {@link where} and can then\n * be passed to {@link (query:1)} to create a new query instance that also contains\n * this `QueryFieldFilterConstraint`.\n */\n\n\nvar Tr = /*#__PURE__*/function (_Er) {\n  _inherits(Tr, _Er);\n\n  var _super32 = _createSuper(Tr);\n\n  /**\n   * @internal\n   */\n  function Tr(t, e, n) {\n    var _this32;\n\n    _classCallCheck(this, Tr);\n\n    _this32 = _super32.call(this), _this32._field = t, _this32._op = e, _this32._value = n,\n    /** The type of this query constraint */\n    _this32.type = \"where\";\n    return _this32;\n  }\n\n  _createClass(Tr, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      var e = this._parse(t);\n\n      return Br(t._query, e), new Fn(t.firestore, t.converter, Ve(t._query, e));\n    }\n  }, {\n    key: \"_parse\",\n    value: function _parse(t) {\n      var e = Hn(t.firestore),\n          n = function (t, e, n, r, s, i, o) {\n        var u;\n\n        if (s.isKeyField()) {\n          if (\"array-contains\"\n          /* Operator.ARRAY_CONTAINS */\n          === i || \"array-contains-any\"\n          /* Operator.ARRAY_CONTAINS_ANY */\n          === i) throw new U(P, \"Invalid Query. You can't perform '\".concat(i, \"' queries on documentId().\"));\n\n          if (\"in\"\n          /* Operator.IN */\n          === i || \"not-in\"\n          /* Operator.NOT_IN */\n          === i) {\n            jr(o, i);\n            var _e17 = [];\n\n            var _iterator12 = _createForOfIteratorHelper(o),\n                _step12;\n\n            try {\n              for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n                var _n12 = _step12.value;\n\n                _e17.push(Ur(r, t, _n12));\n              }\n            } catch (err) {\n              _iterator12.e(err);\n            } finally {\n              _iterator12.f();\n            }\n\n            u = {\n              arrayValue: {\n                values: _e17\n              }\n            };\n          } else u = Ur(r, t, o);\n        } else \"in\"\n        /* Operator.IN */\n        !== i && \"not-in\"\n        /* Operator.NOT_IN */\n        !== i && \"array-contains-any\"\n        /* Operator.ARRAY_CONTAINS_ANY */\n        !== i || jr(o, i), u = or(n, e, o,\n        /* allowArrays= */\n        \"in\"\n        /* Operator.IN */\n        === i || \"not-in\"\n        /* Operator.NOT_IN */\n        === i);\n\n        return Xt.create(s, i, u);\n      }(t._query, \"where\", e, t.firestore._databaseId, this._field, this._op, this._value);\n\n      return n;\n    }\n  }], [{\n    key: \"_create\",\n    value: function _create(t, e, n) {\n      return new Tr(t, e, n);\n    }\n  }]);\n\n  return Tr;\n}(Er);\n/**\n * Creates a {@link QueryFieldFilterConstraint} that enforces that documents\n * must contain the specified field and that the value should satisfy the\n * relation constraint provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link QueryFieldFilterConstraint}.\n */\n\n\nfunction Ar(t, e, n) {\n  var r = e,\n      s = vr(\"where\", t);\n  return Tr._create(s, r, n);\n}\n/**\n * A `QueryCompositeFilterConstraint` is used to narrow the set of documents\n * returned by a Firestore query by performing the logical OR or AND of multiple\n * {@link QueryFieldFilterConstraint}s or {@link QueryCompositeFilterConstraint}s.\n * `QueryCompositeFilterConstraint`s are created by invoking {@link or} or\n * {@link and} and can then be passed to {@link (query:1)} to create a new query\n * instance that also contains the `QueryCompositeFilterConstraint`.\n */\n\n\nvar Rr = /*#__PURE__*/function (_br2) {\n  _inherits(Rr, _br2);\n\n  var _super33 = _createSuper(Rr);\n\n  /**\n   * @internal\n   */\n  function Rr(\n  /** The type of this query constraint */\n  t, e) {\n    var _this33;\n\n    _classCallCheck(this, Rr);\n\n    _this33 = _super33.call(this), _this33.type = t, _this33._queryConstraints = e;\n    return _this33;\n  }\n\n  _createClass(Rr, [{\n    key: \"_parse\",\n    value: function _parse(t) {\n      var e = this._queryConstraints.map(function (e) {\n        return e._parse(t);\n      }).filter(function (t) {\n        return t.getFilters().length > 0;\n      });\n\n      return 1 === e.length ? e[0] : Zt.create(e, this._getOperator());\n    }\n  }, {\n    key: \"_apply\",\n    value: function _apply(t) {\n      var e = this._parse(t);\n\n      return 0 === e.getFilters().length ? t : (function (t, e) {\n        var n = t;\n        var r = e.getFlattenedFilters();\n\n        var _iterator13 = _createForOfIteratorHelper(r),\n            _step13;\n\n        try {\n          for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n            var _t23 = _step13.value;\n            Br(n, _t23), n = Ve(n, _t23);\n          }\n        } catch (err) {\n          _iterator13.e(err);\n        } finally {\n          _iterator13.f();\n        }\n      } // Checks if any of the provided filter operators are included in the given list of filters and\n      // returns the first one that is, or null if none are.\n      (t._query, e), new Fn(t.firestore, t.converter, Ve(t._query, e)));\n    }\n  }, {\n    key: \"_getQueryConstraints\",\n    value: function _getQueryConstraints() {\n      return this._queryConstraints;\n    }\n  }, {\n    key: \"_getOperator\",\n    value: function _getOperator() {\n      return \"and\" === this.type ? \"and\"\n      /* CompositeOperator.AND */\n      : \"or\"\n      /* CompositeOperator.OR */\n      ;\n    }\n  }], [{\n    key: \"_create\",\n    value: function _create(t, e) {\n      return new Rr(t, e);\n    }\n  }]);\n\n  return Rr;\n}(br);\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a disjunction of\n * the given filter constraints. A disjunction filter includes a document if it\n * satisfies any of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a disjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n */\n\n\nfunction Pr() {\n  for (var _len9 = arguments.length, t = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n    t[_key9] = arguments[_key9];\n  }\n\n  // Only support QueryFilterConstraints\n  return t.forEach(function (t) {\n    return zr(\"or\", t);\n  }), Rr._create(\"or\"\n  /* CompositeOperator.OR */\n  , t);\n}\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a conjunction of\n * the given filter constraints. A conjunction filter includes a document if it\n * satisfies all of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a conjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n */\n\n\nfunction Vr() {\n  for (var _len10 = arguments.length, t = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n    t[_key10] = arguments[_key10];\n  }\n\n  // Only support QueryFilterConstraints\n  return t.forEach(function (t) {\n    return zr(\"and\", t);\n  }), Rr._create(\"and\"\n  /* CompositeOperator.AND */\n  , t);\n}\n/**\n * A `QueryOrderByConstraint` is used to sort the set of documents returned by a\n * Firestore query. `QueryOrderByConstraint`s are created by invoking\n * {@link orderBy} and can then be passed to {@link (query:1)} to create a new query\n * instance that also contains this `QueryOrderByConstraint`.\n *\n * Note: Documents that do not contain the orderBy field will not be present in\n * the query result.\n */\n\n\nvar $r = /*#__PURE__*/function (_Er2) {\n  _inherits($r, _Er2);\n\n  var _super34 = _createSuper($r);\n\n  /**\n   * @internal\n   */\n  function $r(t, e) {\n    var _this34;\n\n    _classCallCheck(this, $r);\n\n    _this34 = _super34.call(this), _this34._field = t, _this34._direction = e,\n    /** The type of this query constraint */\n    _this34.type = \"orderBy\";\n    return _this34;\n  }\n\n  _createClass($r, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      var e = function (t, e, n) {\n        if (null !== t.startAt) throw new U(P, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n        if (null !== t.endAt) throw new U(P, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n        var r = new ae(e, n);\n        return function (t, e) {\n          if (null === Ie(t)) {\n            // This is the first order by. It must match any inequality.\n            var _n13 = Te(t);\n\n            null !== _n13 && Qr(t, _n13, e.field);\n          }\n        }(t, r), r;\n      }\n      /**\n      * Create a `Bound` from a query and a document.\n      *\n      * Note that the `Bound` will always include the key of the document\n      * and so only the provided document will compare equal to the returned\n      * position.\n      *\n      * Will throw if the document does not contain all fields of the order by\n      * of the query or if any of the fields in the order by are an uncommitted\n      * server timestamp.\n      */\n      (t._query, this._field, this._direction);\n\n      return new Fn(t.firestore, t.converter, function (t, e) {\n        // TODO(dimond): validate that orderBy does not list the same key twice.\n        var n = t.explicitOrderBy.concat([e]);\n        return new Ee(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n      }(t._query, e));\n    }\n  }], [{\n    key: \"_create\",\n    value: function _create(t, e) {\n      return new $r(t, e);\n    }\n  }]);\n\n  return $r;\n}(Er);\n/**\n * Creates a {@link QueryOrderByConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * Note: Documents that do not contain the specified field will not be present\n * in the query result.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link QueryOrderByConstraint}.\n */\n\n\nfunction Nr(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"asc\";\n  var n = e,\n      r = vr(\"orderBy\", t);\n  return $r._create(r, n);\n}\n/**\n * A `QueryLimitConstraint` is used to limit the number of documents returned by\n * a Firestore query.\n * `QueryLimitConstraint`s are created by invoking {@link limit} or\n * {@link limitToLast} and can then be passed to {@link (query:1)} to create a new\n * query instance that also contains this `QueryLimitConstraint`.\n */\n\n\nvar Dr = /*#__PURE__*/function (_Er3) {\n  _inherits(Dr, _Er3);\n\n  var _super35 = _createSuper(Dr);\n\n  /**\n   * @internal\n   */\n  function Dr(\n  /** The type of this query constraint */\n  t, e, n) {\n    var _this35;\n\n    _classCallCheck(this, Dr);\n\n    _this35 = _super35.call(this), _this35.type = t, _this35._limit = e, _this35._limitType = n;\n    return _this35;\n  }\n\n  _createClass(Dr, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      return new Fn(t.firestore, t.converter, function (t, e, n) {\n        return new Ee(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n      }(t._query, this._limit, this._limitType));\n    }\n  }], [{\n    key: \"_create\",\n    value: function _create(t, e, n) {\n      return new Dr(t, e, n);\n    }\n  }]);\n\n  return Dr;\n}(Er);\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the first matching\n * documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */\n\n\nfunction Fr(t) {\n  return at(\"limit\", t), Dr._create(\"limit\", t, \"F\"\n  /* LimitType.First */\n  );\n}\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the last matching\n * documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */\n\n\nfunction xr(t) {\n  return at(\"limitToLast\", t), Dr._create(\"limitToLast\", t, \"L\"\n  /* LimitType.Last */\n  );\n}\n/**\n * A `QueryStartAtConstraint` is used to exclude documents from the start of a\n * result set returned by a Firestore query.\n * `QueryStartAtConstraint`s are created by invoking {@link (startAt:1)} or\n * {@link (startAfter:1)} and can then be passed to {@link (query:1)} to create a\n * new query instance that also contains this `QueryStartAtConstraint`.\n */\n\n\nvar Sr = /*#__PURE__*/function (_Er4) {\n  _inherits(Sr, _Er4);\n\n  var _super36 = _createSuper(Sr);\n\n  /**\n   * @internal\n   */\n  function Sr(\n  /** The type of this query constraint */\n  t, e, n) {\n    var _this36;\n\n    _classCallCheck(this, Sr);\n\n    _this36 = _super36.call(this), _this36.type = t, _this36._docOrFields = e, _this36._inclusive = n;\n    return _this36;\n  }\n\n  _createClass(Sr, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      var e = Lr(t, this.type, this._docOrFields, this._inclusive);\n      return new Fn(t.firestore, t.converter, function (t, e) {\n        return new Ee(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n      }(t._query, e));\n    }\n  }], [{\n    key: \"_create\",\n    value: function _create(t, e, n) {\n      return new Sr(t, e, n);\n    }\n  }]);\n\n  return Sr;\n}(Er);\n\nfunction qr() {\n  for (var _len11 = arguments.length, t = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n    t[_key11] = arguments[_key11];\n  }\n\n  return Sr._create(\"startAt\", t,\n  /*inclusive=*/\n  !0);\n}\n\nfunction Or() {\n  for (var _len12 = arguments.length, t = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n    t[_key12] = arguments[_key12];\n  }\n\n  return Sr._create(\"startAfter\", t,\n  /*inclusive=*/\n  !1);\n}\n/**\n * A `QueryEndAtConstraint` is used to exclude documents from the end of a\n * result set returned by a Firestore query.\n * `QueryEndAtConstraint`s are created by invoking {@link (endAt:1)} or\n * {@link (endBefore:1)} and can then be passed to {@link (query:1)} to create a new\n * query instance that also contains this `QueryEndAtConstraint`.\n */\n\n\nvar kr = /*#__PURE__*/function (_Er5) {\n  _inherits(kr, _Er5);\n\n  var _super37 = _createSuper(kr);\n\n  /**\n   * @internal\n   */\n  function kr(\n  /** The type of this query constraint */\n  t, e, n) {\n    var _this37;\n\n    _classCallCheck(this, kr);\n\n    _this37 = _super37.call(this), _this37.type = t, _this37._docOrFields = e, _this37._inclusive = n;\n    return _this37;\n  }\n\n  _createClass(kr, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      var e = Lr(t, this.type, this._docOrFields, this._inclusive);\n      return new Fn(t.firestore, t.converter, function (t, e) {\n        return new Ee(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n      }(t._query, e));\n    }\n  }], [{\n    key: \"_create\",\n    value: function _create(t, e, n) {\n      return new kr(t, e, n);\n    }\n  }]);\n\n  return kr;\n}(Er);\n\nfunction Cr() {\n  for (var _len13 = arguments.length, t = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {\n    t[_key13] = arguments[_key13];\n  }\n\n  return kr._create(\"endBefore\", t,\n  /*inclusive=*/\n  !1);\n}\n\nfunction Mr() {\n  for (var _len14 = arguments.length, t = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {\n    t[_key14] = arguments[_key14];\n  }\n\n  return kr._create(\"endAt\", t,\n  /*inclusive=*/\n  !0);\n}\n/** Helper function to create a bound from a document or fields */\n\n\nfunction Lr(t, e, n, r) {\n  if (n[0] = getModularInstance(n[0]), n[0] instanceof pr) return function (t, e, n, r, s) {\n    if (!r) throw new U($, \"Can't use a DocumentSnapshot that doesn't exist for \".concat(n, \"().\"));\n    var i = []; // Because people expect to continue/end a query at the exact document\n    // provided, we need to use the implicit sort order rather than the explicit\n    // sort order, because it's guaranteed to contain the document key. That way\n    // the position becomes unambiguous and the query continues/ends exactly at\n    // the provided document. Without the key (by using the explicit sort\n    // orders), multiple documents could match the position, yielding duplicate\n    // results.\n\n    var _iterator14 = _createForOfIteratorHelper(Re(t)),\n        _step14;\n\n    try {\n      for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n        var _n14 = _step14.value;\n        if (_n14.field.isKeyField()) i.push(Bt(e, r.key));else {\n          var _t24 = r.data.field(_n14.field);\n\n          if (St(_t24)) throw new U(P, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + _n14.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n\n          if (null === _t24) {\n            var _t25 = _n14.field.canonicalString();\n\n            throw new U(P, \"Invalid query. You are trying to start or end a query using a document for which the field '\".concat(_t25, \"' (used as the orderBy) does not exist.\"));\n          }\n\n          i.push(_t24);\n        }\n      }\n    } catch (err) {\n      _iterator14.e(err);\n    } finally {\n      _iterator14.f();\n    }\n\n    return new Yt(i, s);\n  }\n  /**\n  * Converts a list of field values to a `Bound` for the given query.\n  */\n  (t._query, t.firestore._databaseId, e, n[0]._document, r);\n  {\n    var s = Hn(t.firestore);\n    return function (t, e, n, r, s, i) {\n      // Use explicit order by's because it has to match the query the user made\n      var o = t.explicitOrderBy;\n      if (s.length > o.length) throw new U(P, \"Too many arguments provided to \".concat(r, \"(). The number of arguments must be less than or equal to the number of orderBy() clauses\"));\n      var u = [];\n\n      for (var _i3 = 0; _i3 < s.length; _i3++) {\n        var c = s[_i3];\n\n        if (o[_i3].field.isKeyField()) {\n          if (\"string\" != typeof c) throw new U(P, \"Invalid query. Expected a string for document ID in \".concat(r, \"(), but got a \").concat(typeof c));\n          if (!Ae(t) && -1 !== c.indexOf(\"/\")) throw new U(P, \"Invalid query. When querying a collection and ordering by documentId(), the value passed to \".concat(r, \"() must be a plain document ID, but '\").concat(c, \"' contains a slash.\"));\n\n          var _n15 = t.path.child(tt.fromString(c));\n\n          if (!rt.isDocumentKey(_n15)) throw new U(P, \"Invalid query. When querying a collection group and ordering by documentId(), the value passed to \".concat(r, \"() must result in a valid document path, but '\").concat(_n15, \"' is not because it contains an odd number of segments.\"));\n\n          var _s3 = new rt(_n15);\n\n          u.push(Bt(e, _s3));\n        } else {\n          var _t26 = or(n, r, c);\n\n          u.push(_t26);\n        }\n      }\n\n      return new Yt(u, i);\n    }\n    /**\n    * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n    * appropriate errors if the value is anything other than a `DocumentReference`\n    * or `string`, or if the string is malformed.\n    */\n    (t._query, t.firestore._databaseId, s, e, n, r);\n  }\n}\n\nfunction Ur(t, e, n) {\n  if (\"string\" == typeof (n = getModularInstance(n))) {\n    if (\"\" === n) throw new U(P, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n    if (!Ae(e) && -1 !== n.indexOf(\"/\")) throw new U(P, \"Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '\".concat(n, \"' contains a '/' character.\"));\n    var r = e.path.child(tt.fromString(n));\n    if (!rt.isDocumentKey(r)) throw new U(P, \"Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '\".concat(r, \"' is not because it has an odd number of segments (\").concat(r.length, \").\"));\n    return Bt(t, new rt(r));\n  }\n\n  if (n instanceof Dn) return Bt(t, n._key);\n  throw new U(P, \"Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: \".concat(ut(n), \".\"));\n}\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */\n\n\nfunction jr(t, e) {\n  if (!Array.isArray(t) || 0 === t.length) throw new U(P, \"Invalid Query. A non-empty array is required for '\".concat(e.toString(), \"' filters.\"));\n}\n/**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * This is not a comprehensive check, and this function should be removed in the\n * long term. Validations should occur in the Firestore backend.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one inequality per query.\n * 2. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n */\n\n\nfunction Br(t, e) {\n  if (e.isInequality()) {\n    var _n16 = Te(t),\n        r = e.field;\n\n    if (null !== _n16 && !_n16.isEqual(r)) throw new U(P, \"Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '\".concat(_n16.toString(), \"' and '\").concat(r.toString(), \"'\"));\n    var s = Ie(t);\n    null !== s && Qr(t, r, s);\n  }\n\n  var n = function (t, e) {\n    var _iterator15 = _createForOfIteratorHelper(t),\n        _step15;\n\n    try {\n      for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n        var _n17 = _step15.value;\n\n        var _iterator16 = _createForOfIteratorHelper(_n17.getFlattenedFilters()),\n            _step16;\n\n        try {\n          for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n            var _t27 = _step16.value;\n            if (e.indexOf(_t27.op) >= 0) return _t27.op;\n          }\n        } catch (err) {\n          _iterator16.e(err);\n        } finally {\n          _iterator16.f();\n        }\n      }\n    } catch (err) {\n      _iterator15.e(err);\n    } finally {\n      _iterator15.f();\n    }\n\n    return null;\n  }(t.filters, function (t) {\n    switch (t) {\n      case \"!=\"\n      /* Operator.NOT_EQUAL */\n      :\n        return [\"!=\"\n        /* Operator.NOT_EQUAL */\n        , \"not-in\"\n        /* Operator.NOT_IN */\n        ];\n\n      case \"array-contains-any\"\n      /* Operator.ARRAY_CONTAINS_ANY */\n      :\n      case \"in\"\n      /* Operator.IN */\n      :\n        return [\"not-in\"\n        /* Operator.NOT_IN */\n        ];\n\n      case \"not-in\"\n      /* Operator.NOT_IN */\n      :\n        return [\"array-contains-any\"\n        /* Operator.ARRAY_CONTAINS_ANY */\n        , \"in\"\n        /* Operator.IN */\n        , \"not-in\"\n        /* Operator.NOT_IN */\n        , \"!=\"\n        /* Operator.NOT_EQUAL */\n        ];\n\n      default:\n        return [];\n    }\n  }(e.op));\n\n  if (null !== n) // Special case when it's a duplicate op to give a slightly clearer error message.\n    throw n === e.op ? new U(P, \"Invalid query. You cannot use more than one '\".concat(e.op.toString(), \"' filter.\")) : new U(P, \"Invalid query. You cannot use '\".concat(e.op.toString(), \"' filters with '\").concat(n.toString(), \"' filters.\"));\n}\n\nfunction Qr(t, e, n) {\n  if (!n.isEqual(e)) throw new U(P, \"Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '\".concat(e.toString(), \"' and so you must also use '\").concat(e.toString(), \"' as your first argument to orderBy(), but your first orderBy() is on field '\").concat(n.toString(), \"' instead.\"));\n}\n\nfunction zr(t, e) {\n  if (!(e instanceof Tr || e instanceof Rr)) throw new U(P, \"Function \".concat(t, \"() requires AppliableConstraints created with a call to 'where(...)', 'or(...)', or 'and(...)'.\"));\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\n\n\nfunction Wr(t, e, n) {\n  var r; // Cast to `any` in order to satisfy the union type constraint on\n  // toFirestore().\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, r;\n}\n\nvar Gr = /*#__PURE__*/function (_ref7) {\n  _inherits(Gr, _ref7);\n\n  var _super38 = _createSuper(Gr);\n\n  function Gr(t) {\n    var _this38;\n\n    _classCallCheck(this, Gr);\n\n    _this38 = _super38.call(this), _this38.firestore = t;\n    return _this38;\n  }\n\n  _createClass(Gr, [{\n    key: \"convertBytes\",\n    value: function convertBytes(t) {\n      return new Mn(t);\n    }\n  }, {\n    key: \"convertReference\",\n    value: function convertReference(t) {\n      var e = this.convertDocumentKey(t, this.firestore._databaseId);\n      return new Dn(this.firestore,\n      /* converter= */\n      null, e);\n    }\n  }]);\n\n  return Gr;\n}( /*#__PURE__*/function () {\n  function _class4() {\n    _classCallCheck(this, _class4);\n  }\n\n  _createClass(_class4, [{\n    key: \"convertValue\",\n    value: function convertValue(t) {\n      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"none\";\n\n      switch (Ct(t)) {\n        case 0\n        /* TypeOrder.NullValue */\n        :\n          return null;\n\n        case 1\n        /* TypeOrder.BooleanValue */\n        :\n          return t.booleanValue;\n\n        case 2\n        /* TypeOrder.NumberValue */\n        :\n          return Dt(t.integerValue || t.doubleValue);\n\n        case 3\n        /* TypeOrder.TimestampValue */\n        :\n          return this.convertTimestamp(t.timestampValue);\n\n        case 4\n        /* TypeOrder.ServerTimestampValue */\n        :\n          return this.convertServerTimestamp(t, e);\n\n        case 5\n        /* TypeOrder.StringValue */\n        :\n          return t.stringValue;\n\n        case 6\n        /* TypeOrder.BlobValue */\n        :\n          return this.convertBytes(Ft(t.bytesValue));\n\n        case 7\n        /* TypeOrder.RefValue */\n        :\n          return this.convertReference(t.referenceValue);\n\n        case 8\n        /* TypeOrder.GeoPointValue */\n        :\n          return this.convertGeoPoint(t.geoPointValue);\n\n        case 9\n        /* TypeOrder.ArrayValue */\n        :\n          return this.convertArray(t.arrayValue, e);\n\n        case 10\n        /* TypeOrder.ObjectValue */\n        :\n          return this.convertObject(t.mapValue, e);\n\n        default:\n          throw b();\n      }\n    }\n  }, {\n    key: \"convertObject\",\n    value: function convertObject(t, e) {\n      return this.convertObjectMap(t.fields, e);\n    }\n    /**\n     * @internal\n     */\n\n  }, {\n    key: \"convertObjectMap\",\n    value:\n    /**\n     * @internal\n     */\n    function convertObjectMap(t) {\n      var _this39 = this;\n\n      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"none\";\n      var n = {};\n      return Rt(t, function (t, r) {\n        n[t] = _this39.convertValue(r, e);\n      }), n;\n    }\n  }, {\n    key: \"convertGeoPoint\",\n    value: function convertGeoPoint(t) {\n      return new Bn(Dt(t.latitude), Dt(t.longitude));\n    }\n  }, {\n    key: \"convertArray\",\n    value: function convertArray(t, e) {\n      var _this40 = this;\n\n      return (t.values || []).map(function (t) {\n        return _this40.convertValue(t, e);\n      });\n    }\n  }, {\n    key: \"convertServerTimestamp\",\n    value: function convertServerTimestamp(t, e) {\n      switch (e) {\n        case \"previous\":\n          var n = qt(t);\n          return null == n ? null : this.convertValue(n, e);\n\n        case \"estimate\":\n          return this.convertTimestamp(Ot(t));\n\n        default:\n          return null;\n      }\n    }\n  }, {\n    key: \"convertTimestamp\",\n    value: function convertTimestamp(t) {\n      var e = Nt(t);\n      return new xt(e.seconds, e.nanos);\n    }\n  }, {\n    key: \"convertDocumentKey\",\n    value: function convertDocumentKey(t, e) {\n      var n = tt.fromString(t);\n      E(dn(n));\n      var r = new X(n.get(1), n.get(3)),\n          s = new rt(n.popFirst(5));\n      return r.isEqual(e) || // TODO(b/64130202): Somehow support foreign references.\n      g(\"Document \".concat(s, \" contains a document reference within a different database (\").concat(r.projectId, \"/\").concat(r.database, \") which is not supported. It will be treated as a reference in the current database (\").concat(e.projectId, \"/\").concat(e.database, \") instead.\")), s;\n    }\n  }]);\n\n  return _class4;\n}());\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */\n\n\nfunction Kr(t) {\n  var e = En((t = ct(t, Dn)).firestore),\n      n = new Gr(t.firestore);\n  return gn(e, [t._key]).then(function (e) {\n    E(1 === e.length);\n    var r = e[0];\n    return new pr(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n  });\n}\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */\n\n\nfunction Yr(t) {\n  !function (t) {\n    if (\"L\"\n    /* LimitType.Last */\n    === t.limitType && 0 === t.explicitOrderBy.length) throw new U(k, \"limitToLast() queries require specifying at least one orderBy() clause\");\n  }((t = ct(t, Fn))._query);\n  var e = En(t.firestore),\n      n = new Gr(t.firestore);\n  return _n(e, t._query).then(function (e) {\n    var r = e.map(function (e) {\n      return new yr(t.firestore, n, e.key, e, t.converter);\n    });\n    return \"L\"\n    /* LimitType.Last */\n    === t._query.limitType && // Limit to last queries reverse the orderBy constraint that was\n    // specified by the user. As such, we need to reverse the order of the\n    // results to return the documents in the expected order.\n    r.reverse(), new gr(t, r);\n  });\n}\n\nfunction Hr(t, e, n) {\n  var r = Wr((t = ct(t, Dn)).converter, e, n),\n      s = Jn(Hn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n  return yn(En(t.firestore), [s.toMutation(t._key, ke.none())]);\n}\n\nfunction Jr(t, e, n) {\n  var s = Hn((t = ct(t, Dn)).firestore); // For Compat types, we have to \"extract\" the underlying types before\n  // performing validation.\n\n  var i;\n\n  for (var _len15 = arguments.length, r = new Array(_len15 > 3 ? _len15 - 3 : 0), _key15 = 3; _key15 < _len15; _key15++) {\n    r[_key15 - 3] = arguments[_key15];\n  }\n\n  i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof Ln ? ir(s, \"updateDoc\", t._key, e, n, r) : sr(s, \"updateDoc\", t._key, e);\n  return yn(En(t.firestore), [i.toMutation(t._key, ke.exists(!0))]);\n}\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */\n\n\nfunction Xr(t) {\n  return yn(En((t = ct(t, Dn)).firestore), [new Ue(t._key, ke.none())]);\n}\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */\n\n\nfunction Zr(t, e) {\n  var n = On(t = ct(t, xn)),\n      r = Wr(t.converter, e),\n      s = Jn(Hn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n  return yn(En(t.firestore), [s.toMutation(n._key, ke.exists(!1))]).then(function () {\n    return n;\n  });\n}\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Calculates the number of documents in the result set of the given query,\n * without actually downloading the documents.\n *\n * Using this function to count the documents is efficient because only the\n * final count, not the documents' data, is downloaded. This function can even\n * count the documents if the result set would be prohibitively large to\n * download entirely (e.g. thousands of documents).\n *\n * @param query - The query whose result set size to calculate.\n * @returns A Promise that will be resolved with the count; the count can be\n * retrieved from `snapshot.data().count`, where `snapshot` is the\n * `AggregateQuerySnapshot` to which the returned Promise resolves.\n */\n\n\nfunction ts(t) {\n  return es(t, {\n    count: ss()\n  });\n}\n/**\n * Calculates the specified aggregations over the documents in the result\n * set of the given query, without actually downloading the documents.\n *\n * Using this function to perform aggregations is efficient because only the\n * final aggregation values, not the documents' data, is downloaded. This\n * function can even perform aggregations of the documents if the result set\n * would be prohibitively large to download entirely (e.g. thousands of documents).\n *\n * @param query The query whose result set to aggregate over.\n * @param aggregateSpec An `AggregateSpec` object that specifies the aggregates\n * to perform over the result set. The AggregateSpec specifies aliases for each\n * aggregate, which can be used to retrieve the aggregate result.\n * @example\n * ```typescript\n * const aggregateSnapshot = await getAggregate(query, {\n *   countOfDocs: count(),\n *   totalHours: sum('hours'),\n *   averageScore: average('score')\n * });\n *\n * const countOfDocs: number = aggregateSnapshot.data().countOfDocs;\n * const totalHours: number = aggregateSnapshot.data().totalHours;\n * const averageScore: number | null = aggregateSnapshot.data().averageScore;\n * ```\n * @internal TODO (sum/avg) remove when public\n */\n\n\nfunction es(t, e) {\n  var n = ct(t.firestore, Tn),\n      r = En(n),\n      s = function (t, e) {\n    var n = [];\n\n    for (var _r6 in t) {\n      Object.prototype.hasOwnProperty.call(t, _r6) && n.push(e(t[_r6], _r6, t));\n    }\n\n    return n;\n  }(e, function (t, e) {\n    return new vt(e, t._aggregateType, t._internalFieldPath);\n  }); // Run the aggregation and convert the results\n\n\n  return vn(r, t._query, s).then(function (e) {\n    return function (t, e, n) {\n      var r = new Gr(t);\n      return new Nn(e, r, n);\n    }\n    /**\n    * Create an AggregateField object that can be used to compute the sum of\n    * a specified field over a range of documents in the result set of a query.\n    * @param field Specifies the field to sum across the result set.\n    * @internal TODO (sum/avg) remove when public\n    */\n    (n, t, e);\n  });\n}\n\nfunction ns(t) {\n  return new $n(\"sum\", lr(\"sum\", t));\n}\n/**\n * Create an AggregateField object that can be used to compute the average of\n * a specified field over a range of documents in the result set of a query.\n * @param field Specifies the field to average across the result set.\n * @internal TODO (sum/avg) remove when public\n */\n\n\nfunction rs(t) {\n  return new $n(\"avg\", lr(\"average\", t));\n}\n/**\n * Create an AggregateField object that can be used to compute the count of\n * documents in the result set of a query.\n * @internal TODO (sum/avg) remove when public\n */\n\n\nfunction ss() {\n  return new $n(\"count\");\n}\n/**\n * Compares two 'AggregateField` instances for equality.\n *\n * @param left Compare this AggregateField to the `right`.\n * @param right Compare this AggregateField to the `left`.\n * @internal TODO (sum/avg) remove when public\n */\n\n\nfunction is(t, e) {\n  var n, r;\n  return t instanceof $n && e instanceof $n && t._aggregateType === e._aggregateType && (null === (n = t._internalFieldPath) || void 0 === n ? void 0 : n.canonicalString()) === (null === (r = e._internalFieldPath) || void 0 === r ? void 0 : r.canonicalString());\n}\n/**\n * Compares two `AggregateQuerySnapshot` instances for equality.\n *\n * Two `AggregateQuerySnapshot` instances are considered \"equal\" if they have\n * underlying queries that compare equal, and the same data.\n *\n * @param left - The first `AggregateQuerySnapshot` to compare.\n * @param right - The second `AggregateQuerySnapshot` to compare.\n *\n * @returns `true` if the objects are \"equal\", as defined above, or `false`\n * otherwise.\n */\n\n\nfunction os(t, e) {\n  return Cn(t.query, e.query) && deepEqual(t.data(), e.data());\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */\n\n\nfunction us() {\n  return new Xn(\"deleteField\");\n}\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */\n\n\nfunction cs() {\n  return new tr(\"serverTimestamp\");\n}\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */\n\n\nfunction as() {\n  for (var _len16 = arguments.length, t = new Array(_len16), _key16 = 0; _key16 < _len16; _key16++) {\n    t[_key16] = arguments[_key16];\n  }\n\n  // NOTE: We don't actually parse the data until it's used in set() or\n  // update() since we'd need the Firestore instance to do this.\n  return new er(\"arrayUnion\", t);\n}\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */\n\n\nfunction hs() {\n  for (var _len17 = arguments.length, t = new Array(_len17), _key17 = 0; _key17 < _len17; _key17++) {\n    t[_key17] = arguments[_key17];\n  }\n\n  // NOTE: We don't actually parse the data until it's used in set() or\n  // update() since we'd need the Firestore instance to do this.\n  return new nr(\"arrayRemove\", t);\n}\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */\n\n\nfunction ls(t) {\n  return new rr(\"increment\", t);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */\n\n\nvar fs = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function fs(t, e) {\n    _classCallCheck(this, fs);\n\n    this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, this._dataReader = Hn(t);\n  }\n\n  _createClass(fs, [{\n    key: \"set\",\n    value: function set(t, e, n) {\n      this._verifyNotCommitted();\n\n      var r = ds(t, this._firestore),\n          s = Wr(r.converter, e, n),\n          i = Jn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n      return this._mutations.push(i.toMutation(r._key, ke.none())), this;\n    }\n  }, {\n    key: \"update\",\n    value: function update(t, e, n) {\n      this._verifyNotCommitted();\n\n      var s = ds(t, this._firestore); // For Compat types, we have to \"extract\" the underlying types before\n      // performing validation.\n\n      var i;\n\n      for (var _len18 = arguments.length, r = new Array(_len18 > 3 ? _len18 - 3 : 0), _key18 = 3; _key18 < _len18; _key18++) {\n        r[_key18 - 3] = arguments[_key18];\n      }\n\n      return i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof Ln ? ir(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : sr(this._dataReader, \"WriteBatch.update\", s._key, e), this._mutations.push(i.toMutation(s._key, ke.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      this._verifyNotCommitted();\n\n      var e = ds(t, this._firestore);\n      return this._mutations = this._mutations.concat(new Ue(e._key, ke.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */\n\n  }, {\n    key: \"commit\",\n    value: function commit() {\n      return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n  }, {\n    key: \"_verifyNotCommitted\",\n    value: function _verifyNotCommitted() {\n      if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n    }\n  }]);\n\n  return fs;\n}();\n\nfunction ds(t, e) {\n  if ((t = getModularInstance(t)).firestore !== e) throw new U(P, \"Provided document reference is from a different Firestore instance.\");\n  return t;\n}\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */\n\n\nfunction ws(t) {\n  var e = En(t = ct(t, Tn));\n  return new fs(t, function (t) {\n    return yn(e, t);\n  });\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */\n\n\nvar ms = /*#__PURE__*/function () {\n  function ms(t) {\n    _classCallCheck(this, ms);\n\n    this.datastore = t, // The version of each document that was read during this transaction.\n    this.readVersions = new Map(), this.mutations = [], this.committed = !1,\n    /**\n     * A deferred usage error that occurred previously in this transaction that\n     * will cause the transaction to fail once it actually commits.\n     */\n    this.lastWriteError = null,\n    /**\n     * Set of documents that have been written in the transaction.\n     *\n     * When there's more than one write to the same key in a transaction, any\n     * writes after the first are handled differently.\n     */\n    this.writtenDocs = new Set();\n  }\n\n  _createClass(ms, [{\n    key: \"lookup\",\n    value: function () {\n      var _lookup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(t) {\n        var _this41 = this;\n\n        var e;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(this.ensureCommitNotCalled(), this.mutations.length > 0)) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                throw new U(P, \"Firestore transactions require all reads to be executed before all writes.\");\n\n              case 2:\n                _context2.next = 4;\n                return gn(this.datastore, t);\n\n              case 4:\n                e = _context2.sent;\n                return _context2.abrupt(\"return\", (e.forEach(function (t) {\n                  return _this41.recordVersion(t);\n                }), e));\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function lookup(_x14) {\n        return _lookup.apply(this, arguments);\n      }\n\n      return lookup;\n    }()\n  }, {\n    key: \"set\",\n    value: function set(t, e) {\n      this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n  }, {\n    key: \"update\",\n    value: function update(t, e) {\n      try {\n        this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n      } catch (t) {\n        this.lastWriteError = t;\n      }\n\n      this.writtenDocs.add(t.toString());\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      this.write(new Ue(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n  }, {\n    key: \"commit\",\n    value: function () {\n      var _commit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _this42 = this;\n\n        var t;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(this.ensureCommitNotCalled(), this.lastWriteError)) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                throw this.lastWriteError;\n\n              case 2:\n                t = this.readVersions; // For each mutation, note that the doc was written.\n\n                this.mutations.forEach(function (e) {\n                  t.delete(e.key.toString());\n                });\n                // For each document that was read but not written to, we want to perform\n                // a `verify` operation.\n                t.forEach(function (t, e) {\n                  var n = rt.fromPath(e);\n\n                  _this42.mutations.push(new je(n, _this42.precondition(n)));\n                });\n                _context3.next = 7;\n                return yn(this.datastore, this.mutations);\n\n              case 7:\n                this.committed = !0;\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function commit() {\n        return _commit.apply(this, arguments);\n      }\n\n      return commit;\n    }()\n  }, {\n    key: \"recordVersion\",\n    value: function recordVersion(t) {\n      var e;\n      if (t.isFoundDocument()) e = t.version;else {\n        if (!t.isNoDocument()) throw b(); // Represent a deleted doc using SnapshotVersion.min().\n\n        e = le.min();\n      }\n      var n = this.readVersions.get(t.key.toString());\n\n      if (n) {\n        if (!e.isEqual(n)) // This transaction will fail no matter what.\n          throw new U(q, \"Document version changed between two reads.\");\n      } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */\n\n  }, {\n    key: \"precondition\",\n    value: function precondition(t) {\n      var e = this.readVersions.get(t.toString());\n      return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(le.min()) ? ke.exists(!1) : ke.updateTime(e) : ke.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */\n\n  }, {\n    key: \"preconditionForUpdate\",\n    value: function preconditionForUpdate(t) {\n      var e = this.readVersions.get(t.toString()); // The first time a document is written, we want to take into account the\n      // read time and existence\n\n      if (!this.writtenDocs.has(t.toString()) && e) {\n        if (e.isEqual(le.min())) // The document doesn't exist, so fail the transaction.\n          // This has to be validated locally because you can't send a\n          // precondition that a document does not exist without changing the\n          // semantics of the backend write to be an insert. This is the reverse\n          // of what we want, since we want to assert that the document doesn't\n          // exist but then send the update and have it fail. Since we can't\n          // express that to the backend, we have to validate locally.\n          // Note: this can change once we can send separate verify writes in the\n          // transaction.\n          throw new U(P, \"Can't update a document that doesn't exist.\"); // Document exists, base precondition on document update time.\n\n        return ke.updateTime(e);\n      } // Document was not read, so we just use the preconditions for a blind\n      // update.\n\n\n      return ke.exists(!0);\n    }\n  }, {\n    key: \"write\",\n    value: function write(t) {\n      this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n  }, {\n    key: \"ensureCommitNotCalled\",\n    value: function ensureCommitNotCalled() {}\n  }]);\n\n  return ms;\n}();\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar ps = {\n  maxAttempts: 5\n};\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\n\nvar ys = /*#__PURE__*/function () {\n  function ys(t, e, n, r, s) {\n    _classCallCheck(this, ys);\n\n    this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, this.deferred = s, this.yt = n.maxAttempts, this.gt = new mn(this.asyncQueue, \"transaction_retry\"\n    /* TimerId.TransactionRetry */\n    );\n  }\n  /** Runs the transaction and sets the result on deferred. */\n\n\n  _createClass(ys, [{\n    key: \"run\",\n    value: function run() {\n      this.yt -= 1, this._t();\n    }\n  }, {\n    key: \"_t\",\n    value: function _t() {\n      var _this43 = this;\n\n      this.gt.K( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var t, e;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                t = new ms(_this43.datastore), e = _this43.vt(t);\n                e && e.then(function (e) {\n                  _this43.asyncQueue.enqueueAndForget(function () {\n                    return t.commit().then(function () {\n                      _this43.deferred.resolve(e);\n                    }).catch(function (t) {\n                      _this43.bt(t);\n                    });\n                  });\n                }).catch(function (t) {\n                  _this43.bt(t);\n                });\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      })));\n    }\n  }, {\n    key: \"vt\",\n    value: function vt(t) {\n      try {\n        var e = this.updateFunction(t);\n        return !dt(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), null);\n      } catch (t) {\n        // Do not retry errors thrown by user provided updateFunction.\n        return this.deferred.reject(t), null;\n      }\n    }\n  }, {\n    key: \"bt\",\n    value: function bt(t) {\n      var _this44 = this;\n\n      this.yt > 0 && this.Et(t) ? (this.yt -= 1, this.asyncQueue.enqueueAndForget(function () {\n        return _this44._t(), Promise.resolve();\n      })) : this.deferred.reject(t);\n    }\n  }, {\n    key: \"Et\",\n    value: function Et(t) {\n      if (\"FirebaseError\" === t.name) {\n        // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n        // non-matching document versions with ABORTED. These errors should be retried.\n        var e = t.code;\n        return \"aborted\" === e || \"failed-precondition\" === e || \"already-exists\" === e || !\n        /**\n        * Determines whether an error code represents a permanent error when received\n        * in response to a non-write operation.\n        *\n        * See isPermanentWriteError for classifying write errors.\n        */\n        function (t) {\n          switch (t) {\n            default:\n              return b();\n\n            case A:\n            case _R:\n            case V:\n            case x:\n            case C:\n            case M: // Unauthenticated means something went wrong with our token and we need\n            // to retry with new credentials which will happen automatically.\n\n            case F:\n              return !1;\n\n            case P:\n            case $:\n            case N:\n            case D:\n            case S: // Aborted might be retried in some scenarios, but that is dependant on\n            // the context and should handled individually by the calling code.\n            // See https://cloud.google.com/apis/design/errors.\n\n            case q:\n            case O:\n            case k:\n            case L:\n              return !0;\n          }\n        }(e);\n      }\n\n      return !1;\n    }\n  }]);\n\n  return ys;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The Platform's 'document' implementation or null if not available. */\n\n\nfunction gs() {\n  // `document` is not always available, e.g. in ReactNative and WebWorkers.\n  // eslint-disable-next-line no-restricted-globals\n  return \"undefined\" != typeof document ? document : null;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */\n\n\nvar _s = /*#__PURE__*/function () {\n  function _s(t, e, n, r, s) {\n    _classCallCheck(this, _s);\n\n    this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, this.deferred = new j(), this.then = this.deferred.promise.then.bind(this.deferred.promise), // It's normal for the deferred promise to be canceled (due to cancellation)\n    // and so we attach a dummy catch callback to avoid\n    // 'UnhandledPromiseRejectionWarning' log spam.\n    this.deferred.promise.catch(function (t) {});\n  }\n  /**\n   * Creates and returns a DelayedOperation that has been scheduled to be\n   * executed on the provided asyncQueue after the provided delayMs.\n   *\n   * @param asyncQueue - The queue to schedule the operation on.\n   * @param id - A Timer ID identifying the type of operation this is.\n   * @param delayMs - The delay (ms) before the operation should be scheduled.\n   * @param op - The operation to run.\n   * @param removalCallback - A callback to be called synchronously once the\n   *   operation is executed or canceled, notifying the AsyncQueue to remove it\n   *   from its delayedOperations list.\n   *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n   *   the DelayedOperation class public.\n   */\n\n\n  _createClass(_s, [{\n    key: \"start\",\n    value:\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */\n    function start(t) {\n      var _this45 = this;\n\n      this.timerHandle = setTimeout(function () {\n        return _this45.handleDelayElapsed();\n      }, t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */\n\n  }, {\n    key: \"skipDelay\",\n    value: function skipDelay() {\n      return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */\n\n  }, {\n    key: \"cancel\",\n    value: function cancel(t) {\n      null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(A, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n  }, {\n    key: \"handleDelayElapsed\",\n    value: function handleDelayElapsed() {\n      var _this46 = this;\n\n      this.asyncQueue.enqueueAndForget(function () {\n        return null !== _this46.timerHandle ? (_this46.clearTimeout(), _this46.op().then(function (t) {\n          return _this46.deferred.resolve(t);\n        })) : Promise.resolve();\n      });\n    }\n  }, {\n    key: \"clearTimeout\",\n    value: function (_clearTimeout) {\n      function clearTimeout() {\n        return _clearTimeout.apply(this, arguments);\n      }\n\n      clearTimeout.toString = function () {\n        return _clearTimeout.toString();\n      };\n\n      return clearTimeout;\n    }(function () {\n      null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), this.timerHandle = null);\n    })\n  }], [{\n    key: \"createAndSchedule\",\n    value: function createAndSchedule(t, e, n, r, s) {\n      var i = Date.now() + n,\n          o = new _s(t, e, i, r, s);\n      return o.start(n), o;\n    }\n  }]);\n\n  return _s;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar vs = /*#__PURE__*/function () {\n  function vs() {\n    var _this47 = this;\n\n    _classCallCheck(this, vs);\n\n    // The last promise in the queue.\n    this.It = Promise.resolve(), // A list of retryable operations. Retryable operations are run in order and\n    // retried with backoff.\n    this.Tt = [], // Is this AsyncQueue being shut down? Once it is set to true, it will not\n    // be changed again.\n    this.At = !1, // Operations scheduled to be queued in the future. Operations are\n    // automatically removed after they are run or canceled.\n    this.Rt = [], // visible for testing\n    this.Pt = null, // Flag set while there's an outstanding AsyncQueue operation, used for\n    // assertion sanity-checks.\n    this.Vt = !1, // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n    this.$t = !1, // List of TimerIds to fast-forward delays for.\n    this.Nt = [], // Backoff timer used to schedule retries for retryable operations\n    this.gt = new mn(this, \"async_queue_retry\"\n    /* TimerId.AsyncQueueRetry */\n    ), // Visibility handler that triggers an immediate retry of all retryable\n    // operations. Meant to speed up recovery when we regain file system access\n    // after page comes into foreground.\n    this.Dt = function () {\n      var t = gs();\n      t && y(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), _this47.gt.H();\n    };\n    var t = gs();\n    t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Dt);\n  }\n\n  _createClass(vs, [{\n    key: \"isShuttingDown\",\n    get: function get() {\n      return this.At;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */\n\n  }, {\n    key: \"enqueueAndForget\",\n    value: function enqueueAndForget(t) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.enqueue(t);\n    }\n  }, {\n    key: \"enqueueAndForgetEvenWhileRestricted\",\n    value: function enqueueAndForgetEvenWhileRestricted(t) {\n      this.Ft(), // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.xt(t);\n    }\n  }, {\n    key: \"enterRestrictedMode\",\n    value: function enterRestrictedMode(t) {\n      if (!this.At) {\n        this.At = !0, this.$t = t || !1;\n        var e = gs();\n        e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Dt);\n      }\n    }\n  }, {\n    key: \"enqueue\",\n    value: function enqueue(t) {\n      var _this48 = this;\n\n      if (this.Ft(), this.At) // Return a Promise which never resolves.\n        return new Promise(function () {}); // Create a deferred Promise that we can return to the callee. This\n      // allows us to return a \"hanging Promise\" only to the callee and still\n      // advance the queue even when the operation is not run.\n\n      var e = new j();\n      return this.xt(function () {\n        return _this48.At && _this48.$t ? Promise.resolve() : (t().then(e.resolve, e.reject), e.promise);\n      }).then(function () {\n        return e.promise;\n      });\n    }\n  }, {\n    key: \"enqueueRetryable\",\n    value: function enqueueRetryable(t) {\n      var _this49 = this;\n\n      this.enqueueAndForget(function () {\n        return _this49.Tt.push(t), _this49.St();\n      });\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */\n\n  }, {\n    key: \"St\",\n    value: function () {\n      var _St = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var _this50 = this;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!(0 !== this.Tt.length)) {\n                  _context5.next = 14;\n                  break;\n                }\n\n                _context5.prev = 1;\n                _context5.next = 4;\n                return this.Tt[0]();\n\n              case 4:\n                this.Tt.shift();\n                this.gt.reset();\n                _context5.next = 13;\n                break;\n\n              case 8:\n                _context5.prev = 8;\n                _context5.t0 = _context5[\"catch\"](1);\n\n                if (\n                /**\n                * @license\n                * Copyright 2017 Google LLC\n                *\n                * Licensed under the Apache License, Version 2.0 (the \"License\");\n                * you may not use this file except in compliance with the License.\n                * You may obtain a copy of the License at\n                *\n                *   http://www.apache.org/licenses/LICENSE-2.0\n                *\n                * Unless required by applicable law or agreed to in writing, software\n                * distributed under the License is distributed on an \"AS IS\" BASIS,\n                * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                * See the License for the specific language governing permissions and\n                * limitations under the License.\n                */\n\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function (t) {\n                  // Use name equality, as instanceof checks on errors don't work with errors\n                  // that wrap other errors.\n                  return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n                * @license\n                * Copyright 2020 Google LLC\n                *\n                * Licensed under the Apache License, Version 2.0 (the \"License\");\n                * you may not use this file except in compliance with the License.\n                * You may obtain a copy of the License at\n                *\n                *   http://www.apache.org/licenses/LICENSE-2.0\n                *\n                * Unless required by applicable law or agreed to in writing, software\n                * distributed under the License is distributed on an \"AS IS\" BASIS,\n                * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                * See the License for the specific language governing permissions and\n                * limitations under the License.\n                */\n                (_context5.t0)) {\n                  _context5.next = 12;\n                  break;\n                }\n\n                throw _context5.t0;\n\n              case 12:\n                // Failure will be handled by AsyncQueue\n                y(\"AsyncQueue\", \"Operation failed with retryable error: \" + _context5.t0);\n\n              case 13:\n                this.Tt.length > 0 && // If there are additional operations, we re-schedule `retryNextOp()`.\n                // This is necessary to run retryable operations that failed during\n                // their initial attempt since we don't know whether they are already\n                // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n                // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n                // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n                // call scheduled here.\n                // Since `backoffAndRun()` cancels an existing backoff and schedules a\n                // new backoff on every call, there is only ever a single additional\n                // operation in the queue.\n                this.gt.K(function () {\n                  return _this50.St();\n                });\n\n              case 14:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[1, 8]]);\n      }));\n\n      function St() {\n        return _St.apply(this, arguments);\n      }\n\n      return St;\n    }()\n  }, {\n    key: \"xt\",\n    value: function xt(t) {\n      var _this51 = this;\n\n      var e = this.It.then(function () {\n        return _this51.Vt = !0, t().catch(function (t) {\n          _this51.Pt = t, _this51.Vt = !1;\n\n          var e =\n          /**\n          * Chrome includes Error.message in Error.stack. Other browsers do not.\n          * This returns expected output of message + stack when available.\n          * @param error - Error or FirestoreError\n          */\n          function (t) {\n            var e = t.message || \"\";\n            t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n            return e;\n          }\n          /**\n          * @license\n          * Copyright 2020 Google LLC\n          *\n          * Licensed under the Apache License, Version 2.0 (the \"License\");\n          * you may not use this file except in compliance with the License.\n          * You may obtain a copy of the License at\n          *\n          *   http://www.apache.org/licenses/LICENSE-2.0\n          *\n          * Unless required by applicable law or agreed to in writing, software\n          * distributed under the License is distributed on an \"AS IS\" BASIS,\n          * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n          * See the License for the specific language governing permissions and\n          * limitations under the License.\n          */\n          // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n          // legacy SDK.\n\n          /**\n          * A reference to a transaction.\n          *\n          * The `Transaction` object passed to a transaction's `updateFunction` provides\n          * the methods to read and write data within the transaction context. See\n          * {@link runTransaction}.\n          */\n          (t); // Re-throw the error so that this.tail becomes a rejected Promise and\n          // all further attempts to chain (via .then) will just short-circuit\n          // and return the rejected Promise.\n\n\n          throw g(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        }).then(function (t) {\n          return _this51.Vt = !1, t;\n        });\n      });\n      return this.It = e, e;\n    }\n  }, {\n    key: \"enqueueAfterDelay\",\n    value: function enqueueAfterDelay(t, e, n) {\n      var _this52 = this;\n\n      this.Ft(), // Fast-forward delays for timerIds that have been overriden.\n      this.Nt.indexOf(t) > -1 && (e = 0);\n\n      var r = _s.createAndSchedule(this, t, e, n, function (t) {\n        return _this52.qt(t);\n      });\n\n      return this.Rt.push(r), r;\n    }\n  }, {\n    key: \"Ft\",\n    value: function Ft() {\n      this.Pt && b();\n    }\n  }, {\n    key: \"verifyOperationInProgress\",\n    value: function verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */\n\n  }, {\n    key: \"Ot\",\n    value: function () {\n      var _Ot = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var t;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                t = this.It;\n                _context6.next = 3;\n                return t;\n\n              case 3:\n                if (t !== this.It) {\n                  _context6.next = 0;\n                  break;\n                }\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function Ot() {\n        return _Ot.apply(this, arguments);\n      }\n\n      return Ot;\n    }()\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */\n\n  }, {\n    key: \"kt\",\n    value: function kt(t) {\n      var _iterator17 = _createForOfIteratorHelper(this.Rt),\n          _step17;\n\n      try {\n        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n          var e = _step17.value;\n          if (e.timerId === t) return !0;\n        }\n      } catch (err) {\n        _iterator17.e(err);\n      } finally {\n        _iterator17.f();\n      }\n\n      return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */\n\n  }, {\n    key: \"Ct\",\n    value: function Ct(t) {\n      var _this53 = this;\n\n      // Note that draining may generate more delayed ops, so we do that first.\n      return this.Ot().then(function () {\n        // Run ops in the same order they'd run if they ran naturally.\n        _this53.Rt.sort(function (t, e) {\n          return t.targetTimeMs - e.targetTimeMs;\n        });\n\n        var _iterator18 = _createForOfIteratorHelper(_this53.Rt),\n            _step18;\n\n        try {\n          for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n            var e = _step18.value;\n            if (e.skipDelay(), \"all\"\n            /* TimerId.All */\n            !== t && e.timerId === t) break;\n          }\n        } catch (err) {\n          _iterator18.e(err);\n        } finally {\n          _iterator18.f();\n        }\n\n        return _this53.Ot();\n      });\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */\n\n  }, {\n    key: \"Mt\",\n    value: function Mt(t) {\n      this.Nt.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */\n\n  }, {\n    key: \"qt\",\n    value: function qt(t) {\n      // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n      var e = this.Rt.indexOf(t);\n      this.Rt.splice(e, 1);\n    }\n  }]);\n\n  return vs;\n}();\n\nvar bs = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function bs(t, e) {\n    _classCallCheck(this, bs);\n\n    this._firestore = t, this._transaction = e, this._dataReader = Hn(t);\n  }\n  /**\n   * Reads the document referenced by the provided {@link DocumentReference}.\n   *\n   * @param documentRef - A reference to the document to be read.\n   * @returns A `DocumentSnapshot` with the read data.\n   */\n\n\n  _createClass(bs, [{\n    key: \"get\",\n    value: function get(t) {\n      var _this54 = this;\n\n      var e = ds(t, this._firestore),\n          n = new Gr(this._firestore);\n      return this._transaction.lookup([e._key]).then(function (t) {\n        if (!t || 1 !== t.length) return b();\n        var r = t[0];\n        if (r.isFoundDocument()) return new pr(_this54._firestore, n, r.key, r, e.converter);\n        if (r.isNoDocument()) return new pr(_this54._firestore, n, e._key, null, e.converter);\n        throw b();\n      });\n    }\n  }, {\n    key: \"set\",\n    value: function set(t, e, n) {\n      var r = ds(t, this._firestore),\n          s = Wr(r.converter, e, n),\n          i = Jn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n      return this._transaction.set(r._key, i), this;\n    }\n  }, {\n    key: \"update\",\n    value: function update(t, e, n) {\n      var s = ds(t, this._firestore); // For Compat types, we have to \"extract\" the underlying types before\n      // performing validation.\n\n      var i;\n\n      for (var _len19 = arguments.length, r = new Array(_len19 > 3 ? _len19 - 3 : 0), _key19 = 3; _key19 < _len19; _key19++) {\n        r[_key19 - 3] = arguments[_key19];\n      }\n\n      return i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof Ln ? ir(this._dataReader, \"Transaction.update\", s._key, e, n, r) : sr(this._dataReader, \"Transaction.update\", s._key, e), this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      var e = ds(t, this._firestore);\n      return this._transaction.delete(e._key), this;\n    }\n  }]);\n\n  return bs;\n}();\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */\n\n\nfunction Es(t, e, n) {\n  var r = En(t = ct(t, Tn)),\n      s = Object.assign(Object.assign({}, ps), n);\n  !function (t) {\n    if (t.maxAttempts < 1) throw new U(P, \"Max attempts must be at least 1\");\n  }(s);\n  var i = new j();\n  return new ys(new vs(), r, s, function (n) {\n    return e(new bs(t, n));\n  }, i).run(), i.promise;\n}\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */\n\n\n!function (t) {\n  w = t;\n}(\"\".concat(SDK_VERSION, \"_lite\")), _registerComponent(new Component(\"firestore/lite\", function (t, _ref9) {\n  var e = _ref9.instanceIdentifier,\n      n = _ref9.options;\n  var r = t.getProvider(\"app\").getImmediate(),\n      s = new Tn(new W(t.getProvider(\"auth-internal\")), new H(t.getProvider(\"app-check-internal\")), function (t, e) {\n    if (!Object.prototype.hasOwnProperty.apply(t.options, [\"projectId\"])) throw new U(P, '\"projectId\" not provided in firebase.initializeApp.');\n    return new X(t.options.projectId, e);\n  }\n  /**\n  * @license\n  * Copyright 2017 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n  (r, e), r);\n  return n && s._setSettings(n), s;\n}, \"PUBLIC\").setMultipleInstances(!0)), // RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nregisterVersion(\"firestore-lite\", \"3.13.0\", \"\"), registerVersion(\"firestore-lite\", \"3.13.0\", \"esm2017\");\nexport { $n as AggregateField, Nn as AggregateQuerySnapshot, Mn as Bytes, xn as CollectionReference, Dn as DocumentReference, pr as DocumentSnapshot, Ln as FieldPath, jn as FieldValue, Tn as Firestore, U as FirestoreError, Bn as GeoPoint, Fn as Query, Rr as QueryCompositeFilterConstraint, Er as QueryConstraint, yr as QueryDocumentSnapshot, kr as QueryEndAtConstraint, Tr as QueryFieldFilterConstraint, Dr as QueryLimitConstraint, $r as QueryOrderByConstraint, gr as QuerySnapshot, Sr as QueryStartAtConstraint, xt as Timestamp, bs as Transaction, fs as WriteBatch, Zr as addDoc, is as aggregateFieldEqual, os as aggregateQuerySnapshotEqual, Vr as and, hs as arrayRemove, as as arrayUnion, rs as average, Sn as collection, qn as collectionGroup, Pn as connectFirestoreEmulator, ss as count, Xr as deleteDoc, us as deleteField, On as doc, Un as documentId, Mr as endAt, Cr as endBefore, es as getAggregate, ts as getCount, Kr as getDoc, Yr as getDocs, Rn as getFirestore, ls as increment, An as initializeFirestore, Fr as limit, xr as limitToLast, Pr as or, Nr as orderBy, Ir as query, Cn as queryEqual, kn as refEqual, Es as runTransaction, cs as serverTimestamp, Hr as setDoc, p as setLogLevel, _r as snapshotEqual, Or as startAfter, qr as startAt, ns as sum, Vn as terminate, Jr as updateDoc, Ar as where, ws as writeBatch };","map":{"version":3,"mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,SAASmI,EAAT,CAAYnJ,CAAZ,EAAe;AACX,MAAMgB,CAAC,GAAG,EAAV;AACA,SAAO,KAAK,CAAL,KAAWhB,CAAC,CAACoJ,cAAb,KAAgCpI,CAAC,CAACoI,cAAF,GAAmBpJ,CAAC,CAACoJ,cAArD,GAAsEpI,CAA7E;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AAAI,IAAIqI,EAAE,GAAG,IAAT;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,EAAT,GAAc;AACV,SAAO,SAASD,EAAT,GAAcA,EAAE,GAAG,YAAYlC,IAAI,CAACoC,KAAL,CAAW,aAAapC,IAAI,CAACqC,MAAL,EAAxB,CAA/B,GAAwEH,EAAE,EAA1E,EACP,OAAOA,EAAE,CAAChG,QAAH,CAAY,EAAZ,CADP;AAEH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AAAI,SAASoG,EAAT,CAAYzJ,CAAZ,EAAe;AACf,SAAO,QAAQA,CAAf;AACH;AAED;;;AAAgD,SAAS0J,EAAT,CAAY1J,CAAZ,EAAe;AAC/D;AACA;AACI,SAAO,MAAMA,CAAN,IAAW,IAAIA,CAAJ,IAAS,CAAC,CAAD,GAAK,CAAhC;AACH;AAED;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAM2J,EAAE,GAAG;AACPC,mBAAiB,EAAE,UADZ;AAEPC,QAAM,EAAE,QAFD;AAGPC,UAAQ,EAAE,UAHH;AAIPC,qBAAmB,EAAE;AAJd,CAAX;AAOA;AACA;AACA;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,CAAC8B,eAAF,EAAzJ,CAAtF;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAI,SAAS+kB,EAAT,CAAYvsB,CAAZ,EAAegB,CAAf,EAAkB;AAClB,SAAO2jB,EAAE,CAAC3kB,CAAC,CAAC6jB,KAAH,EAAU7iB,CAAC,CAAC6iB,KAAZ,CAAF,IAAwBsD,SAAC,CAACnnB,CAAC,CAACmS,IAAF,EAAD,EAAWnR,CAAC,CAACmR,IAAF,EAAX,CAAhC;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AAAI,SAASqa,EAAT,GAAc;AACd,SAAO,IAAI/F,EAAJ,CAAO,aAAP,CAAP;AACH;AAED;AACA;AACA;AACA;;;AAAI,SAASgG,EAAT,GAAc;AACd,SAAO,IAAI9F,EAAJ,CAAO,iBAAP,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAI,SAAS+F,EAAT,GAAkB;AAAA,sCAAH1sB,CAAG;AAAHA,KAAG;AAAA;;AACtB;AACA;AACI,SAAO,IAAI4mB,EAAJ,CAAO,YAAP,EAAqB5mB,CAArB,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAI,SAAS2sB,EAAT,GAAkB;AAAA,sCAAH3sB,CAAG;AAAHA,KAAG;AAAA;;AACtB;AACA;AACI,SAAO,IAAI8mB,EAAJ,CAAO,aAAP,EAAsB9mB,CAAtB,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAI,SAAS4sB,EAAT,CAAY5sB,CAAZ,EAAe;AACf,SAAO,IAAI+mB,EAAJ,CAAO,WAAP,EAAoB/mB,CAApB,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","names":["d","t","uid","isAuthenticated","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","w","m","o","p","setLogLevel","y","logLevel","u","DEBUG","e","n","map","v","debug","g","ERROR","error","_","WARN","warn","JSON","stringify","b","Error","E","I","T","A","R","P","V","$","N","D","F","x","S","q","O","k","C","M","L","U","code","message","toString","name","c","j","promise","Promise","resolve","reject","B","user","type","headers","Map","set","Q","enqueueRetryable","z","token","changeListener","W","auth","onInit","getToken","then","accessToken","getUid","G","i","h","K","Y","value","length","H","l","appCheck","J","r","s","databaseId","appId","persistenceKey","host","ssl","forceLongPolling","autoDetectLongPolling","longPollingOptions","useFetchStreams","X","projectId","database","Z","segments","offset","len","comparator","slice","limit","forEach","push","construct","get","Math","min","tt","toArray","join","canonicalString","indexOf","split","filter","et","nt","replace","isValidIdentifier","test","rt","path","popLast","lastSegment","fromString","popFirst","emptyPath","st","it","isDocumentKey","ot","ut","substring","Array","constructor","ct","_delegate","at","ht","timeoutSeconds","lt","ft","round","random","dt","wt","mt","BatchGetDocuments","Commit","RunQuery","RunAggregationQuery","pt","yt","gt","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","_t","method","body","status","statusText","ok","json","isArray","databaseInfo","vt","alias","fieldPath","bt","self","crypto","msCrypto","Uint8Array","getRandomValues","floor","Et","charAt","It","Tt","every","At","Object","prototype","hasOwnProperty","call","Rt","Pt","arguments","Vt","binaryString","next","charCodeAt","done","btoa","atob","DOMException","String","fromCharCode","Symbol","iterator","EMPTY_BYTE_STRING","$t","RegExp","Nt","exec","substr","Number","Date","seconds","getTime","nanos","Dt","Ft","fromBase64String","fromUint8Array","xt","nanoseconds","toMillis","padStart","fromMillis","now","St","mapValue","fields","__type__","stringValue","qt","__previous_value__","Ot","__local_write_time__","timestampValue","kt","Ct","Mt","booleanValue","isEqual","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","doubleValue","isNaN","arrayValue","values","Lt","find","Ut","jt","compareTo","keys","sort","Bt","Qt","zt","Wt","Gt","Kt","assign","Yt","position","inclusive","Ht","Jt","Xt","field","op","data","matchesComparison","isInequality","isKeyField","createKeyFieldInFilter","ee","ie","oe","ue","ce","ne","re","Zt","filters","matches","reduce","concat","getFlattenedFilters","te","key","fromName","se","some","nullValue","ae","dir","he","le","timestamp","_compareTo","fe","root","we","EMPTY","insert","copy","BLACK","remove","isEmpty","left","right","size","minKey","maxKey","inorderTraversal","reverseTraversal","de","isReverse","nodeStack","pop","color","RED","fixUp","isRed","moveRedLeft","removeMin","rotateRight","moveRedRight","rotateLeft","colorFlip","check","pow","me","getIteratorFrom","hasNext","getNext","getIterator","pe","has","add","iter","ye","isPrefixOf","ge","getFieldsMap","isImmediateParentOf","applyChanges","_e","documentType","version","readTime","createTime","documentState","empty","hasLocalMutations","hasCommittedMutations","clone","ve","collectionGroup","orderBy","startAt","endAt","be","Ee","explicitOrderBy","limitType","Ie","Te","getFirstInequalityField","Ae","Re","keyField","Pe","Ve","$e","Ne","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","useProto3Json","De","Fe","xe","elements","Se","qe","serializer","Oe","transform","ke","updateTime","exists","Ce","Me","precondition","fieldTransforms","Le","fieldMask","Ue","je","Be","asc","desc","Qe","in","ze","and","or","We","Ge","toISOString","Ke","toBase64","toUint8Array","Ye","toTimestamp","He","fromTimestamp","Je","child","Xe","Ze","dn","tn","en","nn","rn","found","newFoundDocument","missing","newNoDocument","sn","update","delete","updateMask","fn","verify","updateTransforms","setToServerValue","appendMissingElements","removeAllFromArray","increment","isNone","currentDocument","on","structuredQuery","parent","from","collectionId","allDescendants","ln","create","where","hn","direction","un","before","cn","an","unaryFilter","fieldFilter","getFilters","compositeFilter","fieldPaths","wn","mn","timerId","reset","cancel","max","enqueueAfterDelay","skipDelay","pn","authCredentials","appCheckCredentials","connection","all","catch","invalidateToken","yn","writes","gn","documents","_n","document","setHasCommittedMutations","vn","count","avg","sum","request","structuredAggregationQuery","aggregations","result","a","aggregateFields","bn","En","_terminated","fetch","bind","_databaseId","app","options","_persistenceKey","_freezeSettings","experimentalForceLongPolling","experimentalAutoDetectLongPolling","experimentalLongPollingOptions","_authCredentials","_appCheckCredentials","In","credentials","ignoreUndefinedProperties","cache","localCache","cacheSizeBytes","Tn","_app","_settings","_settingsFrozen","_terminateTask","sessionIndex","iamToken","authTokenFactory","client","_terminate","settings","terminate","An","_getProvider","isInitialized","initialize","instanceIdentifier","Rn","getImmediate","identifier","_initialized","Pn","_getSettings","_setSettings","mockUserToken","sub","user_id","Vn","_delete","$n","_aggregateType","_internalFieldPath","Nn","_userDataWriter","_data","query","convertObjectMap","Dn","converter","_key","firestore","xn","Fn","_query","_path","Sn","qn","On","kn","Cn","Mn","_byteString","Ln","_internalPath","Un","jn","_methodName","Bn","isFinite","_lat","_long","Qn","zn","Wn","Gn","Kn","wr","methodName","Yn","Hn","Jn","merge","mergeFields","hr","cr","lr","contains","mr","covers","Xn","Zn","tr","er","ur","nr","rr","sr","dr","ir","f","ar","_toFieldTransform","fromDate","getPrototypeOf","fr","search","pr","_firestore","_document","_converter","yr","fromFirestore","convertValue","vr","gr","_docs","docs","_r","br","Er","Ir","Rr","Tr","_apply","_field","_op","_value","_parse","Br","jr","Ur","Ar","_create","_queryConstraints","_getOperator","Pr","zr","Vr","$r","_direction","Qr","Nr","Dr","_limit","_limitType","Fr","xr","Sr","_docOrFields","_inclusive","Lr","qr","Or","kr","Cr","Mr","Wr","toFirestore","Gr","convertDocumentKey","convertTimestamp","convertServerTimestamp","convertBytes","convertReference","convertGeoPoint","convertArray","convertObject","Kr","isFoundDocument","Yr","reverse","Hr","toMutation","none","Jr","Xr","Zr","ts","es","ss","ns","rs","is","os","us","cs","as","hs","ls","fs","_commitHandler","_mutations","_committed","_dataReader","_verifyNotCommitted","ds","ws","ms","datastore","readVersions","mutations","committed","lastWriteError","writtenDocs","Set","ensureCommitNotCalled","recordVersion","write","preconditionForUpdate","fromPath","isNoDocument","ps","maxAttempts","ys","asyncQueue","updateFunction","deferred","enqueueAndForget","commit","gs","_s","targetTimeMs","removalCallback","timerHandle","setTimeout","handleDelayElapsed","clearTimeout","start","vs","visibilityState","addEventListener","enqueue","removeEventListener","shift","stack","includes","createAndSchedule","splice","bs","_transaction","lookup","Es","run","getProvider","apply","setMultipleInstances"],"sources":["/Users/deepakrajmohanraj/Desktop/UB/portfolio-website/node_modules/@firebase/firestore/dist/lite/index.browser.esm2017.js"],"sourcesContent":["import { _getProvider, getApp as t, _removeServiceInstance as e, _registerComponent as n, registerVersion as r, SDK_VERSION as s } from \"@firebase/app\";\n\nimport { Component as i } from \"@firebase/component\";\n\nimport { Logger as o, LogLevel as u } from \"@firebase/logger\";\n\nimport { FirebaseError as c, getDefaultEmulatorHostnameAndPort as a, createMockUserToken as h, getModularInstance as l, deepEqual as f } from \"@firebase/util\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass d {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ d.UNAUTHENTICATED = new d(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nd.GOOGLE_CREDENTIALS = new d(\"google-credentials-uid\"), d.FIRST_PARTY = new d(\"first-party-uid\"), \nd.MOCK_USER = new d(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet w = \"9.23.0\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst m = new o(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function p(t) {\n    m.setLogLevel(t);\n}\n\nfunction y(t, ...e) {\n    if (m.logLevel <= u.DEBUG) {\n        const n = e.map(v);\n        m.debug(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\nfunction g(t, ...e) {\n    if (m.logLevel <= u.ERROR) {\n        const n = e.map(v);\n        m.error(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * @internal\n */ function _(t, ...e) {\n    if (m.logLevel <= u.WARN) {\n        const n = e.map(v);\n        m.warn(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function v(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function b(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${w}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw g(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function E(t, e) {\n    t || b();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function I(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const T = \"ok\", A = \"cancelled\", R = \"unknown\", P = \"invalid-argument\", V = \"deadline-exceeded\", $ = \"not-found\", N = \"already-exists\", D = \"permission-denied\", F = \"unauthenticated\", x = \"resource-exhausted\", S = \"failed-precondition\", q = \"aborted\", O = \"out-of-range\", k = \"unimplemented\", C = \"internal\", M = \"unavailable\", L = \"data-loss\";\n\n/** An error returned by a Firestore operation. */ class U extends c {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(t, e), this.code = t, this.message = e, \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class j {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class B {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.headers = new Map, this.headers.set(\"Authorization\", `Bearer ${t}`);\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class Q {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(d.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class z {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\n/** Credential provider for the Lite SDK. */ class W {\n    constructor(t) {\n        this.auth = null, t.onInit((t => {\n            this.auth = t;\n        }));\n    }\n    getToken() {\n        return this.auth ? this.auth.getToken().then((t => t ? (E(\"string\" == typeof t.accessToken), \n        new B(t.accessToken, new d(this.auth.getUid()))) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class G {\n    constructor(t, e, n) {\n        this.t = t, this.i = e, this.o = n, this.type = \"FirstParty\", this.user = d.FIRST_PARTY, \n        this.u = new Map;\n    }\n    /**\n     * Gets an authorization token, using a provided factory function, or return\n     * null.\n     */    h() {\n        return this.o ? this.o() : null;\n    }\n    get headers() {\n        this.u.set(\"X-Goog-AuthUser\", this.t);\n        // Use array notation to prevent minification\n        const t = this.h();\n        return t && this.u.set(\"Authorization\", t), this.i && this.u.set(\"X-Goog-Iam-Authorization-Token\", this.i), \n        this.u;\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class K {\n    constructor(t, e, n) {\n        this.t = t, this.i = e, this.o = n;\n    }\n    getToken() {\n        return Promise.resolve(new G(this.t, this.i, this.o));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(d.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\nclass Y {\n    constructor(t) {\n        this.value = t, this.type = \"AppCheck\", this.headers = new Map, t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n    }\n}\n\n/** AppCheck token provider for the Lite SDK. */ class H {\n    constructor(t) {\n        this.l = t, this.appCheck = null, t.onInit((t => {\n            this.appCheck = t;\n        }));\n    }\n    getToken() {\n        return this.appCheck ? this.appCheck.getToken().then((t => t ? (E(\"string\" == typeof t.token), \n        new Y(t.token)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass J {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param longPollingOptions Options that configure long-polling.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, n, r, s, i, o, u, c) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, \n        this.forceLongPolling = i, this.autoDetectLongPolling = o, this.longPollingOptions = u, \n        this.useFetchStreams = c;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass X {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    static empty() {\n        return new X(\"\", \"\");\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof X && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass Z {\n    constructor(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && b(), void 0 === n ? n = t.length - e : n > t.length - e && b(), \n        this.segments = t, this.offset = e, this.len = n;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === Z.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof Z ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const n = Math.min(t.length, e.length);\n        for (let r = 0; r < n; r++) {\n            const n = t.get(r), s = e.get(r);\n            if (n < s) return -1;\n            if (n > s) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class tt extends Z {\n    construct(t, e, n) {\n        return new tt(t, e, n);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const n of t) {\n            if (n.indexOf(\"//\") >= 0) throw new U(P, `Invalid segment (${n}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...n.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new tt(e);\n    }\n    static emptyPath() {\n        return new tt([]);\n    }\n}\n\nconst et = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class nt extends Z {\n    construct(t, e, n) {\n        return new nt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return et.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        nt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new nt([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let n = \"\", r = 0;\n        const s = () => {\n            if (0 === n.length) throw new U(P, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(n), n = \"\";\n        };\n        let i = !1;\n        for (;r < t.length; ) {\n            const e = t[r];\n            if (\"\\\\\" === e) {\n                if (r + 1 === t.length) throw new U(P, \"Path has trailing escape character: \" + t);\n                const e = t[r + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new U(P, \"Path has invalid escape sequence: \" + t);\n                n += e, r += 2;\n            } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n        }\n        if (s(), i) throw new U(P, \"Unterminated ` in path: \" + t);\n        return new nt(e);\n    }\n    static emptyPath() {\n        return new nt([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class rt {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new rt(tt.fromString(t));\n    }\n    static fromName(t) {\n        return new rt(tt.fromString(t).popFirst(5));\n    }\n    static empty() {\n        return new rt(tt.emptyPath());\n    }\n    get collectionGroup() {\n        return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */    getCollectionGroup() {\n        return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */    getCollectionPath() {\n        return this.path.popLast();\n    }\n    isEqual(t) {\n        return null !== t && 0 === tt.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return tt.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new rt(new tt(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function st(t, e, n) {\n    if (!n) throw new U(P, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction it(t) {\n    if (!rt.isDocumentKey(t)) throw new U(P, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function ot(t) {\n    if (rt.isDocumentKey(t)) throw new U(P, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction ut(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : b();\n}\n\nfunction ct(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new U(P, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const n = ut(t);\n            throw new U(P, `Expected type '${e.name}', but it was: ${n}`);\n        }\n    }\n    return t;\n}\n\nfunction at(t, e) {\n    if (e <= 0) throw new U(P, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Compares two `ExperimentalLongPollingOptions` objects for equality.\n */\n/**\n * Creates and returns a new `ExperimentalLongPollingOptions` with the same\n * option values as the given instance.\n */\nfunction ht(t) {\n    const e = {};\n    return void 0 !== t.timeoutSeconds && (e.timeoutSeconds = t.timeoutSeconds), e;\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The value returned from the most recent invocation of\n * `generateUniqueDebugId()`, or null if it has never been invoked.\n */ let lt = null;\n\n/**\n * Generates and returns an initial value for `lastUniqueDebugId`.\n *\n * The returned value is randomly selected from a range of integers that are\n * represented as 8 hexadecimal digits. This means that (within reason) any\n * numbers generated by incrementing the returned number by 1 will also be\n * represented by 8 hexadecimal digits. This leads to all \"IDs\" having the same\n * length when converted to a hexadecimal string, making reading logs containing\n * these IDs easier to follow. And since the return value is randomly selected\n * it will help to differentiate between logs from different executions.\n */\n/**\n * Generates and returns a unique ID as a hexadecimal string.\n *\n * The returned ID is intended to be used in debug logging messages to help\n * correlate log messages that may be spatially separated in the logs, but\n * logically related. For example, a network connection could include the same\n * \"debug ID\" string in all of its log messages to help trace a specific\n * connection over time.\n *\n * @return the 10-character generated ID (e.g. \"0xa1b2c3d4\").\n */\nfunction ft() {\n    return null === lt ? lt = 268435456 + Math.round(2147483648 * Math.random()) : lt++, \n    \"0x\" + lt.toString(16);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */ function dt(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function wt(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst mt = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\",\n    RunAggregationQuery: \"runAggregationQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar pt, yt;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction gt(t) {\n    if (void 0 === t) return g(\"RPC_ERROR\", \"HTTP error has no status\"), R;\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    \n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n        switch (t) {\n      case 200:\n        // OK\n        return T;\n\n      case 400:\n        // Bad Request\n        return S;\n\n        // Other possibilities based on the forward mapping\n        // return Code.INVALID_ARGUMENT;\n        // return Code.OUT_OF_RANGE;\n              case 401:\n        // Unauthorized\n        return F;\n\n      case 403:\n        // Forbidden\n        return D;\n\n      case 404:\n        // Not Found\n        return $;\n\n      case 409:\n        // Conflict\n        return q;\n\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n              case 416:\n        // Range Not Satisfiable\n        return O;\n\n      case 429:\n        // Too Many Requests\n        return x;\n\n      case 499:\n        // Client Closed Request\n        return A;\n\n      case 500:\n        // Internal Server Error\n        return R;\n\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n              case 501:\n        // Unimplemented\n        return k;\n\n      case 503:\n        // Service Unavailable\n        return M;\n\n      case 504:\n        // Gateway Timeout\n        return V;\n\n      default:\n        return t >= 200 && t < 300 ? T : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? C : R;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */ (yt = pt || (pt = {}))[yt.OK = 0] = \"OK\", yt[yt.CANCELLED = 1] = \"CANCELLED\", \nyt[yt.UNKNOWN = 2] = \"UNKNOWN\", yt[yt.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nyt[yt.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", yt[yt.NOT_FOUND = 5] = \"NOT_FOUND\", \nyt[yt.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", yt[yt.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nyt[yt.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", yt[yt.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nyt[yt.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", yt[yt.ABORTED = 10] = \"ABORTED\", \nyt[yt.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", yt[yt.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nyt[yt.INTERNAL = 13] = \"INTERNAL\", yt[yt.UNAVAILABLE = 14] = \"UNAVAILABLE\", yt[yt.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass _t extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\";\n        this.m = e + \"://\" + t.host, this.p = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    get g() {\n        // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n        // where to run the query, and expect the `request` to NOT specify the \"path\".\n        return !1;\n    }\n    v(t, e, n, r, s) {\n        const i = ft(), o = this.I(t, e);\n        y(\"RestConnection\", `Sending RPC '${t}' ${i}:`, o, n);\n        const u = {};\n        return this.T(u, r, s), this.A(t, o, u, n).then((e => (y(\"RestConnection\", `Received RPC '${t}' ${i}: `, e), \n        e)), (e => {\n            throw _(\"RestConnection\", `RPC '${t}' ${i} failed with error: `, e, \"url: \", o, \"request:\", n), \n            e;\n        }));\n    }\n    R(t, e, n, r, s, i) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.v(t, e, n, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    T(t, e, n) {\n        t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + w, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e && e.headers.forEach(((e, n) => t[n] = e)), n && n.headers.forEach(((e, n) => t[n] = e));\n    }\n    I(t, e) {\n        const n = mt[t];\n        return `${this.m}/v1/${e}:${n}`;\n    }\n} {\n    /**\n     * @param databaseInfo - The connection info.\n     * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n     */\n    constructor(t, e) {\n        super(t), this.P = e;\n    }\n    V(t, e) {\n        throw new Error(\"Not supported by FetchConnection\");\n    }\n    async A(t, e, n, r) {\n        var s;\n        const i = JSON.stringify(r);\n        let o;\n        try {\n            o = await this.P(e, {\n                method: \"POST\",\n                headers: n,\n                body: i\n            });\n        } catch (t) {\n            const e = t;\n            throw new U(gt(e.status), \"Request failed with error: \" + e.statusText);\n        }\n        if (!o.ok) {\n            let t = await o.json();\n            Array.isArray(t) && (t = t[0]);\n            const e = null === (s = null == t ? void 0 : t.error) || void 0 === s ? void 0 : s.message;\n            throw new U(gt(o.status), `Request failed with error: ${null != e ? e : o.statusText}`);\n        }\n        return o.json();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Concrete implementation of the Aggregate type.\n */\nclass vt {\n    constructor(t, e, n) {\n        this.alias = t, this.$ = e, this.fieldPath = n;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */ function bt(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Et {\n    static N() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let n = \"\";\n        for (;n.length < 20; ) {\n            const r = bt(40);\n            for (let s = 0; s < r.length; ++s) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n        return n;\n    }\n}\n\nfunction It(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function Tt(t, e, n) {\n    return t.length === e.length && t.every(((t, r) => n(t, e[r])));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function At(t) {\n    let e = 0;\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction Rt(t, e) {\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An error encountered while decoding base64 string.\n */\nclass Pt extends Error {\n    constructor() {\n        super(...arguments), this.name = \"Base64DecodeError\";\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Converts a Base64 encoded string to a binary string. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass Vt {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = function(t) {\n            try {\n                return atob(t);\n            } catch (t) {\n                // Check that `DOMException` is defined before using it to avoid\n                // \"ReferenceError: Property 'DOMException' doesn't exist\" in react-native.\n                // (https://github.com/firebase/firebase-js-sdk/issues/7115)\n                throw \"undefined\" != typeof DOMException && t instanceof DOMException ? new Pt(\"Invalid base64 string: \" + t) : t;\n            }\n        }\n        /** Converts a binary string to a Base64 encoded string. */ (t);\n        return new Vt(e);\n    }\n    static fromUint8Array(t) {\n        // TODO(indexing); Remove the copy of the byte string here as this method\n        // is frequently called during indexing.\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let e = \"\";\n            for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new Vt(e);\n    }\n    [Symbol.iterator]() {\n        let t = 0;\n        return {\n            next: () => t < this.binaryString.length ? {\n                value: this.binaryString.charCodeAt(t++),\n                done: !1\n            } : {\n                value: void 0,\n                done: !0\n            }\n        };\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const e = new Uint8Array(t.length);\n            for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return It(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\nVt.EMPTY_BYTE_STRING = new Vt(\"\");\n\nconst $t = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function Nt(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (E(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const n = $t.exec(t);\n        if (E(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = n[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const r = new Date(t);\n        return {\n            seconds: Math.floor(r.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: Dt(t.seconds),\n        nanos: Dt(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function Dt(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function Ft(t) {\n    return \"string\" == typeof t ? Vt.fromBase64String(t) : Vt.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass xt {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return xt.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return xt.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), n = Math.floor(1e6 * (t - 1e3 * e));\n        return new xt(e, n);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? It(this.nanoseconds, t.nanoseconds) : It(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function St(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function qt(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return St(e) ? qt(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function Ot(t) {\n    const e = Nt(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new xt(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const kt = {\n    fields: {\n        __type__: {\n            stringValue: \"__max__\"\n        }\n    }\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction Ct(t) {\n    return \"nullValue\" in t ? 0 /* TypeOrder.NullValue */ : \"booleanValue\" in t ? 1 /* TypeOrder.BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* TypeOrder.NumberValue */ : \"timestampValue\" in t ? 3 /* TypeOrder.TimestampValue */ : \"stringValue\" in t ? 5 /* TypeOrder.StringValue */ : \"bytesValue\" in t ? 6 /* TypeOrder.BlobValue */ : \"referenceValue\" in t ? 7 /* TypeOrder.RefValue */ : \"geoPointValue\" in t ? 8 /* TypeOrder.GeoPointValue */ : \"arrayValue\" in t ? 9 /* TypeOrder.ArrayValue */ : \"mapValue\" in t ? St(t) ? 4 /* TypeOrder.ServerTimestampValue */ : \n    /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n    function(t) {\n        return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n    }\n    /**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ (t) ? 9007199254740991 /* TypeOrder.MaxValue */ : 10 /* TypeOrder.ObjectValue */ : b();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function Mt(t, e) {\n    if (t === e) return !0;\n    const n = Ct(t);\n    if (n !== Ct(e)) return !1;\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return !0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return Ot(t).isEqual(Ot(e));\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const n = Nt(t.timestampValue), r = Nt(e.timestampValue);\n            return n.seconds === r.seconds && n.nanos === r.nanos;\n        }(t, e);\n\n      case 5 /* TypeOrder.StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            return Ft(t.bytesValue).isEqual(Ft(e.bytesValue));\n        }(t, e);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            return Dt(t.geoPointValue.latitude) === Dt(e.geoPointValue.latitude) && Dt(t.geoPointValue.longitude) === Dt(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return Dt(t.integerValue) === Dt(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const n = Dt(t.doubleValue), r = Dt(e.doubleValue);\n                return n === r ? wt(n) === wt(r) : isNaN(n) && isNaN(r);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return Tt(t.arrayValue.values || [], e.arrayValue.values || [], Mt);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            const n = t.mapValue.fields || {}, r = e.mapValue.fields || {};\n            if (At(n) !== At(r)) return !1;\n            for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !Mt(n[t], r[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return b();\n    }\n}\n\nfunction Lt(t, e) {\n    return void 0 !== (t.values || []).find((t => Mt(t, e)));\n}\n\nfunction Ut(t, e) {\n    if (t === e) return 0;\n    const n = Ct(t), r = Ct(e);\n    if (n !== r) return It(n, r);\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return 0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return It(t.booleanValue, e.booleanValue);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            const n = Dt(t.integerValue || t.doubleValue), r = Dt(e.integerValue || e.doubleValue);\n            return n < r ? -1 : n > r ? 1 : n === r ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return jt(t.timestampValue, e.timestampValue);\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return jt(Ot(t), Ot(e));\n\n      case 5 /* TypeOrder.StringValue */ :\n        return It(t.stringValue, e.stringValue);\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            const n = Ft(t), r = Ft(e);\n            return n.compareTo(r);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return function(t, e) {\n            const n = t.split(\"/\"), r = e.split(\"/\");\n            for (let t = 0; t < n.length && t < r.length; t++) {\n                const e = It(n[t], r[t]);\n                if (0 !== e) return e;\n            }\n            return It(n.length, r.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            const n = It(Dt(t.latitude), Dt(e.latitude));\n            if (0 !== n) return n;\n            return It(Dt(t.longitude), Dt(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return function(t, e) {\n            const n = t.values || [], r = e.values || [];\n            for (let t = 0; t < n.length && t < r.length; ++t) {\n                const e = Ut(n[t], r[t]);\n                if (e) return e;\n            }\n            return It(n.length, r.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            if (t === kt && e === kt) return 0;\n            if (t === kt) return 1;\n            if (e === kt) return -1;\n            const n = t.fields || {}, r = Object.keys(n), s = e.fields || {}, i = Object.keys(s);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            r.sort(), i.sort();\n            for (let t = 0; t < r.length && t < i.length; ++t) {\n                const e = It(r[t], i[t]);\n                if (0 !== e) return e;\n                const o = Ut(n[r[t]], s[i[t]]);\n                if (0 !== o) return o;\n            }\n            return It(r.length, i.length);\n        }\n        /** Returns a reference value for the provided database and key. */ (t.mapValue, e.mapValue);\n\n      default:\n        throw b();\n    }\n}\n\nfunction jt(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return It(t, e);\n    const n = Nt(t), r = Nt(e), s = It(n.seconds, r.seconds);\n    return 0 !== s ? s : It(n.nanos, r.nanos);\n}\n\nfunction Bt(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an ArrayValue. */ function Qt(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function zt(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function Wt(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function Gt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function Kt(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return Rt(t.mapValue.fields, ((t, n) => e.mapValue.fields[t] = Kt(n))), e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Kt(t.arrayValue.values[n]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\nclass Yt {\n    constructor(t, e) {\n        this.position = t, this.inclusive = e;\n    }\n}\n\nfunction Ht(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n    for (let n = 0; n < t.position.length; n++) {\n        if (!Mt(t.position[n], e.position[n])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Jt {}\n\nclass Xt extends Jt {\n    constructor(t, e, n) {\n        super(), this.field = t, this.op = e, this.value = n;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, n) {\n        return t.isKeyField() ? \"in\" /* Operator.IN */ === e || \"not-in\" /* Operator.NOT_IN */ === e ? this.createKeyFieldInFilter(t, e, n) : new ee(t, e, n) : \"array-contains\" /* Operator.ARRAY_CONTAINS */ === e ? new ie(t, n) : \"in\" /* Operator.IN */ === e ? new oe(t, n) : \"not-in\" /* Operator.NOT_IN */ === e ? new ue(t, n) : \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === e ? new ce(t, n) : new Xt(t, e, n);\n    }\n    static createKeyFieldInFilter(t, e, n) {\n        return \"in\" /* Operator.IN */ === e ? new ne(t, n) : new re(t, n);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* Operator.NOT_EQUAL */ === this.op ? null !== e && this.matchesComparison(Ut(e, this.value)) : null !== e && Ct(this.value) === Ct(e) && this.matchesComparison(Ut(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    matchesComparison(t) {\n        switch (this.op) {\n          case \"<\" /* Operator.LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* Operator.EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* Operator.GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return b();\n        }\n    }\n    isInequality() {\n        return [ \"<\" /* Operator.LESS_THAN */ , \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ , \">\" /* Operator.GREATER_THAN */ , \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ , \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n    getFlattenedFilters() {\n        return [ this ];\n    }\n    getFilters() {\n        return [ this ];\n    }\n    getFirstInequalityField() {\n        return this.isInequality() ? this.field : null;\n    }\n}\n\nclass Zt extends Jt {\n    constructor(t, e) {\n        super(), this.filters = t, this.op = e, this.D = null;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e) {\n        return new Zt(t, e);\n    }\n    matches(t) {\n        return \"and\" /* CompositeOperator.AND */ === this.op ? void 0 === this.filters.find((e => !e.matches(t))) : void 0 !== this.filters.find((e => e.matches(t)));\n    }\n    getFlattenedFilters() {\n        return null !== this.D || (this.D = this.filters.reduce(((t, e) => t.concat(e.getFlattenedFilters())), [])), \n        this.D;\n    }\n    // Returns a mutable copy of `this.filters`\n    getFilters() {\n        return Object.assign([], this.filters);\n    }\n    getFirstInequalityField() {\n        const t = this.F((t => t.isInequality()));\n        return null !== t ? t.field : null;\n    }\n    // Performs a depth-first search to find and return the first FieldFilter in the composite filter\n    // that satisfies the predicate. Returns `null` if none of the FieldFilters satisfy the\n    // predicate.\n    F(t) {\n        for (const e of this.getFlattenedFilters()) if (t(e)) return e;\n        return null;\n    }\n}\n\nfunction te(t, e) {\n    return t instanceof Xt ? function(t, e) {\n        return e instanceof Xt && t.op === e.op && t.field.isEqual(e.field) && Mt(t.value, e.value);\n    }(t, e) : t instanceof Zt ? function(t, e) {\n        if (e instanceof Zt && t.op === e.op && t.filters.length === e.filters.length) {\n            return t.filters.reduce(((t, n, r) => t && te(n, e.filters[r])), !0);\n        }\n        return !1;\n    }\n    /** Filter that matches on key fields (i.e. '__name__'). */ (t, e) : void b();\n}\n\nclass ee extends Xt {\n    constructor(t, e, n) {\n        super(t, e, n), this.key = rt.fromName(n.referenceValue);\n    }\n    matches(t) {\n        const e = rt.comparator(t.key, this.key);\n        return this.matchesComparison(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class ne extends Xt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e), this.keys = se(\"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class re extends Xt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e), this.keys = se(\"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction se(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((t => rt.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class ie extends Xt {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* Operator.ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return Qt(e) && Lt(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class oe extends Xt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && Lt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class ue extends Xt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        if (Lt(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !Lt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class ce extends Xt {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!Qt(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => Lt(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class ae {\n    constructor(t, e = \"asc\" /* Direction.ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction he(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class le {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new le(t);\n    }\n    static min() {\n        return new le(new xt(0, 0));\n    }\n    static max() {\n        return new le(new xt(253402300799, 999999999));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass fe {\n    constructor(t, e) {\n        this.comparator = t, this.root = e || we.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    insert(t, e) {\n        return new fe(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, we.BLACK, null, null));\n    }\n    // Returns a copy of the map, with the specified key removed.\n    remove(t) {\n        return new fe(this.comparator, this.root.remove(t, this.comparator).copy(null, null, we.BLACK, null, null));\n    }\n    // Returns the value of the node with the given key, or null.\n    get(t) {\n        let e = this.root;\n        for (;!e.isEmpty(); ) {\n            const n = this.comparator(t, e.key);\n            if (0 === n) return e.value;\n            n < 0 ? e = e.left : n > 0 && (e = e.right);\n        }\n        return null;\n    }\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    indexOf(t) {\n        // Number of nodes that were pruned when descending right\n        let e = 0, n = this.root;\n        for (;!n.isEmpty(); ) {\n            const r = this.comparator(t, n.key);\n            if (0 === r) return e + n.left.size;\n            r < 0 ? n = n.left : (\n            // Count all nodes left of the node plus the node itself\n            e += n.left.size + 1, n = n.right);\n        }\n        // Node not found\n                return -1;\n    }\n    isEmpty() {\n        return this.root.isEmpty();\n    }\n    // Returns the total number of nodes in the map.\n    get size() {\n        return this.root.size;\n    }\n    // Returns the minimum key in the map.\n    minKey() {\n        return this.root.minKey();\n    }\n    // Returns the maximum key in the map.\n    maxKey() {\n        return this.root.maxKey();\n    }\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.root.inorderTraversal(t);\n    }\n    forEach(t) {\n        this.inorderTraversal(((e, n) => (t(e, n), !1)));\n    }\n    toString() {\n        const t = [];\n        return this.inorderTraversal(((e, n) => (t.push(`${e}:${n}`), !1))), `{${t.join(\", \")}}`;\n    }\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.root.reverseTraversal(t);\n    }\n    // Returns an iterator over the SortedMap.\n    getIterator() {\n        return new de(this.root, null, this.comparator, !1);\n    }\n    getIteratorFrom(t) {\n        return new de(this.root, t, this.comparator, !1);\n    }\n    getReverseIterator() {\n        return new de(this.root, null, this.comparator, !0);\n    }\n    getReverseIteratorFrom(t) {\n        return new de(this.root, t, this.comparator, !0);\n    }\n}\n\n // end SortedMap\n// An iterator over an LLRBNode.\nclass de {\n    constructor(t, e, n, r) {\n        this.isReverse = r, this.nodeStack = [];\n        let s = 1;\n        for (;!t.isEmpty(); ) if (s = e ? n(t.key, e) : 1, \n        // flip the comparison if we're going in reverse\n        e && r && (s *= -1), s < 0) \n        // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right; else {\n            if (0 === s) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(t);\n                break;\n            }\n            // This node is greater than our start key, add it to the stack and move\n            // to the next one\n            this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n        }\n    }\n    getNext() {\n        let t = this.nodeStack.pop();\n        const e = {\n            key: t.key,\n            value: t.value\n        };\n        if (this.isReverse) for (t = t.left; !t.isEmpty(); ) this.nodeStack.push(t), t = t.right; else for (t = t.right; !t.isEmpty(); ) this.nodeStack.push(t), \n        t = t.left;\n        return e;\n    }\n    hasNext() {\n        return this.nodeStack.length > 0;\n    }\n    peek() {\n        if (0 === this.nodeStack.length) return null;\n        const t = this.nodeStack[this.nodeStack.length - 1];\n        return {\n            key: t.key,\n            value: t.value\n        };\n    }\n}\n\n // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass we {\n    constructor(t, e, n, r, s) {\n        this.key = t, this.value = e, this.color = null != n ? n : we.RED, this.left = null != r ? r : we.EMPTY, \n        this.right = null != s ? s : we.EMPTY, this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    copy(t, e, n, r, s) {\n        return new we(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n    }\n    isEmpty() {\n        return !1;\n    }\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    }\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    }\n    // Returns the minimum node in the tree.\n    min() {\n        return this.left.isEmpty() ? this : this.left.min();\n    }\n    // Returns the maximum key in the tree.\n    minKey() {\n        return this.min().key;\n    }\n    // Returns the maximum key in the tree.\n    maxKey() {\n        return this.right.isEmpty() ? this.key : this.right.maxKey();\n    }\n    // Returns new tree, with the key/value added.\n    insert(t, e, n) {\n        let r = this;\n        const s = n(t, r.key);\n        return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), \n        r.fixUp();\n    }\n    removeMin() {\n        if (this.left.isEmpty()) return we.EMPTY;\n        let t = this;\n        return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), \n        t.fixUp();\n    }\n    // Returns new tree, with the specified item removed.\n    remove(t, e) {\n        let n, r = this;\n        if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), \n        r = r.copy(null, null, null, r.left.remove(t, e), null); else {\n            if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), \n            0 === e(t, r.key)) {\n                if (r.right.isEmpty()) return we.EMPTY;\n                n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n            }\n            r = r.copy(null, null, null, null, r.right.remove(t, e));\n        }\n        return r.fixUp();\n    }\n    isRed() {\n        return this.color;\n    }\n    // Returns new tree after performing any needed rotations.\n    fixUp() {\n        let t = this;\n        return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), \n        t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n    moveRedLeft() {\n        let t = this.colorFlip();\n        return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), \n        t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n    moveRedRight() {\n        let t = this.colorFlip();\n        return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n    rotateLeft() {\n        const t = this.copy(null, null, we.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, t, null);\n    }\n    rotateRight() {\n        const t = this.copy(null, null, we.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, t);\n    }\n    colorFlip() {\n        const t = this.left.copy(null, null, !this.left.color, null, null), e = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, t, e);\n    }\n    // For testing.\n    checkMaxDepth() {\n        const t = this.check();\n        return Math.pow(2, t) <= this.size + 1;\n    }\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    check() {\n        if (this.isRed() && this.left.isRed()) throw b();\n        if (this.right.isRed()) throw b();\n        const t = this.left.check();\n        if (t !== this.right.check()) throw b();\n        return t + (this.isRed() ? 0 : 1);\n    }\n}\n\n // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nwe.EMPTY = null, we.RED = !0, we.BLACK = !1;\n\n// end LLRBEmptyNode\nwe.EMPTY = new \n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n    constructor() {\n        this.size = 0;\n    }\n    get key() {\n        throw b();\n    }\n    get value() {\n        throw b();\n    }\n    get color() {\n        throw b();\n    }\n    get left() {\n        throw b();\n    }\n    get right() {\n        throw b();\n    }\n    // Returns a copy of the current node.\n    copy(t, e, n, r, s) {\n        return this;\n    }\n    // Returns a copy of the tree, with the specified key/value added.\n    insert(t, e, n) {\n        return new we(t, e);\n    }\n    // Returns a copy of the tree, with the specified key removed.\n    remove(t, e) {\n        return this;\n    }\n    isEmpty() {\n        return !0;\n    }\n    inorderTraversal(t) {\n        return !1;\n    }\n    reverseTraversal(t) {\n        return !1;\n    }\n    minKey() {\n        return null;\n    }\n    maxKey() {\n        return null;\n    }\n    isRed() {\n        return !1;\n    }\n    // For testing.\n    checkMaxDepth() {\n        return !0;\n    }\n    check() {\n        return 0;\n    }\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass me {\n    constructor(t) {\n        this.comparator = t, this.data = new fe(this.comparator);\n    }\n    has(t) {\n        return null !== this.data.get(t);\n    }\n    first() {\n        return this.data.minKey();\n    }\n    last() {\n        return this.data.maxKey();\n    }\n    get size() {\n        return this.data.size;\n    }\n    indexOf(t) {\n        return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */    forEach(t) {\n        this.data.inorderTraversal(((e, n) => (t(e), !1)));\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */    forEachInRange(t, e) {\n        const n = this.data.getIteratorFrom(t[0]);\n        for (;n.hasNext(); ) {\n            const r = n.getNext();\n            if (this.comparator(r.key, t[1]) >= 0) return;\n            e(r.key);\n        }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */    forEachWhile(t, e) {\n        let n;\n        for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext(); ) {\n            if (!t(n.getNext().key)) return;\n        }\n    }\n    /** Finds the least element greater than or equal to `elem`. */    firstAfterOrEqual(t) {\n        const e = this.data.getIteratorFrom(t);\n        return e.hasNext() ? e.getNext().key : null;\n    }\n    getIterator() {\n        return new pe(this.data.getIterator());\n    }\n    getIteratorFrom(t) {\n        return new pe(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */    add(t) {\n        return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */    delete(t) {\n        return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n    isEmpty() {\n        return this.data.isEmpty();\n    }\n    unionWith(t) {\n        let e = this;\n        // Make sure `result` always refers to the larger one of the two sets.\n                return e.size < t.size && (e = t, t = this), t.forEach((t => {\n            e = e.add(t);\n        })), e;\n    }\n    isEqual(t) {\n        if (!(t instanceof me)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.data.getIterator(), n = t.data.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, r = n.getNext().key;\n            if (0 !== this.comparator(t, r)) return !1;\n        }\n        return !0;\n    }\n    toArray() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e);\n        })), t;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => t.push(e))), \"SortedSet(\" + t.toString() + \")\";\n    }\n    copy(t) {\n        const e = new me(this.comparator);\n        return e.data = t, e;\n    }\n}\n\nclass pe {\n    constructor(t) {\n        this.iter = t;\n    }\n    getNext() {\n        return this.iter.getNext().key;\n    }\n    hasNext() {\n        return this.iter.hasNext();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */ class ye {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(nt.comparator);\n    }\n    static empty() {\n        return new ye([]);\n    }\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */    unionWith(t) {\n        let e = new me(nt.comparator);\n        for (const t of this.fields) e = e.add(t);\n        for (const n of t) e = e.add(n);\n        return new ye(e.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return Tt(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ class ge {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new ge({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], \n            !Gt(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = Kt(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = nt.emptyPath(), n = {}, r = [];\n        t.forEach(((t, s) => {\n            if (!e.isImmediateParentOf(s)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n            }\n            t ? n[s.lastSegment()] = Kt(t) : r.push(s.lastSegment());\n        }));\n        const s = this.getFieldsMap(e);\n        this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        Gt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return Mt(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let n = 0; n < t.length; ++n) {\n            let r = e.mapValue.fields[t.get(n)];\n            Gt(r) && r.mapValue.fields || (r = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(n)] = r), e = r;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, n) {\n        Rt(e, ((e, n) => t[e] = n));\n        for (const e of n) delete t[e];\n    }\n    clone() {\n        return new ge(Kt(this.value));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class _e {\n    constructor(t, e, n, r, s, i, o) {\n        this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.createTime = s, \n        this.data = i, this.documentState = o;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new _e(t, 0 /* DocumentType.INVALID */ , \n        /* version */ le.min(), \n        /* readTime */ le.min(), \n        /* createTime */ le.min(), ge.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, n, r) {\n        return new _e(t, 1 /* DocumentType.FOUND_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ le.min(), \n        /* createTime */ n, r, 0 /* DocumentState.SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new _e(t, 2 /* DocumentType.NO_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ le.min(), \n        /* createTime */ le.min(), ge.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new _e(t, 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ le.min(), \n        /* createTime */ le.min(), ge.empty(), 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        // If a document is switching state from being an invalid or deleted\n        // document to a valid (FOUND_DOCUMENT) document, either due to receiving an\n        // update from Watch or due to applying a local set mutation on top\n        // of a deleted document, our best guess about its createTime would be the\n        // version at which the document transitioned to a FOUND_DOCUMENT.\n        return !this.createTime.isEqual(le.min()) || 2 /* DocumentType.NO_DOCUMENT */ !== this.documentType && 0 /* DocumentType.INVALID */ !== this.documentType || (this.createTime = t), \n        this.version = t, this.documentType = 1 /* DocumentType.FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* DocumentType.NO_DOCUMENT */ , \n        this.data = ge.empty(), this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        this.data = ge.empty(), this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , \n        this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ , this.version = le.min(), \n        this;\n    }\n    setReadTime(t) {\n        return this.readTime = t, this;\n    }\n    get hasLocalMutations() {\n        return 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* DocumentType.INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* DocumentType.FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* DocumentType.NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* DocumentType.UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof _e && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    mutableCopy() {\n        return new _e(this.key, this.documentType, this.version, this.readTime, this.createTime, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {createTime: ${this.createTime}}), {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass ve {\n    constructor(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, \n        this.startAt = i, this.endAt = o, this.S = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function be(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n    return new ve(t, e, n, r, s, i, o);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\nclass Ee {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, n = [], r = [], s = null, i = \"F\" /* LimitType.First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, \n        this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.q = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.O = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function Ie(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction Te(t) {\n    for (const e of t.filters) {\n        const t = e.getFirstInequalityField();\n        if (null !== t) return t;\n    }\n    return null;\n}\n\n/**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction Ae(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function Re(t) {\n    const e = I(t);\n    if (null === e.q) {\n        e.q = [];\n        const t = Te(e), n = Ie(e);\n        if (null !== t && null === n) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.q.push(new ae(t)), e.q.push(new ae(nt.keyField(), \"asc\" /* Direction.ASCENDING */)); else {\n            let t = !1;\n            for (const n of e.explicitOrderBy) e.q.push(n), n.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* Direction.ASCENDING */;\n                e.q.push(new ae(nt.keyField(), t));\n            }\n        }\n    }\n    return e.q;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function Pe(t) {\n    const e = I(t);\n    if (!e.O) if (\"F\" /* LimitType.First */ === e.limitType) e.O = be(e.path, e.collectionGroup, Re(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const n of Re(e)) {\n            const e = \"desc\" /* Direction.DESCENDING */ === n.dir ? \"asc\" /* Direction.ASCENDING */ : \"desc\" /* Direction.DESCENDING */;\n            t.push(new ae(n.field, e));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const n = e.endAt ? new Yt(e.endAt.position, e.endAt.inclusive) : null, r = e.startAt ? new Yt(e.startAt.position, e.startAt.inclusive) : null;\n        // Now return as a LimitType.First query.\n        e.O = be(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n    }\n    return e.O;\n}\n\nfunction Ve(t, e) {\n    e.getFirstInequalityField(), Te(t);\n    const n = t.filters.concat([ e ]);\n    return new Ee(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n}\n\nfunction $e(t, e) {\n    return function(t, e) {\n        if (t.limit !== e.limit) return !1;\n        if (t.orderBy.length !== e.orderBy.length) return !1;\n        for (let n = 0; n < t.orderBy.length; n++) if (!he(t.orderBy[n], e.orderBy[n])) return !1;\n        if (t.filters.length !== e.filters.length) return !1;\n        for (let n = 0; n < t.filters.length; n++) if (!te(t.filters[n], e.filters[n])) return !1;\n        return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!Ht(t.startAt, e.startAt) && Ht(t.endAt, e.endAt);\n    }(Pe(t), Pe(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction Ne(t, e) {\n    return function(t) {\n        return \"number\" == typeof t && Number.isInteger(t) && !wt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n    }(e) ? \n    /**\n * Returns an IntegerValue for `value`.\n */\n    function(t) {\n        return {\n            integerValue: \"\" + t\n        };\n    }(e) : function(t, e) {\n        if (t.useProto3Json) {\n            if (isNaN(e)) return {\n                doubleValue: \"NaN\"\n            };\n            if (e === 1 / 0) return {\n                doubleValue: \"Infinity\"\n            };\n            if (e === -1 / 0) return {\n                doubleValue: \"-Infinity\"\n            };\n        }\n        return {\n            doubleValue: wt(e) ? \"-0\" : e\n        };\n    }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class De {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/** Transforms a value into a server-generated timestamp. */ class Fe extends De {}\n\n/** Transforms an array value via a union operation. */ class xe extends De {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/** Transforms an array value via a remove operation. */ class Se extends De {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class qe extends De {\n    constructor(t, e) {\n        super(), this.serializer = t, this.k = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class Oe {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class ke {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new ke;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new ke(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new ke(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class Ce {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class Me extends Ce {\n    constructor(t, e, n, r = []) {\n        super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, \n        this.type = 0 /* MutationType.Set */;\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ class Le extends Ce {\n    constructor(t, e, n, r, s = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, \n        this.fieldTransforms = s, this.type = 1 /* MutationType.Patch */;\n    }\n    getFieldMask() {\n        return this.fieldMask;\n    }\n}\n\n/** A mutation that deletes the document at the given key. */ class Ue extends Ce {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* MutationType.Delete */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ class je extends Ce {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* MutationType.Verify */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Be = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), Qe = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})(), ze = (() => {\n    const t = {\n        and: \"AND\",\n        or: \"OR\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass We {\n    constructor(t, e) {\n        this.databaseId = t, this.useProto3Json = e;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction Ge(t, e) {\n    if (t.useProto3Json) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Ke(t, e) {\n    return t.useProto3Json ? e.toBase64() : e.toUint8Array();\n}\n\nfunction Ye(t, e) {\n    return Ge(t, e.toTimestamp());\n}\n\nfunction He(t) {\n    return E(!!t), le.fromTimestamp(function(t) {\n        const e = Nt(t);\n        return new xt(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction Je(t, e) {\n    return function(t) {\n        return new tt([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Xe(t, e) {\n    return Je(t.databaseId, e.path);\n}\n\nfunction Ze(t, e) {\n    const n = function(t) {\n        const e = tt.fromString(t);\n        return E(dn(e)), e;\n    }(e);\n    if (n.get(1) !== t.databaseId.projectId) throw new U(P, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n    if (n.get(3) !== t.databaseId.database) throw new U(P, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n    return new rt((E((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n    var r;\n    /** Creates a Document proto from key and fields (but no create/update time) */}\n\nfunction tn(t, e) {\n    return Je(t.databaseId, e);\n}\n\nfunction en(t) {\n    return new tt([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction nn(t, e, n) {\n    return {\n        name: Xe(t, e),\n        fields: n.value.mapValue.fields\n    };\n}\n\nfunction rn(t, e) {\n    return \"found\" in e ? function(t, e) {\n        E(!!e.found), e.found.name, e.found.updateTime;\n        const n = Ze(t, e.found.name), r = He(e.found.updateTime), s = e.found.createTime ? He(e.found.createTime) : le.min(), i = new ge({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return _e.newFoundDocument(n, r, s, i);\n    }(t, e) : \"missing\" in e ? function(t, e) {\n        E(!!e.missing), E(!!e.readTime);\n        const n = Ze(t, e.missing), r = He(e.readTime);\n        return _e.newNoDocument(n, r);\n    }(t, e) : b();\n}\n\nfunction sn(t, e) {\n    let n;\n    if (e instanceof Me) n = {\n        update: nn(t, e.key, e.value)\n    }; else if (e instanceof Ue) n = {\n        delete: Xe(t, e.key)\n    }; else if (e instanceof Le) n = {\n        update: nn(t, e.key, e.data),\n        updateMask: fn(e.fieldMask)\n    }; else {\n        if (!(e instanceof je)) return b();\n        n = {\n            verify: Xe(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((t => function(t, e) {\n        const n = e.transform;\n        if (n instanceof Fe) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (n instanceof xe) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Se) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: n.elements\n            }\n        };\n        if (n instanceof qe) return {\n            fieldPath: e.field.canonicalString(),\n            increment: n.k\n        };\n        throw b();\n    }(0, t)))), e.precondition.isNone || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: Ye(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : b();\n    }(t, e.precondition)), n;\n}\n\nfunction on(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const n = {\n        structuredQuery: {}\n    }, r = e.path;\n    null !== e.collectionGroup ? (n.parent = tn(t, r), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = tn(t, r.popLast()), n.structuredQuery.from = [ {\n        collectionId: r.lastSegment()\n    } ]);\n    const s = function(t) {\n        if (0 === t.length) return;\n        return ln(Zt.create(t, \"and\" /* CompositeOperator.AND */));\n    }(e.filters);\n    s && (n.structuredQuery.where = s);\n    const i = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: hn(t.field),\n                direction: un(t.dir)\n            };\n        }\n        // visible for testing\n        (t)));\n    }(e.orderBy);\n    i && (n.structuredQuery.orderBy = i);\n    const o = function(t, e) {\n        return t.useProto3Json || dt(e) ? e : {\n            value: e\n        };\n    }(t, e.limit);\n    var u;\n    return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n        before: (u = e.startAt).inclusive,\n        values: u.position\n    }), e.endAt && (n.structuredQuery.endAt = function(t) {\n        return {\n            before: !t.inclusive,\n            values: t.position\n        };\n    }\n    // visible for testing\n    (e.endAt)), n;\n}\n\nfunction un(t) {\n    return Be[t];\n}\n\n// visible for testing\nfunction cn(t) {\n    return Qe[t];\n}\n\nfunction an(t) {\n    return ze[t];\n}\n\nfunction hn(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction ln(t) {\n    return t instanceof Xt ? function(t) {\n        if (\"==\" /* Operator.EQUAL */ === t.op) {\n            if (Wt(t.value)) return {\n                unaryFilter: {\n                    field: hn(t.field),\n                    op: \"IS_NAN\"\n                }\n            };\n            if (zt(t.value)) return {\n                unaryFilter: {\n                    field: hn(t.field),\n                    op: \"IS_NULL\"\n                }\n            };\n        } else if (\"!=\" /* Operator.NOT_EQUAL */ === t.op) {\n            if (Wt(t.value)) return {\n                unaryFilter: {\n                    field: hn(t.field),\n                    op: \"IS_NOT_NAN\"\n                }\n            };\n            if (zt(t.value)) return {\n                unaryFilter: {\n                    field: hn(t.field),\n                    op: \"IS_NOT_NULL\"\n                }\n            };\n        }\n        return {\n            fieldFilter: {\n                field: hn(t.field),\n                op: cn(t.op),\n                value: t.value\n            }\n        };\n    }(t) : t instanceof Zt ? function(t) {\n        const e = t.getFilters().map((t => ln(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: an(t.op),\n                filters: e\n            }\n        };\n    }(t) : b();\n}\n\nfunction fn(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction dn(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function wn(t) {\n    return new We(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass mn {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , r = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , s = 6e4) {\n        this.C = t, this.timerId = e, this.M = n, this.L = r, this.U = s, this.j = 0, this.B = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.W = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.j = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    G() {\n        this.j = this.U;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    K(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.j + this.Y()), n = Math.max(0, Date.now() - this.W), r = Math.max(0, e - n);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                r > 0 && y(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.j} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), \n        this.B = this.C.enqueueAfterDelay(this.timerId, r, (() => (this.W = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.j *= this.L, this.j < this.M && (this.j = this.M), this.j > this.U && (this.j = this.U);\n    }\n    H() {\n        null !== this.B && (this.B.skipDelay(), this.B = null);\n    }\n    cancel() {\n        null !== this.B && (this.B.cancel(), this.B = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    Y() {\n        return (Math.random() - .5) * this.j;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass pn extends class {} {\n    constructor(t, e, n, r) {\n        super(), this.authCredentials = t, this.appCheckCredentials = e, this.connection = n, \n        this.serializer = r, this.J = !1;\n    }\n    X() {\n        if (this.J) throw new U(S, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */    v(t, e, n) {\n        return this.X(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([r, s]) => this.connection.v(t, e, n, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */    R(t, e, n, r) {\n        return this.X(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([s, i]) => this.connection.R(t, e, n, s, i, r))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    terminate() {\n        this.J = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function yn(t, e) {\n    const n = I(t), r = en(n.serializer) + \"/documents\", s = {\n        writes: e.map((t => sn(n.serializer, t)))\n    };\n    await n.v(\"Commit\", r, s);\n}\n\nasync function gn(t, e) {\n    const n = I(t), r = en(n.serializer) + \"/documents\", s = {\n        documents: e.map((t => Xe(n.serializer, t)))\n    }, i = await n.R(\"BatchGetDocuments\", r, s, e.length), o = new Map;\n    i.forEach((t => {\n        const e = rn(n.serializer, t);\n        o.set(e.key.toString(), e);\n    }));\n    const u = [];\n    return e.forEach((t => {\n        const e = o.get(t.toString());\n        E(!!e), u.push(e);\n    })), u;\n}\n\nasync function _n(t, e) {\n    const n = I(t), r = on(n.serializer, Pe(e));\n    return (await n.R(\"RunQuery\", r.parent, {\n        structuredQuery: r.structuredQuery\n    })).filter((t => !!t.document)).map((t => function(t, e, n) {\n        const r = Ze(t, e.name), s = He(e.updateTime), i = e.createTime ? He(e.createTime) : le.min(), o = new ge({\n            mapValue: {\n                fields: e.fields\n            }\n        }), u = _e.newFoundDocument(r, s, i, o);\n        return n && u.setHasCommittedMutations(), n ? u.setHasCommittedMutations() : u;\n    }(n.serializer, t.document, void 0)));\n}\n\nasync function vn(t, e, n) {\n    var r;\n    const s = I(t), {request: i, Z: o} = function(t, e, n) {\n        const r = on(t, e), s = {}, i = [];\n        let o = 0;\n        return n.forEach((t => {\n            // Map all client-side aliases to a unique short-form\n            // alias. This avoids issues with client-side aliases that\n            // exceed the 1500-byte string size limit.\n            const e = \"aggregate_\" + o++;\n            s[e] = t.alias, \"count\" === t.$ ? i.push({\n                alias: e,\n                count: {}\n            }) : \"avg\" === t.$ ? i.push({\n                alias: e,\n                avg: {\n                    field: hn(t.fieldPath)\n                }\n            }) : \"sum\" === t.$ && i.push({\n                alias: e,\n                sum: {\n                    field: hn(t.fieldPath)\n                }\n            });\n        })), {\n            request: {\n                structuredAggregationQuery: {\n                    aggregations: i,\n                    structuredQuery: r.structuredQuery\n                },\n                parent: r.parent\n            },\n            Z: s\n        };\n    }(s.serializer, Pe(e), n), u = i.parent;\n    s.connection.g || delete i.parent;\n    const c = (await s.R(\"RunAggregationQuery\", u, i, /*expectedResponseCount=*/ 1)).filter((t => !!t.result));\n    // Omit RunAggregationQueryResponse that only contain readTimes.\n        E(1 === c.length);\n    // Remap the short-form aliases that were sent to the server\n    // to the client-side aliases. Users will access the results\n    // using the client-side alias.\n    const a = null === (r = c[0].result) || void 0 === r ? void 0 : r.aggregateFields;\n    return Object.keys(a).reduce(((t, e) => (t[o[e]] = a[e], t)), {});\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const bn = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction En(t) {\n    if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n    if (!bn.has(t)) {\n        y(\"ComponentProvider\", \"Initializing Datastore\");\n        const i = function(t) {\n            return new _t(t, fetch.bind(null));\n        }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), \n        new J(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, ht(s.experimentalLongPollingOptions), s.useFetchStreams))), o = wn(t._databaseId), u = function(t, e, n, r) {\n            return new pn(t, e, n, r);\n        }(t._authCredentials, t._appCheckCredentials, i, o);\n        bn.set(t, u);\n    }\n    var e, n, r, s;\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */    return bn.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass In {\n    constructor(t) {\n        var e, n;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new U(P, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        this.cache = t.localCache, void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(P, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        !function(t, e, n, r) {\n            if (!0 === e && !0 === r) throw new U(P, `${t} and ${n} cannot be used together.`);\n        }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling), \n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalForceLongPolling ? this.experimentalAutoDetectLongPolling = !1 : void 0 === t.experimentalAutoDetectLongPolling ? this.experimentalAutoDetectLongPolling = true : \n        // For backwards compatibility, coerce the value to boolean even though\n        // the TypeScript compiler has narrowed the type to boolean already.\n        // noinspection PointlessBooleanExpressionJS\n        this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.experimentalLongPollingOptions = ht(null !== (n = t.experimentalLongPollingOptions) && void 0 !== n ? n : {}), \n        function(t) {\n            if (void 0 !== t.timeoutSeconds) {\n                if (isNaN(t.timeoutSeconds)) throw new U(P, `invalid long polling timeout: ${t.timeoutSeconds} (must not be NaN)`);\n                if (t.timeoutSeconds < 5) throw new U(P, `invalid long polling timeout: ${t.timeoutSeconds} (minimum allowed value is 5)`);\n                if (t.timeoutSeconds > 30) throw new U(P, `invalid long polling timeout: ${t.timeoutSeconds} (maximum allowed value is 30)`);\n            }\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        /**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */ (this.experimentalLongPollingOptions), this.useFetchStreams = !!t.useFetchStreams;\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && (e = this.experimentalLongPollingOptions, \n        n = t.experimentalLongPollingOptions, e.timeoutSeconds === n.timeoutSeconds) && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n        var e, n;\n    }\n}\n\nclass Tn {\n    /** @hideconstructor */\n    constructor(t, e, n, r) {\n        this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, \n        this._app = r, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new In({}), \n        this._settingsFrozen = !1;\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new In(t), void 0 !== t.credentials && (this._authCredentials = function(t) {\n            if (!t) return new Q;\n            switch (t.type) {\n              case \"firstParty\":\n                return new K(t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new U(P, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        return function(t) {\n            const e = bn.get(t);\n            e && (y(\"ComponentProvider\", \"Removing Datastore\"), bn.delete(t), e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction An(t, e, n) {\n    n || (n = \"(default)\");\n    const r = _getProvider(t, \"firestore/lite\");\n    if (r.isInitialized(n)) throw new U(S, \"Firestore can only be initialized once per app.\");\n    return r.initialize({\n        options: e,\n        instanceIdentifier: n\n    });\n}\n\nfunction Rn(e, n) {\n    const r = \"object\" == typeof e ? e : t(), s = \"string\" == typeof e ? e : n || \"(default)\", i = _getProvider(r, \"firestore/lite\").getImmediate({\n        identifier: s\n    });\n    if (!i._initialized) {\n        const t = a(\"firestore\");\n        t && Pn(i, ...t);\n    }\n    return i;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function Pn(t, e, n, r = {}) {\n    var s;\n    const i = (t = ct(t, Tn))._getSettings(), o = `${e}:${n}`;\n    if (\"firestore.googleapis.com\" !== i.host && i.host !== o && _(\"Host has been set in both settings() and connectFirestoreEmulator(), emulator host will be used.\"), \n    t._setSettings(Object.assign(Object.assign({}, i), {\n        host: o,\n        ssl: !1\n    })), r.mockUserToken) {\n        let e, n;\n        if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = d.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = h(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n            const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n            if (!i) throw new U(P, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            n = new d(i);\n        }\n        t._authCredentials = new z(new B(e, n));\n    }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function Vn(t) {\n    return t = ct(t, Tn), e(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an aggregation that can be performed by Firestore.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass $n {\n    /**\n     * Create a new AggregateField<T>\n     * @param _aggregateType Specifies the type of aggregation operation to perform.\n     * @param _internalFieldPath Optionally specifies the field that is aggregated.\n     * @internal\n     */\n    constructor(\n    // TODO (sum/avg) make aggregateType public when the feature is supported\n    t = \"count\", e) {\n        this._aggregateType = t, this._internalFieldPath = e, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateField\";\n    }\n}\n\n/**\n * The results of executing an aggregation query.\n */ class Nn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        this._userDataWriter = e, this._data = n, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateQuerySnapshot\", this.query = t;\n    }\n    /**\n     * Returns the results of the aggregations performed over the underlying\n     * query.\n     *\n     * The keys of the returned object will be the same as those of the\n     * `AggregateSpec` object specified to the aggregation method, and the values\n     * will be the corresponding aggregation result.\n     *\n     * @returns The results of the aggregations performed over the underlying\n     * query.\n     */    data() {\n        return this._userDataWriter.convertObjectMap(this._data);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */ class Dn {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._key = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new xn(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new Dn(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class Fn {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._query = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new Fn(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link (query:1)}).\n */ class xn extends Fn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, new Ee(n)), this._path = n, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new Dn(this.firestore, \n        /* converter= */ null, new rt(t));\n    }\n    withConverter(t) {\n        return new xn(this.firestore, t, this._path);\n    }\n}\n\nfunction Sn(t, e, ...n) {\n    if (t = l(t), st(\"collection\", \"path\", e), t instanceof Tn) {\n        const r = tt.fromString(e, ...n);\n        return ot(r), new xn(t, /* converter= */ null, r);\n    }\n    {\n        if (!(t instanceof Dn || t instanceof xn)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return ot(r), new xn(t.firestore, \n        /* converter= */ null, r);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function qn(t, e) {\n    if (t = ct(t, Tn), st(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(P, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new Fn(t, \n    /* converter= */ null, function(t) {\n        return new Ee(tt.emptyPath(), t);\n    }(e));\n}\n\nfunction On(t, e, ...n) {\n    if (t = l(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = Et.N()), st(\"doc\", \"path\", e), t instanceof Tn) {\n        const r = tt.fromString(e, ...n);\n        return it(r), new Dn(t, \n        /* converter= */ null, new rt(r));\n    }\n    {\n        if (!(t instanceof Dn || t instanceof xn)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return it(r), new Dn(t.firestore, t instanceof xn ? t.converter : null, new rt(r));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function kn(t, e) {\n    return t = l(t), e = l(e), (t instanceof Dn || t instanceof xn) && (e instanceof Dn || e instanceof xn) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function Cn(t, e) {\n    return t = l(t), e = l(e), t instanceof Fn && e instanceof Fn && (t.firestore === e.firestore && $e(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class Mn {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new Mn(Vt.fromBase64String(t));\n        } catch (t) {\n            throw new U(P, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new Mn(Vt.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class Ln {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new U(P, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new nt(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function Un() {\n    return new Ln(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class jn {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class Bn {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new U(P, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new U(P, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return It(this._lat, t._lat) || It(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Qn = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class zn {\n    constructor(t, e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new Le(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Me(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class Wn {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return new Le(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction Gn(t) {\n    switch (t) {\n      case 0 /* UserDataSource.Set */ :\n // fall through\n              case 2 /* UserDataSource.MergeSet */ :\n // fall through\n              case 1 /* UserDataSource.Update */ :\n        return !0;\n\n      case 3 /* UserDataSource.Argument */ :\n      case 4 /* UserDataSource.ArrayArgument */ :\n        return !1;\n\n      default:\n        throw b();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class Kn {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, n, r, s, i) {\n        this.settings = t, this.databaseId = e, this.serializer = n, this.ignoreUndefinedProperties = r, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === s && this.tt(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get et() {\n        return this.settings.et;\n    }\n    /** Returns a new context with the specified settings overwritten. */    nt(t) {\n        return new Kn(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.serializer, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    rt(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.nt({\n            path: n,\n            st: !1\n        });\n        return r.it(t), r;\n    }\n    ot(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.nt({\n            path: n,\n            st: !1\n        });\n        return r.tt(), r;\n    }\n    ut(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.nt({\n            path: void 0,\n            st: !0\n        });\n    }\n    ct(t) {\n        return wr(t, this.settings.methodName, this.settings.ht || !1, this.path, this.settings.lt);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    tt() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.it(this.path.get(t));\n    }\n    it(t) {\n        if (0 === t.length) throw this.ct(\"Document fields must not be empty\");\n        if (Gn(this.et) && Qn.test(t)) throw this.ct('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class Yn {\n    constructor(t, e, n) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.serializer = n || wn(t);\n    }\n    /** Creates a new top-level parse context. */    ft(t, e, n, r = !1) {\n        return new Kn({\n            et: t,\n            methodName: e,\n            lt: n,\n            path: nt.emptyPath(),\n            st: !1,\n            ht: r\n        }, this.databaseId, this.serializer, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction Hn(t) {\n    const e = t._freezeSettings(), n = wn(t._databaseId);\n    return new Yn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function Jn(t, e, n, r, s, i = {}) {\n    const o = t.ft(i.merge || i.mergeFields ? 2 /* UserDataSource.MergeSet */ : 0 /* UserDataSource.Set */ , e, n, s);\n    hr(\"Data must be an object, but it was:\", o, r);\n    const u = cr(r, o);\n    let c, a;\n    if (i.merge) c = new ye(o.fieldMask), a = o.fieldTransforms; else if (i.mergeFields) {\n        const t = [];\n        for (const r of i.mergeFields) {\n            const s = lr(e, r, n);\n            if (!o.contains(s)) throw new U(P, `Field '${s}' is specified in your field mask but missing from your input data.`);\n            mr(t, s) || t.push(s);\n        }\n        c = new ye(t), a = o.fieldTransforms.filter((t => c.covers(t.field)));\n    } else c = null, a = o.fieldTransforms;\n    return new zn(new ge(u), c, a);\n}\n\nclass Xn extends jn {\n    _toFieldTransform(t) {\n        if (2 /* UserDataSource.MergeSet */ !== t.et) throw 1 /* UserDataSource.Update */ === t.et ? t.ct(`${this._methodName}() can only appear at the top level of your update data`) : t.ct(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof Xn;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function Zn(t, e, n) {\n    return new Kn({\n        et: 3 /* UserDataSource.Argument */ ,\n        lt: e.settings.lt,\n        methodName: t._methodName,\n        st: n\n    }, e.databaseId, e.serializer, e.ignoreUndefinedProperties);\n}\n\nclass tr extends jn {\n    _toFieldTransform(t) {\n        return new Oe(t.path, new Fe);\n    }\n    isEqual(t) {\n        return t instanceof tr;\n    }\n}\n\nclass er extends jn {\n    constructor(t, e) {\n        super(t), this.dt = e;\n    }\n    _toFieldTransform(t) {\n        const e = Zn(this, t, \n        /*array=*/ !0), n = this.dt.map((t => ur(t, e))), r = new xe(n);\n        return new Oe(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass nr extends jn {\n    constructor(t, e) {\n        super(t), this.dt = e;\n    }\n    _toFieldTransform(t) {\n        const e = Zn(this, t, \n        /*array=*/ !0), n = this.dt.map((t => ur(t, e))), r = new Se(n);\n        return new Oe(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass rr extends jn {\n    constructor(t, e) {\n        super(t), this.wt = e;\n    }\n    _toFieldTransform(t) {\n        const e = new qe(t.serializer, Ne(t.serializer, this.wt));\n        return new Oe(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function sr(t, e, n, r) {\n    const s = t.ft(1 /* UserDataSource.Update */ , e, n);\n    hr(\"Data must be an object, but it was:\", s, r);\n    const i = [], o = ge.empty();\n    Rt(r, ((t, r) => {\n        const u = dr(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r = l(r);\n        const c = s.ot(u);\n        if (r instanceof Xn) \n        // Add it to the field mask, but don't add anything to updateData.\n        i.push(u); else {\n            const t = ur(r, c);\n            null != t && (i.push(u), o.set(u, t));\n        }\n    }));\n    const u = new ye(i);\n    return new Wn(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function ir(t, e, n, r, s, i) {\n    const o = t.ft(1 /* UserDataSource.Update */ , e, n), u = [ lr(e, r, n) ], c = [ s ];\n    if (i.length % 2 != 0) throw new U(P, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < i.length; t += 2) u.push(lr(e, i[t])), c.push(i[t + 1]);\n    const a = [], h = ge.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!mr(a, u[t])) {\n        const e = u[t];\n        let n = c[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = l(n);\n        const r = o.ot(e);\n        if (n instanceof Xn) \n        // Add it to the field mask, but don't add anything to updateData.\n        a.push(e); else {\n            const t = ur(n, r);\n            null != t && (a.push(e), h.set(e, t));\n        }\n    }\n    const f = new ye(a);\n    return new Wn(h, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function or(t, e, n, r = !1) {\n    return ur(n, t.ft(r ? 4 /* UserDataSource.ArrayArgument */ : 3 /* UserDataSource.Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function ur(t, e) {\n    if (ar(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = l(t))) return hr(\"Unsupported field value:\", e, t), cr(t, e);\n    if (t instanceof jn) \n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!Gn(e.et)) throw e.ct(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e.ct(`${t._methodName}() is not currently supported inside arrays`);\n        const n = t._toFieldTransform(e);\n        n && e.fieldTransforms.push(n);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.st && 4 /* UserDataSource.ArrayArgument */ !== e.et) throw e.ct(\"Nested arrays are not supported\");\n        return function(t, e) {\n            const n = [];\n            let r = 0;\n            for (const s of t) {\n                let t = ur(s, e.ut(r));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(t), r++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (null === (t = l(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return Ne(e.serializer, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const n = xt.fromDate(t);\n            return {\n                timestampValue: Ge(e.serializer, n)\n            };\n        }\n        if (t instanceof xt) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const n = new xt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: Ge(e.serializer, n)\n            };\n        }\n        if (t instanceof Bn) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof Mn) return {\n            bytesValue: Ke(e.serializer, t._byteString)\n        };\n        if (t instanceof Dn) {\n            const n = e.databaseId, r = t.firestore._databaseId;\n            if (!r.isEqual(n)) throw e.ct(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n            return {\n                referenceValue: Je(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e.ct(`Unsupported field value: ${ut(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction cr(t, e) {\n    const n = {};\n    return !function(t) {\n        for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n        return !0;\n    }(t) ? Rt(t, ((t, r) => {\n        const s = ur(r, e.rt(t));\n        null != s && (n[t] = s);\n    })) : \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction ar(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof xt || t instanceof Bn || t instanceof Mn || t instanceof Dn || t instanceof jn);\n}\n\nfunction hr(t, e, n) {\n    if (!ar(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        const r = ut(n);\n        throw \"an object\" === r ? e.ct(t + \" a custom object\") : e.ct(t + \" \" + r);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function lr(t, e, n) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = l(e)) instanceof Ln) return e._internalPath;\n    if (\"string\" == typeof e) return dr(t, e);\n    throw wr(\"Field path arguments must be of type string or \", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const fr = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function dr(t, e, n) {\n    if (e.search(fr) >= 0) throw wr(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return new Ln(...e.split(\".\"))._internalPath;\n    } catch (r) {\n        throw wr(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction wr(t, e, n, r, s) {\n    const i = r && !r.isEmpty(), o = void 0 !== s;\n    let u = `Function ${e}() called with invalid data`;\n    n && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let c = \"\";\n    return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), \n    c += \")\"), new U(P, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function mr(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class pr {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, n, r, s) {\n        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, \n        this._converter = s;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new Dn(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new yr(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(vr(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class yr extends pr {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class gr {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._docs = e, this.query = t;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        return [ ...this._docs ];\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._docs.forEach(t, e);\n    }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function _r(t, e) {\n    return t = l(t), e = l(e), t instanceof pr && e instanceof pr ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof gr && e instanceof gr && (Cn(t.query, e.query) && Tt(t.docs, e.docs, _r));\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function vr(t, e) {\n    return \"string\" == typeof e ? dr(t, e) : e instanceof Ln ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An `AppliableConstraint` is an abstraction of a constraint that can be applied\n * to a Firestore query.\n */\nclass br {}\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * (endBefore:1)}, {@link (endAt:1)}, {@link limit}, {@link limitToLast} and\n * can then be passed to {@link (query:1)} to create a new query instance that\n * also contains this `QueryConstraint`.\n */ class Er extends br {}\n\nfunction Ir(t, e, ...n) {\n    let r = [];\n    e instanceof br && r.push(e), r = r.concat(n), function(t) {\n        const e = t.filter((t => t instanceof Rr)).length, n = t.filter((t => t instanceof Tr)).length;\n        if (e > 1 || e > 0 && n > 0) throw new U(P, \"InvalidQuery. When using composite filters, you cannot use more than one filter at the top level. Consider nesting the multiple filters within an `and(...)` statement. For example: change `query(query, where(...), or(...))` to `query(query, and(where(...), or(...)))`.\");\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */ (r);\n    for (const e of r) t = e._apply(t);\n    return t;\n}\n\n/**\n * A `QueryFieldFilterConstraint` is used to narrow the set of documents returned by\n * a Firestore query by filtering on one or more document fields.\n * `QueryFieldFilterConstraint`s are created by invoking {@link where} and can then\n * be passed to {@link (query:1)} to create a new query instance that also contains\n * this `QueryFieldFilterConstraint`.\n */ class Tr extends Er {\n    /**\n     * @internal\n     */\n    constructor(t, e, n) {\n        super(), this._field = t, this._op = e, this._value = n, \n        /** The type of this query constraint */\n        this.type = \"where\";\n    }\n    static _create(t, e, n) {\n        return new Tr(t, e, n);\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return Br(t._query, e), new Fn(t.firestore, t.converter, Ve(t._query, e));\n    }\n    _parse(t) {\n        const e = Hn(t.firestore), n = function(t, e, n, r, s, i, o) {\n            let u;\n            if (s.isKeyField()) {\n                if (\"array-contains\" /* Operator.ARRAY_CONTAINS */ === i || \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === i) throw new U(P, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n                if (\"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i) {\n                    jr(o, i);\n                    const e = [];\n                    for (const n of o) e.push(Ur(r, t, n));\n                    u = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else u = Ur(r, t, o);\n            } else \"in\" /* Operator.IN */ !== i && \"not-in\" /* Operator.NOT_IN */ !== i && \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ !== i || jr(o, i), \n            u = or(n, e, o, \n            /* allowArrays= */ \"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i);\n            return Xt.create(s, i, u);\n        }(t._query, \"where\", e, t.firestore._databaseId, this._field, this._op, this._value);\n        return n;\n    }\n}\n\n/**\n * Creates a {@link QueryFieldFilterConstraint} that enforces that documents\n * must contain the specified field and that the value should satisfy the\n * relation constraint provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link QueryFieldFilterConstraint}.\n */ function Ar(t, e, n) {\n    const r = e, s = vr(\"where\", t);\n    return Tr._create(s, r, n);\n}\n\n/**\n * A `QueryCompositeFilterConstraint` is used to narrow the set of documents\n * returned by a Firestore query by performing the logical OR or AND of multiple\n * {@link QueryFieldFilterConstraint}s or {@link QueryCompositeFilterConstraint}s.\n * `QueryCompositeFilterConstraint`s are created by invoking {@link or} or\n * {@link and} and can then be passed to {@link (query:1)} to create a new query\n * instance that also contains the `QueryCompositeFilterConstraint`.\n */ class Rr extends br {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e) {\n        super(), this.type = t, this._queryConstraints = e;\n    }\n    static _create(t, e) {\n        return new Rr(t, e);\n    }\n    _parse(t) {\n        const e = this._queryConstraints.map((e => e._parse(t))).filter((t => t.getFilters().length > 0));\n        return 1 === e.length ? e[0] : Zt.create(e, this._getOperator());\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return 0 === e.getFilters().length ? t : (function(t, e) {\n            let n = t;\n            const r = e.getFlattenedFilters();\n            for (const t of r) Br(n, t), n = Ve(n, t);\n        }\n        // Checks if any of the provided filter operators are included in the given list of filters and\n        // returns the first one that is, or null if none are.\n        (t._query, e), new Fn(t.firestore, t.converter, Ve(t._query, e)));\n    }\n    _getQueryConstraints() {\n        return this._queryConstraints;\n    }\n    _getOperator() {\n        return \"and\" === this.type ? \"and\" /* CompositeOperator.AND */ : \"or\" /* CompositeOperator.OR */;\n    }\n}\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a disjunction of\n * the given filter constraints. A disjunction filter includes a document if it\n * satisfies any of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a disjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n */ function Pr(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => zr(\"or\", t))), Rr._create(\"or\" /* CompositeOperator.OR */ , t);\n}\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a conjunction of\n * the given filter constraints. A conjunction filter includes a document if it\n * satisfies all of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a conjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n */ function Vr(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => zr(\"and\", t))), Rr._create(\"and\" /* CompositeOperator.AND */ , t);\n}\n\n/**\n * A `QueryOrderByConstraint` is used to sort the set of documents returned by a\n * Firestore query. `QueryOrderByConstraint`s are created by invoking\n * {@link orderBy} and can then be passed to {@link (query:1)} to create a new query\n * instance that also contains this `QueryOrderByConstraint`.\n *\n * Note: Documents that do not contain the orderBy field will not be present in\n * the query result.\n */ class $r extends Er {\n    /**\n     * @internal\n     */\n    constructor(t, e) {\n        super(), this._field = t, this._direction = e, \n        /** The type of this query constraint */\n        this.type = \"orderBy\";\n    }\n    static _create(t, e) {\n        return new $r(t, e);\n    }\n    _apply(t) {\n        const e = function(t, e, n) {\n            if (null !== t.startAt) throw new U(P, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new U(P, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const r = new ae(e, n);\n            return function(t, e) {\n                if (null === Ie(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const n = Te(t);\n                    null !== n && Qr(t, n, e.field);\n                }\n            }(t, r), r;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this._field, this._direction);\n        return new Fn(t.firestore, t.converter, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const n = t.explicitOrderBy.concat([ e ]);\n            return new Ee(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryOrderByConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * Note: Documents that do not contain the specified field will not be present\n * in the query result.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link QueryOrderByConstraint}.\n */ function Nr(t, e = \"asc\") {\n    const n = e, r = vr(\"orderBy\", t);\n    return $r._create(r, n);\n}\n\n/**\n * A `QueryLimitConstraint` is used to limit the number of documents returned by\n * a Firestore query.\n * `QueryLimitConstraint`s are created by invoking {@link limit} or\n * {@link limitToLast} and can then be passed to {@link (query:1)} to create a new\n * query instance that also contains this `QueryLimitConstraint`.\n */ class Dr extends Er {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._limit = e, this._limitType = n;\n    }\n    static _create(t, e, n) {\n        return new Dr(t, e, n);\n    }\n    _apply(t) {\n        return new Fn(t.firestore, t.converter, function(t, e, n) {\n            return new Ee(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n        }(t._query, this._limit, this._limitType));\n    }\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the first matching\n * documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function Fr(t) {\n    return at(\"limit\", t), Dr._create(\"limit\", t, \"F\" /* LimitType.First */);\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the last matching\n * documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function xr(t) {\n    return at(\"limitToLast\", t), Dr._create(\"limitToLast\", t, \"L\" /* LimitType.Last */);\n}\n\n/**\n * A `QueryStartAtConstraint` is used to exclude documents from the start of a\n * result set returned by a Firestore query.\n * `QueryStartAtConstraint`s are created by invoking {@link (startAt:1)} or\n * {@link (startAfter:1)} and can then be passed to {@link (query:1)} to create a\n * new query instance that also contains this `QueryStartAtConstraint`.\n */ class Sr extends Er {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new Sr(t, e, n);\n    }\n    _apply(t) {\n        const e = Lr(t, this.type, this._docOrFields, this._inclusive);\n        return new Fn(t.firestore, t.converter, function(t, e) {\n            return new Ee(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction qr(...t) {\n    return Sr._create(\"startAt\", t, \n    /*inclusive=*/ !0);\n}\n\nfunction Or(...t) {\n    return Sr._create(\"startAfter\", t, \n    /*inclusive=*/ !1);\n}\n\n/**\n * A `QueryEndAtConstraint` is used to exclude documents from the end of a\n * result set returned by a Firestore query.\n * `QueryEndAtConstraint`s are created by invoking {@link (endAt:1)} or\n * {@link (endBefore:1)} and can then be passed to {@link (query:1)} to create a new\n * query instance that also contains this `QueryEndAtConstraint`.\n */ class kr extends Er {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new kr(t, e, n);\n    }\n    _apply(t) {\n        const e = Lr(t, this.type, this._docOrFields, this._inclusive);\n        return new Fn(t.firestore, t.converter, function(t, e) {\n            return new Ee(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction Cr(...t) {\n    return kr._create(\"endBefore\", t, \n    /*inclusive=*/ !1);\n}\n\nfunction Mr(...t) {\n    return kr._create(\"endAt\", t, \n    /*inclusive=*/ !0);\n}\n\n/** Helper function to create a bound from a document or fields */ function Lr(t, e, n, r) {\n    if (n[0] = l(n[0]), n[0] instanceof pr) return function(t, e, n, r, s) {\n        if (!r) throw new U($, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n        const i = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const n of Re(t)) if (n.field.isKeyField()) i.push(Bt(e, r.key)); else {\n            const t = r.data.field(n.field);\n            if (St(t)) throw new U(P, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = n.field.canonicalString();\n                throw new U(P, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            i.push(t);\n        }\n        return new Yt(i, s);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, n[0]._document, r);\n    {\n        const s = Hn(t.firestore);\n        return function(t, e, n, r, s, i) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (s.length > o.length) throw new U(P, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let i = 0; i < s.length; i++) {\n                const c = s[i];\n                if (o[i].field.isKeyField()) {\n                    if (\"string\" != typeof c) throw new U(P, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n                    if (!Ae(t) && -1 !== c.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n                    const n = t.path.child(tt.fromString(c));\n                    if (!rt.isDocumentKey(n)) throw new U(P, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n                    const s = new rt(n);\n                    u.push(Bt(e, s));\n                } else {\n                    const t = or(n, r, c);\n                    u.push(t);\n                }\n            }\n            return new Yt(u, i);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, s, e, n, r);\n    }\n}\n\nfunction Ur(t, e, n) {\n    if (\"string\" == typeof (n = l(n))) {\n        if (\"\" === n) throw new U(P, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!Ae(e) && -1 !== n.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n        const r = e.path.child(tt.fromString(n));\n        if (!rt.isDocumentKey(r)) throw new U(P, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n        return Bt(t, new rt(r));\n    }\n    if (n instanceof Dn) return Bt(t, n._key);\n    throw new U(P, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${ut(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function jr(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new U(P, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n}\n\n/**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * This is not a comprehensive check, and this function should be removed in the\n * long term. Validations should occur in the Firestore backend.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one inequality per query.\n * 2. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n */ function Br(t, e) {\n    if (e.isInequality()) {\n        const n = Te(t), r = e.field;\n        if (null !== n && !n.isEqual(r)) throw new U(P, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${r.toString()}'`);\n        const s = Ie(t);\n        null !== s && Qr(t, r, s);\n    }\n    const n = function(t, e) {\n        for (const n of t) for (const t of n.getFlattenedFilters()) if (e.indexOf(t.op) >= 0) return t.op;\n        return null;\n    }(t.filters, function(t) {\n        switch (t) {\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return [ \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ :\n          case \"in\" /* Operator.IN */ :\n            return [ \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"not-in\" /* Operator.NOT_IN */ :\n            return [ \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ , \"!=\" /* Operator.NOT_EQUAL */ ];\n\n          default:\n            return [];\n        }\n    }(e.op));\n    if (null !== n) \n    // Special case when it's a duplicate op to give a slightly clearer error message.\n    throw n === e.op ? new U(P, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new U(P, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n}\n\nfunction Qr(t, e, n) {\n    if (!n.isEqual(e)) throw new U(P, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\nfunction zr(t, e) {\n    if (!(e instanceof Tr || e instanceof Rr)) throw new U(P, `Function ${t}() requires AppliableConstraints created with a call to 'where(...)', 'or(...)', or 'and(...)'.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction Wr(t, e, n) {\n    let r;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, \n    r;\n}\n\nclass Gr extends class {\n    convertValue(t, e = \"none\") {\n        switch (Ct(t)) {\n          case 0 /* TypeOrder.NullValue */ :\n            return null;\n\n          case 1 /* TypeOrder.BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* TypeOrder.NumberValue */ :\n            return Dt(t.integerValue || t.doubleValue);\n\n          case 3 /* TypeOrder.TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* TypeOrder.ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* TypeOrder.StringValue */ :\n            return t.stringValue;\n\n          case 6 /* TypeOrder.BlobValue */ :\n            return this.convertBytes(Ft(t.bytesValue));\n\n          case 7 /* TypeOrder.RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* TypeOrder.GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* TypeOrder.ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* TypeOrder.ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw b();\n        }\n    }\n    convertObject(t, e) {\n        return this.convertObjectMap(t.fields, e);\n    }\n    /**\n     * @internal\n     */    convertObjectMap(t, e = \"none\") {\n        const n = {};\n        return Rt(t, ((t, r) => {\n            n[t] = this.convertValue(r, e);\n        })), n;\n    }\n    convertGeoPoint(t) {\n        return new Bn(Dt(t.latitude), Dt(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const n = qt(t);\n            return null == n ? null : this.convertValue(n, e);\n\n          case \"estimate\":\n            return this.convertTimestamp(Ot(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = Nt(t);\n        return new xt(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const n = tt.fromString(t);\n        E(dn(n));\n        const r = new X(n.get(1), n.get(3)), s = new rt(n.popFirst(5));\n        return r.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        g(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        s;\n    }\n} {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new Mn(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new Dn(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */ function Kr(t) {\n    const e = En((t = ct(t, Dn)).firestore), n = new Gr(t.firestore);\n    return gn(e, [ t._key ]).then((e => {\n        E(1 === e.length);\n        const r = e[0];\n        return new pr(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n    }));\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */ function Yr(t) {\n    !function(t) {\n        if (\"L\" /* LimitType.Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new U(k, \"limitToLast() queries require specifying at least one orderBy() clause\");\n    }((t = ct(t, Fn))._query);\n    const e = En(t.firestore), n = new Gr(t.firestore);\n    return _n(e, t._query).then((e => {\n        const r = e.map((e => new yr(t.firestore, n, e.key, e, t.converter)));\n        return \"L\" /* LimitType.Last */ === t._query.limitType && \n        // Limit to last queries reverse the orderBy constraint that was\n        // specified by the user. As such, we need to reverse the order of the\n        // results to return the documents in the expected order.\n        r.reverse(), new gr(t, r);\n    }));\n}\n\nfunction Hr(t, e, n) {\n    const r = Wr((t = ct(t, Dn)).converter, e, n), s = Jn(Hn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n    return yn(En(t.firestore), [ s.toMutation(t._key, ke.none()) ]);\n}\n\nfunction Jr(t, e, n, ...r) {\n    const s = Hn((t = ct(t, Dn)).firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n        let i;\n    i = \"string\" == typeof (e = l(e)) || e instanceof Ln ? ir(s, \"updateDoc\", t._key, e, n, r) : sr(s, \"updateDoc\", t._key, e);\n    return yn(En(t.firestore), [ i.toMutation(t._key, ke.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */ function Xr(t) {\n    return yn(En((t = ct(t, Dn)).firestore), [ new Ue(t._key, ke.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */ function Zr(t, e) {\n    const n = On(t = ct(t, xn)), r = Wr(t.converter, e), s = Jn(Hn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n    return yn(En(t.firestore), [ s.toMutation(n._key, ke.exists(!1)) ]).then((() => n));\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Calculates the number of documents in the result set of the given query,\n * without actually downloading the documents.\n *\n * Using this function to count the documents is efficient because only the\n * final count, not the documents' data, is downloaded. This function can even\n * count the documents if the result set would be prohibitively large to\n * download entirely (e.g. thousands of documents).\n *\n * @param query - The query whose result set size to calculate.\n * @returns A Promise that will be resolved with the count; the count can be\n * retrieved from `snapshot.data().count`, where `snapshot` is the\n * `AggregateQuerySnapshot` to which the returned Promise resolves.\n */ function ts(t) {\n    return es(t, {\n        count: ss()\n    });\n}\n\n/**\n * Calculates the specified aggregations over the documents in the result\n * set of the given query, without actually downloading the documents.\n *\n * Using this function to perform aggregations is efficient because only the\n * final aggregation values, not the documents' data, is downloaded. This\n * function can even perform aggregations of the documents if the result set\n * would be prohibitively large to download entirely (e.g. thousands of documents).\n *\n * @param query The query whose result set to aggregate over.\n * @param aggregateSpec An `AggregateSpec` object that specifies the aggregates\n * to perform over the result set. The AggregateSpec specifies aliases for each\n * aggregate, which can be used to retrieve the aggregate result.\n * @example\n * ```typescript\n * const aggregateSnapshot = await getAggregate(query, {\n *   countOfDocs: count(),\n *   totalHours: sum('hours'),\n *   averageScore: average('score')\n * });\n *\n * const countOfDocs: number = aggregateSnapshot.data().countOfDocs;\n * const totalHours: number = aggregateSnapshot.data().totalHours;\n * const averageScore: number | null = aggregateSnapshot.data().averageScore;\n * ```\n * @internal TODO (sum/avg) remove when public\n */ function es(t, e) {\n    const n = ct(t.firestore, Tn), r = En(n), s = function(t, e) {\n        const n = [];\n        for (const r in t) Object.prototype.hasOwnProperty.call(t, r) && n.push(e(t[r], r, t));\n        return n;\n    }(e, ((t, e) => new vt(e, t._aggregateType, t._internalFieldPath)));\n    // Run the aggregation and convert the results\n    return vn(r, t._query, s).then((e => function(t, e, n) {\n        const r = new Gr(t);\n        return new Nn(e, r, n);\n    }\n    /**\n * Create an AggregateField object that can be used to compute the sum of\n * a specified field over a range of documents in the result set of a query.\n * @param field Specifies the field to sum across the result set.\n * @internal TODO (sum/avg) remove when public\n */ (n, t, e)));\n}\n\nfunction ns(t) {\n    return new $n(\"sum\", lr(\"sum\", t));\n}\n\n/**\n * Create an AggregateField object that can be used to compute the average of\n * a specified field over a range of documents in the result set of a query.\n * @param field Specifies the field to average across the result set.\n * @internal TODO (sum/avg) remove when public\n */ function rs(t) {\n    return new $n(\"avg\", lr(\"average\", t));\n}\n\n/**\n * Create an AggregateField object that can be used to compute the count of\n * documents in the result set of a query.\n * @internal TODO (sum/avg) remove when public\n */ function ss() {\n    return new $n(\"count\");\n}\n\n/**\n * Compares two 'AggregateField` instances for equality.\n *\n * @param left Compare this AggregateField to the `right`.\n * @param right Compare this AggregateField to the `left`.\n * @internal TODO (sum/avg) remove when public\n */ function is(t, e) {\n    var n, r;\n    return t instanceof $n && e instanceof $n && t._aggregateType === e._aggregateType && (null === (n = t._internalFieldPath) || void 0 === n ? void 0 : n.canonicalString()) === (null === (r = e._internalFieldPath) || void 0 === r ? void 0 : r.canonicalString());\n}\n\n/**\n * Compares two `AggregateQuerySnapshot` instances for equality.\n *\n * Two `AggregateQuerySnapshot` instances are considered \"equal\" if they have\n * underlying queries that compare equal, and the same data.\n *\n * @param left - The first `AggregateQuerySnapshot` to compare.\n * @param right - The second `AggregateQuerySnapshot` to compare.\n *\n * @returns `true` if the objects are \"equal\", as defined above, or `false`\n * otherwise.\n */ function os(t, e) {\n    return Cn(t.query, e.query) && f(t.data(), e.data());\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function us() {\n    return new Xn(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function cs() {\n    return new tr(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function as(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new er(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function hs(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new nr(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function ls(t) {\n    return new rr(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class fs {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = Hn(t);\n    }\n    set(t, e, n) {\n        this._verifyNotCommitted();\n        const r = ds(t, this._firestore), s = Wr(r.converter, e, n), i = Jn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n        return this._mutations.push(i.toMutation(r._key, ke.none())), this;\n    }\n    update(t, e, n, ...r) {\n        this._verifyNotCommitted();\n        const s = ds(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof Ln ? ir(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : sr(this._dataReader, \"WriteBatch.update\", s._key, e), \n        this._mutations.push(i.toMutation(s._key, ke.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = ds(t, this._firestore);\n        return this._mutations = this._mutations.concat(new Ue(e._key, ke.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction ds(t, e) {\n    if ((t = l(t)).firestore !== e) throw new U(P, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */ function ws(t) {\n    const e = En(t = ct(t, Tn));\n    return new fs(t, (t => yn(e, t)));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ class ms {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new U(P, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await gn(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new Ue(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const n = rt.fromPath(e);\n            this.mutations.push(new je(n, this.precondition(n)));\n        })), await yn(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw b();\n            // Represent a deleted doc using SnapshotVersion.min().\n            e = le.min();\n        }\n        const n = this.readVersions.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new U(q, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(le.min()) ? ke.exists(!1) : ke.updateTime(e) : ke.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(le.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new U(P, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return ke.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return ke.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const ps = {\n    maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass ys {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, \n        this.deferred = s, this.yt = n.maxAttempts, this.gt = new mn(this.asyncQueue, \"transaction_retry\" /* TimerId.TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this.yt -= 1, this._t();\n    }\n    _t() {\n        this.gt.K((async () => {\n            const t = new ms(this.datastore), e = this.vt(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.bt(t);\n                }))));\n            })).catch((t => {\n                this.bt(t);\n            }));\n        }));\n    }\n    vt(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !dt(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    bt(t) {\n        this.yt > 0 && this.Et(t) ? (this.yt -= 1, this.asyncQueue.enqueueAndForget((() => (this._t(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    Et(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || \"already-exists\" === e || !\n            /**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n            function(t) {\n                switch (t) {\n                  default:\n                    return b();\n\n                  case A:\n                  case R:\n                  case V:\n                  case x:\n                  case C:\n                  case M:\n // Unauthenticated means something went wrong with our token and we need\n                    // to retry with new credentials which will happen automatically.\n                                      case F:\n                    return !1;\n\n                  case P:\n                  case $:\n                  case N:\n                  case D:\n                  case S:\n // Aborted might be retried in some scenarios, but that is dependant on\n                    // the context and should handled individually by the calling code.\n                    // See https://cloud.google.com/apis/design/errors.\n                                      case q:\n                  case O:\n                  case k:\n                  case L:\n                    return !0;\n                }\n            }(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */ function gs() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ class _s {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, \n        this.deferred = new j, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, n, r, s) {\n        const i = Date.now() + n, o = new _s(t, e, i, r, s);\n        return o.start(n), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(A, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class vs {\n    constructor() {\n        // The last promise in the queue.\n        this.It = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.Tt = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.At = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.Rt = [], \n        // visible for testing\n        this.Pt = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.Vt = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.$t = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.Nt = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.gt = new mn(this, \"async_queue_retry\" /* TimerId.AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.Dt = () => {\n            const t = gs();\n            t && y(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.gt.H();\n        };\n        const t = gs();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Dt);\n    }\n    get isShuttingDown() {\n        return this.At;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.Ft(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.xt(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.At) {\n            this.At = !0, this.$t = t || !1;\n            const e = gs();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Dt);\n        }\n    }\n    enqueue(t) {\n        if (this.Ft(), this.At) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new j;\n        return this.xt((() => this.At && this.$t ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.Tt.push(t), this.St())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async St() {\n        if (0 !== this.Tt.length) {\n            try {\n                await this.Tt[0](), this.Tt.shift(), this.gt.reset();\n            } catch (t) {\n                if (!\n                /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function(t) {\n                    // Use name equality, as instanceof checks on errors don't work with errors\n                    // that wrap other errors.\n                    return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t)) throw t;\n // Failure will be handled by AsyncQueue\n                                y(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.Tt.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.gt.K((() => this.St()));\n        }\n    }\n    xt(t) {\n        const e = this.It.then((() => (this.Vt = !0, t().catch((t => {\n            this.Pt = t, this.Vt = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n            // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n            // legacy SDK.\n            /**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw g(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.Vt = !1, t))))));\n        return this.It = e, e;\n    }\n    enqueueAfterDelay(t, e, n) {\n        this.Ft(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.Nt.indexOf(t) > -1 && (e = 0);\n        const r = _s.createAndSchedule(this, t, e, n, (t => this.qt(t)));\n        return this.Rt.push(r), r;\n    }\n    Ft() {\n        this.Pt && b();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async Ot() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.It, await t;\n        } while (t !== this.It);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    kt(t) {\n        for (const e of this.Rt) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    Ct(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.Ot().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.Rt.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.Rt) if (e.skipDelay(), \"all\" /* TimerId.All */ !== t && e.timerId === t) break;\n            return this.Ot();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Mt(t) {\n        this.Nt.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    qt(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.Rt.indexOf(t);\n        this.Rt.splice(e, 1);\n    }\n}\n\nclass bs {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = Hn(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = ds(t, this._firestore), n = new Gr(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return b();\n            const r = t[0];\n            if (r.isFoundDocument()) return new pr(this._firestore, n, r.key, r, e.converter);\n            if (r.isNoDocument()) return new pr(this._firestore, n, e._key, null, e.converter);\n            throw b();\n        }));\n    }\n    set(t, e, n) {\n        const r = ds(t, this._firestore), s = Wr(r.converter, e, n), i = Jn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n        return this._transaction.set(r._key, i), this;\n    }\n    update(t, e, n, ...r) {\n        const s = ds(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof Ln ? ir(this._dataReader, \"Transaction.update\", s._key, e, n, r) : sr(this._dataReader, \"Transaction.update\", s._key, e), \n        this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = ds(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function Es(t, e, n) {\n    const r = En(t = ct(t, Tn)), s = Object.assign(Object.assign({}, ps), n);\n    !function(t) {\n        if (t.maxAttempts < 1) throw new U(P, \"Max attempts must be at least 1\");\n    }(s);\n    const i = new j;\n    return new ys(new vs, r, s, (n => e(new bs(t, n))), i).run(), i.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */ !function(t) {\n    w = t;\n}(`${s}_lite`), n(new i(\"firestore/lite\", ((t, {instanceIdentifier: e, options: n}) => {\n    const r = t.getProvider(\"app\").getImmediate(), s = new Tn(new W(t.getProvider(\"auth-internal\")), new H(t.getProvider(\"app-check-internal\")), function(t, e) {\n        if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new U(P, '\"projectId\" not provided in firebase.initializeApp.');\n        return new X(t.options.projectId, e);\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (r, e), r);\n    return n && s._setSettings(n), s;\n}), \"PUBLIC\").setMultipleInstances(!0)), \n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nr(\"firestore-lite\", \"3.13.0\", \"\"), r(\"firestore-lite\", \"3.13.0\", \"__BUILD_TARGET__\");\n\nexport { $n as AggregateField, Nn as AggregateQuerySnapshot, Mn as Bytes, xn as CollectionReference, Dn as DocumentReference, pr as DocumentSnapshot, Ln as FieldPath, jn as FieldValue, Tn as Firestore, U as FirestoreError, Bn as GeoPoint, Fn as Query, Rr as QueryCompositeFilterConstraint, Er as QueryConstraint, yr as QueryDocumentSnapshot, kr as QueryEndAtConstraint, Tr as QueryFieldFilterConstraint, Dr as QueryLimitConstraint, $r as QueryOrderByConstraint, gr as QuerySnapshot, Sr as QueryStartAtConstraint, xt as Timestamp, bs as Transaction, fs as WriteBatch, Zr as addDoc, is as aggregateFieldEqual, os as aggregateQuerySnapshotEqual, Vr as and, hs as arrayRemove, as as arrayUnion, rs as average, Sn as collection, qn as collectionGroup, Pn as connectFirestoreEmulator, ss as count, Xr as deleteDoc, us as deleteField, On as doc, Un as documentId, Mr as endAt, Cr as endBefore, es as getAggregate, ts as getCount, Kr as getDoc, Yr as getDocs, Rn as getFirestore, ls as increment, An as initializeFirestore, Fr as limit, xr as limitToLast, Pr as or, Nr as orderBy, Ir as query, Cn as queryEqual, kn as refEqual, Es as runTransaction, cs as serverTimestamp, Hr as setDoc, p as setLogLevel, _r as snapshotEqual, Or as startAfter, qr as startAt, ns as sum, Vn as terminate, Jr as updateDoc, Ar as where, ws as writeBatch };\n//# sourceMappingURL=index.browser.esm2017.js.map\n"]},"metadata":{},"sourceType":"module"}